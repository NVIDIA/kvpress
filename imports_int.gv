digraph "imports_int" {
rankdir=LR
charset="utf-8"
URL="." node[shape="box"]
"torch" [];
"torch._VF" [];
"torch.__config__" [];
"torch._deploy" [];
"torch._guards" [];
"torch._jit_internal" [];
"torch._linalg_utils" [];
"torch._lobpcg" [];
"torch._lowrank" [];
"torch._meta_registrations" [];
"torch._ops" [];
"torch._streambase" [];
"torch._tensor" [];
"torch._tensor_str" [];
"torch._utils" [];
"torch._utils_internal" [];
"torch._vmap_internals" [];
"torch._weights_only_unpickler" [];
"torch.functional" [];
"torch.hub" [];
"torch.library" [];
"torch.overrides" [];
"torch.quasirandom" [];
"torch.random" [];
"torch.return_types" [];
"torch.serialization" [];
"torch.storage" [];
"torch.types" [];
"torch._C" [];
"torch._classes" [];
"torch._python_dispatcher" [];
"torch._size_docs" [];
"torch._sources" [];
"torch._storage_docs" [];
"torch._tensor_docs" [];
"torch._torch_docs" [];
"torch._VF" [];
"torch.__config__" [];
"torch.__future__" [];
"torch._awaits" [];
"torch._classes" [];
"torch._compile" [];
"torch._custom_op.autograd" [];
"torch._custom_op.functional" [];
"torch._custom_op.impl" [];
"torch._custom_op.impl" [];
"torch._custom_ops" [];
"torch._decomp" [];
"torch._decomp.decompositions" [];
"torch._decomp.decompositions_for_jvp" [];
"torch._decomp.decompositions_for_rng" [];
"torch._decomp.decompositions" [];
"torch._dispatch.python" [];
"torch._dynamo" [];
"torch._dynamo.eval_frame" [];
"torch._dynamo.test_case" [];
"torch._dynamo.test_minifier_common" [];
"torch._dynamo.testing" [];
"torch._dynamo.trace_rules" [];
"torch._dynamo.backends" [];
"torch._dynamo.backends.registry" [];
"torch._dynamo.backends.common" [];
"torch._dynamo.backends.cudagraphs" [];
"torch._dynamo.backends.debugging" [];
"torch._dynamo.backends.torchxla" [];
"torch._dynamo.backends.tvm" [];
"torch._dynamo.backends.debugging" [];
"torch._dynamo.convert_frame" [];
"torch._dynamo.backends.distributed" [];
"torch._dynamo.backends.registry" [];
"torch._dynamo.backends.onnxrt" [];
"torch._dynamo.output_graph" [];
"torch._dynamo.bytecode_analysis" [];
"torch._dynamo.bytecode_transformation" [];
"torch._dynamo.symbolic_convert" [];
"torch._dynamo.bytecode_transformation" [];
"torch._dynamo.codegen" [];
"torch._dynamo.resume_execution" [];
"torch._dynamo.side_effects" [];
"torch._dynamo.source" [];
"torch._dynamo.cache_size" [];
"torch._dynamo.callback" [];
"torch._dynamo.code_context" [];
"torch._dynamo.codegen" [];
"torch._dynamo.comptime" [];
"torch._dynamo.decorators" [];
"torch._dynamo.config" [];
"torch._dynamo.debug_utils" [];
"torch._dynamo.distributed" [];
"torch._dynamo.exc" [];
"torch._dynamo.guards" [];
"torch._dynamo.mutation_guard" [];
"torch._dynamo.pgo" [];
"torch._dynamo.utils" [];
"torch._dynamo.convert_frame" [];
"torch._dynamo.current_scope_id" [];
"torch._dynamo.decorators" [];
"torch._dynamo.distributed" [];
"torch._dynamo.eval_frame" [];
"torch._dynamo.compiled_autograd" [];
"torch._dynamo.exc" [];
"torch._dynamo.external_utils" [];
"torch._dynamo.funcname_cache" [];
"torch._dynamo.graph_deduplication" [];
"torch._dynamo.graph_region_tracker" [];
"torch._dynamo.guards" [];
"torch._dynamo.hooks" [];
"torch._dynamo.logging" [];
"torch._dynamo.metrics_context" [];
"torch._dynamo.mutation_guard" [];
"torch._dynamo.output_graph" [];
"torch._dynamo.pgo" [];
"torch._dynamo.polyfills" [];
"torch._dynamo.polyfills.loader" [];
"torch._dynamo.polyfills.builtins" [];
"torch._dynamo.polyfills.functools" [];
"torch._dynamo.polyfills.itertools" [];
"torch._dynamo.polyfills.loader" [];
"torch._dynamo.polyfills.operator" [];
"torch._dynamo.polyfills.os" [];
"torch._dynamo.polyfills.pytree" [];
"torch._dynamo.polyfills.sys" [];
"torch._dynamo.replay_record" [];
"torch._dynamo.repro.after_dynamo" [];
"torch._dynamo.resume_execution" [];
"torch._dynamo.side_effects" [];
"torch._dynamo.source" [];
"torch._dynamo.symbolic_convert" [];
"torch._dynamo.test_case" [];
"torch._dynamo.testing" [];
"torch._dynamo.trace_rules" [];
"torch._dynamo.types" [];
"torch._dynamo.utils" [];
"torch._dynamo.profiler" [];
"torch._dynamo.variables" [];
"torch._dynamo.variables.base" [];
"torch._dynamo.variables.builtin" [];
"torch._dynamo.variables.constant" [];
"torch._dynamo.variables.ctx_manager" [];
"torch._dynamo.variables.dicts" [];
"torch._dynamo.variables.distributed" [];
"torch._dynamo.variables.functions" [];
"torch._dynamo.variables.higher_order_ops" [];
"torch._dynamo.variables.iter" [];
"torch._dynamo.variables.lists" [];
"torch._dynamo.variables.misc" [];
"torch._dynamo.variables.nn_module" [];
"torch._dynamo.variables.optimizer" [];
"torch._dynamo.variables.tensor" [];
"torch._dynamo.variables.torch" [];
"torch._dynamo.variables.user_defined" [];
"torch._dynamo.variables.base" [];
"torch._dynamo.variables.builder" [];
"torch._dynamo.variables.lazy" [];
"torch._dynamo.variables.script_object" [];
"torch._dynamo.variables.sdpa" [];
"torch._dynamo.variables.torch_function" [];
"torch._dynamo.variables.builder" [];
"torch._dynamo.variables.builtin" [];
"torch._dynamo.variables.constant" [];
"torch._dynamo.variables.ctx_manager" [];
"torch._dynamo.variables.dicts" [];
"torch._dynamo.variables.distributed" [];
"torch._dynamo.variables.functions" [];
"torch._dynamo.variables.higher_order_ops" [];
"torch._dynamo.variables.iter" [];
"torch._dynamo.variables.lazy" [];
"torch._dynamo.variables.lists" [];
"torch._dynamo.variables.misc" [];
"torch._dynamo.variables.nn_module" [];
"torch._dynamo.variables.optimizer" [];
"torch._dynamo.variables.script_object" [];
"torch._dynamo.variables.sdpa" [];
"torch._dynamo.variables.tensor" [];
"torch._dynamo.variables.torch" [];
"torch._dynamo.variables.torch_function" [];
"torch._dynamo.variables.user_defined" [];
"torch._export.db.examples" [];
"torch._export.db.gen_example" [];
"torch._export.db.logging" [];
"torch._export.non_strict_utils" [];
"torch._export" [];
"torch._export.pass_infra.node_metadata" [];
"torch._export.pass_base" [];
"torch._export.pass_infra.proxy_value" [];
"torch._export.passes._node_metadata_hook" [];
"torch._export.passes.insert_custom_op_guards" [];
"torch._export.utils" [];
"torch._export.passes.add_runtime_assertions_for_constraints_pass" [];
"torch._export.passes.lift_constants_pass" [];
"torch._export.passes.replace_quantized_ops_with_standard_ops_pass" [];
"torch._export.converter" [];
"torch._export.passes.replace_view_ops_with_view_copy_ops_pass" [];
"torch._export.passes" [];
"torch._export.passes.replace_with_hop_pass_util" [];
"torch._export.passes.replace_autocast_with_hop_pass" [];
"torch._export.passes.replace_set_grad_with_hop_pass" [];
"torch._export.serde.schema" [];
"torch._export.serde.aoti_schema" [];
"torch._export.serde.schema_check" [];
"torch._export.serde.serialize" [];
"torch._export.serde.serialize" [];
"torch._export.serde.dynamic_shapes" [];
"torch._export.serde.union" [];
"torch._export.utils" [];
"torch._export.wrappers" [];
"torch._functorch._activation_checkpointing.knapsack" [];
"torch._functorch.partitioners" [];
"torch._functorch._aot_autograd.autograd_cache" [];
"torch._functorch._aot_autograd.jit_compile_runtime_wrappers" [];
"torch._functorch.aot_autograd" [];
"torch._functorch._aot_autograd.collect_metadata_analysis" [];
"torch._functorch._aot_autograd.input_output_analysis" [];
"torch._functorch._aot_autograd.runtime_wrappers" [];
"torch._functorch._aot_autograd.traced_function_transforms" [];
"torch._functorch._aot_autograd.dispatch_and_compile_graph" [];
"torch._functorch._aot_autograd.functional_utils" [];
"torch._functorch._aot_autograd.schemas" [];
"torch._functorch._aot_autograd.input_output_analysis" [];
"torch._functorch._aot_autograd.jit_compile_runtime_wrappers" [];
"torch._functorch._aot_autograd.logging_utils" [];
"torch._functorch._aot_autograd.runtime_wrappers" [];
"torch._functorch._aot_autograd.schemas" [];
"torch._functorch._aot_autograd.subclass_utils" [];
"torch._functorch._aot_autograd.subclass_utils" [];
"torch._functorch._aot_autograd.traced_function_transforms" [];
"torch._functorch._aot_autograd.utils" [];
"torch._functorch.aot_autograd" [];
"torch._functorch.compilers" [];
"torch._functorch.apis" [];
"torch._functorch.autograd_function" [];
"torch._functorch.deprecated" [];
"torch._functorch.eager_transforms" [];
"torch._functorch.autograd_function" [];
"torch._functorch.compile_utils" [];
"torch._functorch.fx_minifier" [];
"torch._functorch.config" [];
"torch._functorch.eager_transforms" [];
"torch._functorch.make_functional" [];
"torch._functorch.partitioners" [];
"torch._functorch.pyfunctorch" [];
"torch._functorch.utils" [];
"torch._functorch.batch_norm_replacement" [];
"torch._functorch.functional_call" [];
"torch._functorch.vmap" [];
"torch._higher_order_ops.cond" [];
"torch._higher_order_ops" [];
"torch._higher_order_ops.effects" [];
"torch._higher_order_ops.torchbind" [];
"torch._higher_order_ops.flex_attention" [];
"torch._higher_order_ops.foreach_map" [];
"torch._higher_order_ops.hints_wrap" [];
"torch._higher_order_ops.invoke_subgraph" [];
"torch._higher_order_ops.prim_hop_base" [];
"torch._higher_order_ops.prim_hop_base" [];
"torch._higher_order_ops.scan" [];
"torch._higher_order_ops.torchbind" [];
"torch._higher_order_ops.utils" [];
"torch._higher_order_ops.associative_scan" [];
"torch._higher_order_ops.map" [];
"torch._higher_order_ops.out_dtype" [];
"torch._higher_order_ops.run_const_graph" [];
"torch._higher_order_ops.strict_mode" [];
"torch._higher_order_ops.while_loop" [];
"torch._higher_order_ops.while_loop" [];
"torch._inductor" [];
"torch._inductor.async_compile" [];
"torch._inductor.autotune_process" [];
"torch._inductor.compile_fx" [];
"torch._inductor.scheduler" [];
"torch._inductor.select_algorithm" [];
"torch._inductor.autoheuristic.autoheuristic_utils" [];
"torch._inductor.autoheuristic.autoheuristic" [];
"torch._inductor.autoheuristic.learned_heuristic_controller" [];
"torch._inductor.autoheuristic.learnedheuristic_interface" [];
"torch._inductor.autoheuristic.learned_heuristic_controller" [];
"torch._inductor.autoheuristic.learnedheuristic_interface" [];
"torch._inductor.autotune_process" [];
"torch._inductor.bounds" [];
"torch._inductor.loop_body" [];
"torch._inductor.choices" [];
"torch._inductor.virtualized" [];
"torch._inductor.codecache" [];
"torch._inductor.aoti_eager" [];
"torch._inductor.cpp_builder" [];
"torch._inductor.cpu_vec_isa" [];
"torch._inductor.graph" [];
"torch._inductor.metrics" [];
"torch._inductor.output_code" [];
"torch._inductor.utils" [];
"torch._inductor.wrapper_benchmark" [];
"torch._inductor.codegen.aoti_hipify_utils" [];
"torch._inductor.codegen.cpp_wrapper_cpu" [];
"torch._inductor.codegen.cpp_wrapper_gpu" [];
"torch._inductor.codegen.block_analysis" [];
"torch._inductor.codegen.triton" [];
"torch._inductor.codegen.common" [];
"torch._inductor.codegen.cpp" [];
"torch._inductor.codegen.cpp_micro_gemm" [];
"torch._inductor.codegen.cpp_template" [];
"torch._inductor.codegen.cpp_template_kernel" [];
"torch._inductor.codegen.cpp_utils" [];
"torch._inductor.codegen.cpu_device_op_overrides" [];
"torch._inductor.codegen.halide" [];
"torch._inductor.codegen.multi_kernel" [];
"torch._inductor.codegen.simd" [];
"torch._inductor.codegen.triton_combo_kernel" [];
"torch._inductor.codegen.triton_utils" [];
"torch._inductor.codegen.wrapper" [];
"torch._inductor.decomposition" [];
"torch._inductor.dependencies" [];
"torch._inductor.ir" [];
"torch._inductor.lowering" [];
"torch._inductor.codegen.cpp" [];
"torch._inductor.codegen.cpp_flex_attention_template" [];
"torch._inductor.codegen.cpp_gemm_template" [];
"torch._inductor.codegen.cpp_gemm_template" [];
"torch._inductor.codegen.cpp_bmm_template" [];
"torch._inductor.mkldnn_lowerings" [];
"torch._inductor.quantized_lowerings" [];
"torch._inductor.codegen.cpp_micro_gemm" [];
"torch._inductor.codegen.cpp_template" [];
"torch._inductor.codegen.cpp_template_kernel" [];
"torch._inductor.codegen.cpp_utils" [];
"torch._inductor.codegen.cpp_wrapper_cpu_array_ref" [];
"torch._inductor.codegen.cpp_wrapper_cpu" [];
"torch._inductor.codegen.cpp_wrapper_cpu_array_ref" [];
"torch._inductor.codegen.cpp_wrapper_gpu" [];
"torch._inductor.codegen.cpu_device_op_overrides" [];
"torch._inductor.codegen.cuda.cuda_cpp_scheduling" [];
"torch._inductor.codegen.cuda_combined_scheduling" [];
"torch._inductor.codegen.cuda.cuda_env" [];
"torch._inductor.codegen.cuda.cutlass_utils" [];
"torch._inductor.codegen.cuda.cuda_kernel" [];
"torch._inductor.codegen.cuda.cuda_template" [];
"torch._inductor.codegen.cuda.gemm_template" [];
"torch._inductor.codegen.cuda.cuda_template" [];
"torch._inductor.codegen.cuda.cutlass_utils" [];
"torch._inductor.codegen.cuda.device_op_overrides" [];
"torch._inductor.codegen.cuda_combined_scheduling" [];
"torch._inductor.codegen.debug_utils" [];
"torch._inductor.codegen.halide" [];
"torch._inductor.codegen.memory_planning" [];
"torch._inductor.codegen.multi_kernel" [];
"torch._inductor.codegen.rocm.ck_template" [];
"torch._inductor.codegen.rocm.ck_conv_template" [];
"torch._inductor.codegen.rocm.ck_universal_gemm_template" [];
"torch._inductor.codegen.rocm.compile_command" [];
"torch._inductor.codegen.rocm.rocm_benchmark_request" [];
"torch._inductor.codegen.rocm.rocm_kernel" [];
"torch._inductor.codegen.rocm.rocm_template" [];
"torch._inductor.codegen.rocm.rocm_cpp_scheduling" [];
"torch._inductor.codegen.rocm.rocm_kernel" [];
"torch._inductor.codegen.rocm.rocm_template" [];
"torch._inductor.codegen.rocm.rocm_template_buffer" [];
"torch._inductor.codegen.simd" [];
"torch._inductor.codegen.simd_kernel_features" [];
"torch._inductor.codegen.triton_split_scan" [];
"torch._inductor.codegen.simd_kernel_features" [];
"torch._inductor.codegen.triton" [];
"torch._inductor.codegen.triton_combo_kernel" [];
"torch._inductor.codegen.triton_split_scan" [];
"torch._inductor.codegen.triton_utils" [];
"torch._inductor.codegen.wrapper" [];
"torch._inductor.codegen.xpu.device_op_overrides" [];
"torch._inductor.comm_analysis" [];
"torch._inductor.comm_lowering" [];
"torch._inductor.comms" [];
"torch._inductor.compile_fx" [];
"torch._inductor.cudagraph_trees" [];
"torch._inductor.debug" [];
"torch._inductor.compile_worker.subproc_pool" [];
"torch._inductor.compile_worker.__main__" [];
"torch._inductor.compile_worker.watchdog" [];
"torch._inductor.compiler_bisector" [];
"torch._inductor.config" [];
"torch._inductor.dtype_propagation" [];
"torch._inductor.exc" [];
"torch._inductor.freezing" [];
"torch._inductor.mock_cache" [];
"torch._inductor.pattern_matcher" [];
"torch._inductor.remote_cache" [];
"torch._inductor.test_case" [];
"torch._inductor.triton_bundler" [];
"torch._inductor.constant_folding" [];
"torch._inductor.cpp_builder" [];
"torch._inductor.cpu_vec_isa" [];
"torch._inductor.cudagraph_trees" [];
"torch._inductor.cudagraph_utils" [];
"torch._inductor.custom_graph_pass" [];
"torch._inductor.debug" [];
"torch._inductor.decomposition" [];
"torch._inductor.dependencies" [];
"torch._inductor.memory" [];
"torch._inductor.exc" [];
"torch._inductor.subgraph_lowering" [];
"torch._inductor.extern_node_serializer" [];
"torch._inductor.freezing" [];
"torch._inductor.fx_passes" [];
"torch._inductor.fx_passes.pre_grad" [];
"torch._inductor.fx_passes.b2b_gemm" [];
"torch._inductor.fx_passes.post_grad" [];
"torch._inductor.fx_passes.binary_folding" [];
"torch._inductor.fx_passes.freezing_patterns" [];
"torch._inductor.fx_passes.ddp_fusion" [];
"torch._inductor.fx_passes.decompose_mem_bound_mm" [];
"torch._inductor.fx_passes.dedupe_symint_uses" [];
"torch._inductor.fx_passes.joint_graph" [];
"torch._inductor.fx_passes.efficient_conv_bn_eval" [];
"torch._inductor.fx_passes.freezing_patterns" [];
"torch._inductor.fx_passes.mkldnn_fusion" [];
"torch._inductor.fx_passes.quantization" [];
"torch._inductor.fx_passes.fuse_attention" [];
"torch._inductor.fx_passes.group_batch_fusion" [];
"torch._inductor.fx_passes.split_cat" [];
"torch._inductor.fx_passes.joint_graph" [];
"torch._inductor.fx_passes.misc_patterns" [];
"torch._inductor.fx_passes.pad_mm" [];
"torch._inductor.fx_passes.micro_pipeline_tp" [];
"torch._inductor.fx_passes.misc_patterns" [];
"torch._inductor.fx_passes.mkldnn_fusion" [];
"torch._inductor.fx_passes.numeric_utils" [];
"torch._inductor.fx_passes.pad_mm" [];
"torch._inductor.fx_passes.post_grad" [];
"torch._inductor.fx_passes.pre_grad" [];
"torch._inductor.fx_passes.quantization" [];
"torch._inductor.fx_passes.reinplace" [];
"torch._inductor.fx_passes.replace_random" [];
"torch._inductor.fx_passes.split_cat" [];
"torch._inductor.graph" [];
"torch._inductor.index_propagation" [];
"torch._inductor.inductor_prims" [];
"torch._inductor.ir" [];
"torch._inductor.jagged_lowerings" [];
"torch._inductor.mkldnn_ir" [];
"torch._inductor.ops_handler" [];
"torch._inductor.jagged_lowerings" [];
"torch._inductor.kernel" [];
"torch._inductor.kernel.flex_attention" [];
"torch._inductor.kernel.flex_decoding" [];
"torch._inductor.kernel.flex_decoding" [];
"torch._inductor.kernel.mm" [];
"torch._inductor.kernel.mm_common" [];
"torch._inductor.kernel.bmm" [];
"torch._inductor.kernel.conv" [];
"torch._inductor.kernel.mm_plus_mm" [];
"torch._inductor.kernel.mm_scaled" [];
"torch._inductor.kernel.unpack_mixed_mm" [];
"torch._inductor.kernel.mm_plus_mm" [];
"torch._inductor.kernel.unpack_mixed_mm" [];
"torch._inductor.loop_body" [];
"torch._inductor.optimize_indexing" [];
"torch._inductor.lowering" [];
"torch._inductor.fx_utils" [];
"torch._inductor.memory" [];
"torch._inductor.metrics" [];
"torch._inductor.mkldnn_ir" [];
"torch._inductor.mkldnn_lowerings" [];
"torch._inductor.ops_handler" [];
"torch._inductor.output_code" [];
"torch._inductor.package" [];
"torch._inductor.package.package" [];
"torch._inductor.package.pt2_archive_constants" [];
"torch._inductor.pattern_matcher" [];
"torch._inductor.quantized_lowerings" [];
"torch._inductor.remote_cache" [];
"torch._inductor.runtime.autotune_cache" [];
"torch._inductor.runtime.triton_heuristics" [];
"torch._inductor.runtime.benchmarking" [];
"torch._inductor.runtime.cache_dir_utils" [];
"torch._inductor.runtime.runtime_utils" [];
"torch._inductor.runtime.compile_tasks" [];
"torch._inductor.runtime.coordinate_descent_tuner" [];
"torch._inductor.runtime.hints" [];
"torch._inductor.runtime.runtime_utils" [];
"torch._inductor.sizevars" [];
"torch._inductor.runtime.triton_helpers" [];
"torch._inductor.runtime.triton_heuristics" [];
"torch._inductor.scheduler" [];
"torch._inductor.select_algorithm" [];
"torch._inductor.sizevars" [];
"torch._inductor.subgraph_lowering" [];
"torch._inductor.test_operators" [];
"torch._inductor.triton_bundler" [];
"torch._inductor.utils" [];
"torch._inductor.virtualized" [];
"torch._inductor.wrapper_benchmark" [];
"torch._jit_internal" [];
"torch._lazy" [];
"torch._lazy.extract_compiled_graph" [];
"torch._lazy.closure" [];
"torch._lazy.computation" [];
"torch._lazy.debug" [];
"torch._lazy.device_context" [];
"torch._lazy.metrics" [];
"torch._lazy.tensor_factory_functions" [];
"torch._library" [];
"torch._library.autograd" [];
"torch._library.custom_ops" [];
"torch._library.custom_ops" [];
"torch._library.triton" [];
"torch._library.fake_class_registry" [];
"torch._library.fake_impl" [];
"torch._library.simple_registry" [];
"torch._library.infer_schema" [];
"torch._library.simple_registry" [];
"torch._library.triton" [];
"torch._library.utils" [];
"torch._linalg_utils" [];
"torch._lobpcg" [];
"torch._logging" [];
"torch._logging._internal" [];
"torch._logging._registrations" [];
"torch._logging.structured" [];
"torch._logging._registrations" [];
"torch._logging.structured" [];
"torch._lowrank" [];
"torch._meta_registrations" [];
"torch._namedtensor_internals" [];
"torch._numpy._binary_ufuncs_impl" [];
"torch._numpy._ufuncs" [];
"torch._numpy._casting_dicts" [];
"torch._numpy._dtypes_impl" [];
"torch._numpy._dtypes" [];
"torch._numpy" [];
"torch._numpy._funcs_impl" [];
"torch._numpy._getlimits" [];
"torch._numpy._ndarray" [];
"torch._numpy._normalizations" [];
"torch._numpy._dtypes_impl" [];
"torch._numpy._reductions_impl" [];
"torch._numpy._util" [];
"torch._numpy.fft" [];
"torch._numpy.linalg" [];
"torch._numpy.random" [];
"torch._numpy._funcs" [];
"torch._numpy._funcs_impl" [];
"torch._numpy._getlimits" [];
"torch._numpy._ndarray" [];
"torch._numpy._normalizations" [];
"torch._numpy._reductions_impl" [];
"torch._numpy._ufuncs" [];
"torch._numpy._unary_ufuncs_impl" [];
"torch._numpy._util" [];
"torch._numpy.fft" [];
"torch._numpy.linalg" [];
"torch._numpy.random" [];
"torch._numpy.testing.utils" [];
"torch._numpy.testing" [];
"torch._ops" [];
"torch._prims" [];
"torch._prims.context" [];
"torch._prims.rng_prims" [];
"torch._prims.context" [];
"torch._prims.executor" [];
"torch._prims.debug_prims" [];
"torch._prims.rng_prims" [];
"torch._prims_common" [];
"torch._prims_common.wrappers" [];
"torch._prims_common.wrappers" [];
"torch._refs" [];
"torch._refs._conversions" [];
"torch._refs._conversions" [];
"torch._refs.fft" [];
"torch._refs.linalg" [];
"torch._refs.nn.functional" [];
"torch._refs.special" [];
"torch._size_docs" [];
"torch._sources" [];
"torch._storage_docs" [];
"torch._strobelight.cli_function_profiler" [];
"torch._strobelight.compile_time_profiler" [];
"torch._strobelight.compile_time_profiler" [];
"torch._subclasses" [];
"torch._subclasses._fake_tensor_utils" [];
"torch._subclasses.fake_tensor" [];
"torch._subclasses.fake_impls" [];
"torch._subclasses.fake_tensor" [];
"torch._subclasses.fake_utils" [];
"torch._subclasses.meta_utils" [];
"torch._subclasses.fake_utils" [];
"torch._subclasses.functional_tensor" [];
"torch._subclasses.meta_utils" [];
"torch._subclasses.schema_check_mode" [];
"torch._tensor" [];
"torch._tensor_docs" [];
"torch._tensor_str" [];
"torch._torch_docs" [];
"torch._utils" [];
"torch._utils_internal" [];
"torch._vendor.packaging._structures" [];
"torch._vendor.packaging.version" [];
"torch._vendor.packaging.version" [];
"torch.torch_version" [];
"torch._weights_only_unpickler" [];
"torch.accelerator" [];
"torch.accelerator._utils" [];
"torch.amp" [];
"torch.amp.autocast_mode" [];
"torch.amp.grad_scaler" [];
"torch.ao" [];
"torch.ao.nn.intrinsic.modules" [];
"torch.ao.nn.intrinsic" [];
"torch.ao.nn.intrinsic.modules.fused" [];
"torch.ao.nn.intrinsic.qat.modules" [];
"torch.ao.nn.intrinsic.qat" [];
"torch.ao.nn.intrinsic.qat.modules.conv_fused" [];
"torch.ao.nn.intrinsic.qat.modules.linear_fused" [];
"torch.ao.nn.intrinsic.qat.modules.linear_relu" [];
"torch.ao.nn.intrinsic.quantized.dynamic.modules" [];
"torch.ao.nn.intrinsic.quantized.dynamic" [];
"torch.ao.nn.intrinsic.quantized.dynamic.modules.linear_relu" [];
"torch.ao.nn.intrinsic.quantized.modules" [];
"torch.ao.nn.intrinsic.quantized" [];
"torch.ao.nn.intrinsic.quantized.modules.bn_relu" [];
"torch.ao.nn.intrinsic.quantized.modules.conv_add" [];
"torch.ao.nn.intrinsic.quantized.modules.conv_relu" [];
"torch.ao.nn.intrinsic.quantized.modules.linear_relu" [];
"torch.ao.nn.qat.dynamic.modules" [];
"torch.ao.nn.qat.dynamic" [];
"torch.ao.nn.qat.dynamic.modules.linear" [];
"torch.ao.nn.qat.modules" [];
"torch.ao.nn.qat" [];
"torch.ao.nn.qat.modules.conv" [];
"torch.ao.nn.qat.modules.embedding_ops" [];
"torch.ao.nn.qat.modules.linear" [];
"torch.ao.nn.quantizable.modules" [];
"torch.ao.nn.quantizable" [];
"torch.ao.nn.quantizable.modules.activation" [];
"torch.ao.nn.quantizable.modules.rnn" [];
"torch.ao.nn.quantized.dynamic.modules" [];
"torch.ao.nn.quantized.dynamic" [];
"torch.ao.nn.quantized.dynamic.modules.conv" [];
"torch.ao.nn.quantized.dynamic.modules.linear" [];
"torch.ao.nn.quantized.dynamic.modules.rnn" [];
"torch.ao.nn.quantized.functional" [];
"torch.ao.nn.quantized" [];
"torch.ao.nn.quantized.modules" [];
"torch.ao.nn.quantized.modules.activation" [];
"torch.ao.nn.quantized.modules.batchnorm" [];
"torch.ao.nn.quantized.modules.conv" [];
"torch.ao.nn.quantized.modules.dropout" [];
"torch.ao.nn.quantized.modules.embedding_ops" [];
"torch.ao.nn.quantized.modules.functional_modules" [];
"torch.ao.nn.quantized.modules.linear" [];
"torch.ao.nn.quantized.modules.normalization" [];
"torch.ao.nn.quantized.modules.rnn" [];
"torch.ao.nn.quantized.modules.utils" [];
"torch.ao.nn.quantized.reference.modules" [];
"torch.ao.nn.quantized.reference" [];
"torch.ao.nn.quantized.reference.modules.conv" [];
"torch.ao.nn.quantized.reference.modules.linear" [];
"torch.ao.nn.quantized.reference.modules.rnn" [];
"torch.ao.nn.quantized.reference.modules.sparse" [];
"torch.ao.nn.quantized.reference.modules.utils" [];
"torch.ao.nn.sparse.quantized" [];
"torch.ao.nn.sparse" [];
"torch.ao.nn.sparse.quantized.dynamic" [];
"torch.ao.nn.sparse.quantized.dynamic.linear" [];
"torch.ao.nn.sparse.quantized.linear" [];
"torch.ao.ns.fx.graph_matcher" [];
"torch.ao.ns._numeric_suite_fx" [];
"torch.ao.ns.fx.graph_passes" [];
"torch.ao.ns.fx.n_shadows_utils" [];
"torch.ao.ns.fx.mappings" [];
"torch.ao.ns.fx.n_shadows_utils" [];
"torch.ao.ns.fx.ns_types" [];
"torch.ao.ns.fx.pattern_utils" [];
"torch.ao.ns.fx.utils" [];
"torch.ao.ns.fx.weight_utils" [];
"torch.ao.ns.fx.pattern_utils" [];
"torch.ao.ns.fx.qconfig_multi_mapping" [];
"torch.ao.ns.fx.utils" [];
"torch.ao.ns.fx.weight_utils" [];
"torch.ao.pruning._experimental.data_scheduler.base_data_scheduler" [];
"torch.ao.pruning._experimental.data_scheduler" [];
"torch.ao.pruning._experimental.data_sparsifier.base_data_sparsifier" [];
"torch.ao.pruning._experimental.data_sparsifier" [];
"torch.ao.pruning._experimental.data_sparsifier.data_norm_sparsifier" [];
"torch.ao.pruning._experimental.data_sparsifier.data_norm_sparsifier" [];
"torch.ao.pruning._experimental.data_sparsifier.lightning.callbacks._data_sparstity_utils" [];
"torch.ao.pruning._experimental.data_sparsifier.lightning.callbacks.data_sparsity" [];
"torch.ao.pruning._experimental.pruner.FPGM_pruner" [];
"torch.ao.pruning._experimental.pruner" [];
"torch.ao.pruning._experimental.pruner.base_structured_sparsifier" [];
"torch.ao.pruning._experimental.pruner.lstm_saliency_pruner" [];
"torch.ao.pruning._experimental.pruner.saliency_pruner" [];
"torch.ao.pruning._experimental.pruner.lstm_saliency_pruner" [];
"torch.ao.pruning._experimental.pruner.match_utils" [];
"torch.ao.pruning._experimental.pruner.parametrization" [];
"torch.ao.pruning._experimental.pruner.prune_functions" [];
"torch.ao.pruning._experimental.pruner.prune_functions" [];
"torch.ao.pruning._experimental.pruner.saliency_pruner" [];
"torch.ao.pruning._mappings" [];
"torch.ao.pruning" [];
"torch.ao.pruning.scheduler.base_scheduler" [];
"torch.ao.pruning.scheduler.cubic_scheduler" [];
"torch.ao.pruning.scheduler.lambda_scheduler" [];
"torch.ao.pruning.scheduler.cubic_scheduler" [];
"torch.ao.pruning.scheduler.lambda_scheduler" [];
"torch.ao.pruning.sparsifier.base_sparsifier" [];
"torch.ao.pruning.sparsifier.nearly_diagonal_sparsifier" [];
"torch.ao.pruning.sparsifier.weight_norm_sparsifier" [];
"torch.ao.pruning.sparsifier.nearly_diagonal_sparsifier" [];
"torch.ao.pruning.sparsifier.utils" [];
"torch.ao.pruning.sparsifier.weight_norm_sparsifier" [];
"torch.ao.quantization" [];
"torch.ao.quantization._correct_bias" [];
"torch.ao.quantization.backend_config" [];
"torch.ao.quantization.backend_config._qnnpack_pt2e" [];
"torch.ao.quantization.quantize_fx" [];
"torch.ao.quantization.backend_config._common_operator_config_utils" [];
"torch.ao.quantization.backend_config.executorch" [];
"torch.ao.quantization.backend_config.fbgemm" [];
"torch.ao.quantization.backend_config.native" [];
"torch.ao.quantization.backend_config.onednn" [];
"torch.ao.quantization.backend_config.qnnpack" [];
"torch.ao.quantization.backend_config.tensorrt" [];
"torch.ao.quantization.backend_config.x86" [];
"torch.ao.quantization.backend_config.backend_config" [];
"torch.ao.quantization.backend_config.utils" [];
"torch.ao.quantization.backend_config.executorch" [];
"torch.ao.quantization.backend_config.fbgemm" [];
"torch.ao.quantization.backend_config.native" [];
"torch.ao.quantization.backend_config.onednn" [];
"torch.ao.quantization.backend_config.qnnpack" [];
"torch.ao.quantization.backend_config.tensorrt" [];
"torch.ao.quantization.fake_quantize" [];
"torch.ao.quantization.qconfig" [];
"torch.ao.quantization.qconfig_mapping" [];
"torch.ao.quantization.quantization_mappings" [];
"torch.ao.quantization.fuse_modules" [];
"torch.ao.quantization.fuser_method_mappings" [];
"torch.ao.quantization.fx._decomposed" [];
"torch.ao.quantization.fx.convert" [];
"torch.ao.quantization.fx.utils" [];
"torch.ao.quantization.fx._equalize" [];
"torch.ao.quantization.fx.prepare" [];
"torch.ao.quantization.fx._lower_to_native_backend" [];
"torch.ao.quantization.fx.lower_to_fbgemm" [];
"torch.ao.quantization.fx.lower_to_qnnpack" [];
"torch.ao.quantization.fx._model_report.detector" [];
"torch.ao.quantization.fx._model_report.model_report" [];
"torch.ao.quantization.fx._model_report.model_report_observer" [];
"torch.ao.quantization.fx._model_report.model_report_visualizer" [];
"torch.ao.quantization.fx.convert" [];
"torch.ao.quantization.fx" [];
"torch.ao.quantization.fx.custom_config" [];
"torch.ao.quantization.fx.fuse" [];
"torch.ao.quantization.fx.fuse_handler" [];
"torch.ao.quantization.fx.fuse" [];
"torch.ao.quantization.fx.fuse_handler" [];
"torch.ao.quantization.fx.graph_module" [];
"torch.ao.quantization.fx.match_utils" [];
"torch.ao.quantization.fx.lower_to_fbgemm" [];
"torch.ao.quantization.fx.match_utils" [];
"torch.ao.quantization.fx.pattern_utils" [];
"torch.ao.quantization.fx.prepare" [];
"torch.ao.quantization.fx.qconfig_mapping_utils" [];
"torch.ao.quantization.fx.quantize_handler" [];
"torch.ao.quantization.fx.tracer" [];
"torch.ao.quantization.fx.utils" [];
"torch.ao.quantization.observer" [];
"torch.ao.quantization.quantize" [];
"torch.ao.quantization.utils" [];
"torch.ao.quantization.pt2e._numeric_debugger" [];
"torch.ao.quantization.pt2e.duplicate_dq_pass" [];
"torch.ao.quantization.quantize_pt2e" [];
"torch.ao.quantization.pt2e.export_utils" [];
"torch.ao.quantization.pt2e.qat_utils" [];
"torch.ao.quantization.pt2e.graph_utils" [];
"torch.ao.quantization.pt2e.port_metadata_pass" [];
"torch.ao.quantization.pt2e.prepare" [];
"torch.ao.quantization.pt2e.qat_utils" [];
"torch.ao.quantization.pt2e.representation" [];
"torch.ao.quantization.pt2e.representation.rewrite" [];
"torch.ao.quantization.pt2e.utils" [];
"torch.ao.quantization.qconfig" [];
"torch.ao.quantization.quantize_jit" [];
"torch.ao.quantization.qconfig_mapping" [];
"torch.ao.quantization.quant_type" [];
"torch.ao.quantization.quantization_mappings" [];
"torch.ao.quantization.quantize" [];
"torch.ao.quantization.quantize_fx" [];
"torch.ao.quantization.quantize_jit" [];
"torch.ao.quantization.quantizer" [];
"torch.ao.quantization.quantizer.xnnpack_quantizer" [];
"torch.ao.quantization.quantizer.xnnpack_quantizer_utils" [];
"torch.ao.quantization.quantizer.quantizer" [];
"torch.ao.quantization.quantizer.composable_quantizer" [];
"torch.ao.quantization.quantizer.embedding_quantizer" [];
"torch.ao.quantization.quantizer.utils" [];
"torch.ao.quantization.quantizer.x86_inductor_quantizer" [];
"torch.ao.quantization.quantizer.xpu_inductor_quantizer" [];
"torch.ao.quantization.quantizer.utils" [];
"torch.ao.quantization.quantizer.x86_inductor_quantizer" [];
"torch.ao.quantization.quantizer.xnnpack_quantizer_utils" [];
"torch.ao.quantization.stubs" [];
"torch.ao.quantization.utils" [];
"torch.autograd" [];
"torch.autograd.profiler" [];
"torch.autograd.profiler_legacy" [];
"torch.autograd.profiler_util" [];
"torch.autograd._functions" [];
"torch.autograd._functions.tensor" [];
"torch.autograd.anomaly_mode" [];
"torch.autograd.forward_ad" [];
"torch.autograd.functional" [];
"torch.autograd.function" [];
"torch.autograd.functional" [];
"torch.autograd.grad_mode" [];
"torch.autograd.gradcheck" [];
"torch.autograd.graph" [];
"torch.autograd.profiler" [];
"torch.autograd.profiler_util" [];
"torch.autograd.variable" [];
"torch.backends" [];
"torch.backends._nnapi.serializer" [];
"torch.backends._nnapi.prepare" [];
"torch.backends.cpu" [];
"torch.backends.cuda" [];
"torch.backends.cudnn" [];
"torch.backends.cusparselt" [];
"torch.backends.mha" [];
"torch.backends.mkl" [];
"torch.backends.mkldnn" [];
"torch.backends.mps" [];
"torch.backends.nnpack" [];
"torch.backends.openmp" [];
"torch.backends.opt_einsum" [];
"torch.backends.quantized" [];
"torch.compiler" [];
"torch.cpu" [];
"torch.cpu.amp" [];
"torch.cpu.amp.autocast_mode" [];
"torch.cpu.amp.grad_scaler" [];
"torch.cuda" [];
"torch.cuda.memory" [];
"torch.cuda.nccl" [];
"torch.cuda.profiler" [];
"torch.cuda.random" [];
"torch.cuda._gpu_trace" [];
"torch.cuda._sanitizer" [];
"torch.cuda._memory_viz" [];
"torch.cuda._sanitizer" [];
"torch.cuda._utils" [];
"torch.cuda.amp" [];
"torch.cuda.amp.autocast_mode" [];
"torch.cuda.amp.common" [];
"torch.cuda.amp.grad_scaler" [];
"torch.cuda.gds" [];
"torch.cuda.graphs" [];
"torch.cuda.jiterator" [];
"torch.cuda.memory" [];
"torch.cuda.nvtx" [];
"torch.cuda.profiler" [];
"torch.cuda.random" [];
"torch.cuda.sparse" [];
"torch.cuda.streams" [];
"torch.cuda.tunable" [];
"torch.distributed" [];
"torch.distributed._functional_collectives" [];
"torch.distributed._state_dict_utils" [];
"torch.distributed.c10d_logger" [];
"torch.distributed.collective_utils" [];
"torch.distributed.device_mesh" [];
"torch.distributed.rendezvous" [];
"torch.distributed.utils" [];
"torch.distributed._composable.checkpoint_activation" [];
"torch.distributed._composable" [];
"torch.distributed._composable.contract" [];
"torch.distributed._composable.replicate" [];
"torch.distributed._composable.fsdp.fully_shard" [];
"torch.distributed._composable.fsdp" [];
"torch.distributed._composable.replicate" [];
"torch.distributed._composable_state" [];
"torch.distributed._functional_collectives" [];
"torch.distributed._functional_collectives_impl" [];
"torch.distributed._shard.api" [];
"torch.distributed._shard" [];
"torch.distributed._shard.common_op_utils" [];
"torch.distributed._shard.op_registry_utils" [];
"torch.distributed._shard.metadata" [];
"torch.distributed._shard._utils" [];
"torch.distributed._shard.sharded_optim.api" [];
"torch.distributed._shard.sharded_optim" [];
"torch.distributed._shard.sharded_tensor" [];
"torch.distributed._shard.sharded_tensor._ops" [];
"torch.distributed._shard.sharded_tensor._ops._common" [];
"torch.distributed._shard.sharded_tensor._ops.tensor_ops" [];
"torch.distributed._shard.sharded_tensor._ops.binary_cmp" [];
"torch.distributed._shard.sharded_tensor._ops.init" [];
"torch.distributed._shard.sharded_tensor._ops.misc_ops" [];
"torch.distributed._shard.sharded_tensor._ops.tensor_ops" [];
"torch.distributed._shard.sharded_tensor.api" [];
"torch.distributed._shard.sharded_tensor.logging_handlers" [];
"torch.distributed._shard.sharded_tensor.logger" [];
"torch.distributed._shard.sharded_tensor.metadata" [];
"torch.distributed._shard.sharded_tensor.utils" [];
"torch.distributed._shard.sharded_tensor.reshard" [];
"torch.distributed._shard.sharded_tensor.shard" [];
"torch.distributed._shard.sharded_tensor.utils" [];
"torch.distributed._shard.sharder" [];
"torch.distributed._shard.sharding_plan" [];
"torch.distributed._shard.sharding_plan.api" [];
"torch.distributed._shard.sharding_spec" [];
"torch.distributed._shard.sharding_spec._internals" [];
"torch.distributed._shard.sharding_spec.api" [];
"torch.distributed._shard.sharding_spec.chunk_sharding_spec" [];
"torch.distributed._shard.sharding_spec.api" [];
"torch.distributed._shard.sharding_spec.chunk_sharding_spec" [];
"torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops._common" [];
"torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops.embedding" [];
"torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops.embedding_bag" [];
"torch.distributed._tools.fsdp2_mem_tracker" [];
"torch.distributed._tools" [];
"torch.distributed._tools.ilp_utils" [];
"torch.distributed._tools.sac_ilp" [];
"torch.distributed._tools.mem_tracker" [];
"torch.distributed._tools.memory_tracker" [];
"torch.distributed._tools.mod_tracker" [];
"torch.distributed._tools.runtime_estimator" [];
"torch.distributed._tools.sac_estimator" [];
"torch.distributed._tools.runtime_estimator" [];
"torch.distributed._tools.sac_estimator" [];
"torch.distributed.algorithms._comm_hooks.default_hooks" [];
"torch.distributed.algorithms._comm_hooks" [];
"torch.distributed.algorithms._optimizer_overlap.optimizer_overlap" [];
"torch.distributed.algorithms._optimizer_overlap" [];
"torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks" [];
"torch.distributed.algorithms.ddp_comm_hooks" [];
"torch.distributed.algorithms.ddp_comm_hooks.default_hooks" [];
"torch.distributed.algorithms.ddp_comm_hooks.post_localSGD_hook" [];
"torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook" [];
"torch.distributed.algorithms.ddp_comm_hooks.optimizer_overlap_hooks" [];
"torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook" [];
"torch.distributed.algorithms.ddp_comm_hooks.quantization_hooks" [];
"torch.distributed.algorithms.join" [];
"torch.distributed.algorithms" [];
"torch.distributed.algorithms.model_averaging.averagers" [];
"torch.distributed.algorithms.model_averaging.hierarchical_model_averager" [];
"torch.distributed.algorithms.model_averaging.utils" [];
"torch.distributed.argparse_util" [];
"torch.distributed.run" [];
"torch.distributed.c10d_logger" [];
"torch.distributed.distributed_c10d" [];
"torch.distributed.checkpoint" [];
"torch.distributed.checkpoint.format_utils" [];
"torch.distributed.checkpoint._dedup_save_plans" [];
"torch.distributed.checkpoint.default_planner" [];
"torch.distributed.checkpoint._fsspec_filesystem" [];
"torch.distributed.checkpoint._storage_utils" [];
"torch.distributed.checkpoint._nested_dict" [];
"torch.distributed.checkpoint.optimizer" [];
"torch.distributed.checkpoint._sharded_tensor_utils" [];
"torch.distributed.checkpoint._storage_utils" [];
"torch.distributed.checkpoint.state_dict_loader" [];
"torch.distributed.checkpoint.state_dict_saver" [];
"torch.distributed.checkpoint._traverse" [];
"torch.distributed.checkpoint._version" [];
"torch.distributed.checkpoint.api" [];
"torch.distributed.checkpoint.utils" [];
"torch.distributed.checkpoint.default_planner" [];
"torch.distributed.checkpoint.filesystem" [];
"torch.distributed.checkpoint.logger" [];
"torch.distributed.checkpoint.logging_handlers" [];
"torch.distributed.checkpoint.metadata" [];
"torch.distributed.checkpoint._checkpointer" [];
"torch.distributed.checkpoint._dedup_tensors" [];
"torch.distributed.checkpoint.planner" [];
"torch.distributed.checkpoint.planner_helpers" [];
"torch.distributed.checkpoint.resharding" [];
"torch.distributed.checkpoint.staging" [];
"torch.distributed.checkpoint.storage" [];
"torch.distributed.checkpoint.optimizer" [];
"torch.distributed.checkpoint.planner" [];
"torch.distributed.checkpoint.planner_helpers" [];
"torch.distributed.checkpoint.resharding" [];
"torch.distributed.checkpoint.staging" [];
"torch.distributed.checkpoint.state_dict_loader" [];
"torch.distributed.checkpoint.state_dict_saver" [];
"torch.distributed.checkpoint.stateful" [];
"torch.distributed.checkpoint.storage" [];
"torch.distributed.checkpoint.utils" [];
"torch.distributed.constants" [];
"torch.distributed.device_mesh" [];
"torch.distributed.distributed_c10d" [];
"torch.distributed.elastic.agent.server.api" [];
"torch.distributed.elastic.agent.server" [];
"torch.distributed.elastic.agent.server.local_elastic_agent" [];
"torch.distributed.elastic.agent.server.health_check_server" [];
"torch.distributed.elastic.agent.server.local_elastic_agent" [];
"torch.distributed.elastic.events.api" [];
"torch.distributed.elastic.events" [];
"torch.distributed.elastic.events.handlers" [];
"torch.distributed.elastic.metrics.api" [];
"torch.distributed.elastic.metrics" [];
"torch.distributed.elastic.multiprocessing" [];
"torch.distributed.elastic.multiprocessing.api" [];
"torch.distributed.elastic.multiprocessing.errors" [];
"torch.distributed.elastic.control_plane" [];
"torch.distributed.elastic.multiprocessing.errors.error_handler" [];
"torch.distributed.elastic.multiprocessing.errors.handlers" [];
"torch.distributed.elastic.multiprocessing.errors.handlers" [];
"torch.distributed.elastic.multiprocessing.redirects" [];
"torch.distributed.elastic.multiprocessing.subprocess_handler" [];
"torch.distributed.elastic.multiprocessing.subprocess_handler.handlers" [];
"torch.distributed.elastic.multiprocessing.subprocess_handler.subprocess_handler" [];
"torch.distributed.elastic.multiprocessing.tail_log" [];
"torch.distributed.elastic.rendezvous" [];
"torch.distributed.elastic.rendezvous.etcd_rendezvous" [];
"torch.distributed.elastic.rendezvous.static_tcp_rendezvous" [];
"torch.distributed.elastic.rendezvous.api" [];
"torch.distributed.elastic.rendezvous.c10d_rendezvous_backend" [];
"torch.distributed.elastic.rendezvous.dynamic_rendezvous" [];
"torch.distributed.elastic.rendezvous.etcd_rendezvous_backend" [];
"torch.distributed.elastic.rendezvous.registry" [];
"torch.distributed.elastic.rendezvous.c10d_rendezvous_backend" [];
"torch.distributed.elastic.rendezvous.dynamic_rendezvous" [];
"torch.distributed.elastic.rendezvous.etcd_rendezvous" [];
"torch.distributed.elastic.rendezvous.etcd_rendezvous_backend" [];
"torch.distributed.elastic.rendezvous.etcd_store" [];
"torch.distributed.elastic.rendezvous.registry" [];
"torch.distributed.elastic.rendezvous.static_tcp_rendezvous" [];
"torch.distributed.elastic.rendezvous.utils" [];
"torch.distributed.elastic.timer.api" [];
"torch.distributed.elastic.timer" [];
"torch.distributed.elastic.timer.file_based_local_timer" [];
"torch.distributed.elastic.timer.local_timer" [];
"torch.distributed.elastic.timer.debug_info_logging" [];
"torch.distributed.elastic.timer.file_based_local_timer" [];
"torch.distributed.elastic.timer.local_timer" [];
"torch.distributed.elastic.utils" [];
"torch.distributed.elastic.utils.api" [];
"torch.distributed.elastic.utils.data.cycling_iterator" [];
"torch.distributed.elastic.utils.data" [];
"torch.distributed.elastic.utils.data.elastic_distributed_sampler" [];
"torch.distributed.elastic.utils.log_level" [];
"torch.distributed.elastic.utils.logging" [];
"torch.distributed.elastic.utils.logging" [];
"torch.distributed.elastic.utils.distributed" [];
"torch.distributed.elastic.utils.store" [];
"torch.distributed.fsdp._common_utils" [];
"torch.distributed.fsdp._debug_utils" [];
"torch.distributed.fsdp._exec_order_utils" [];
"torch.distributed.fsdp._flat_param" [];
"torch.distributed.fsdp._init_utils" [];
"torch.distributed.fsdp._optim_utils" [];
"torch.distributed.fsdp._runtime_utils" [];
"torch.distributed.fsdp._state_dict_utils" [];
"torch.distributed.fsdp._traversal_utils" [];
"torch.distributed.fsdp._unshard_param_utils" [];
"torch.distributed.fsdp._wrap_utils" [];
"torch.distributed.fsdp.fully_sharded_data_parallel" [];
"torch.distributed.fsdp._debug_utils" [];
"torch.distributed.fsdp._dynamo_utils" [];
"torch.distributed.fsdp._exec_order_utils" [];
"torch.distributed.fsdp._flat_param" [];
"torch.distributed.fsdp" [];
"torch.distributed.fsdp._fsdp_extensions" [];
"torch.distributed.fsdp._fully_shard" [];
"torch.distributed.fsdp._fully_shard._fsdp_api" [];
"torch.distributed.fsdp._fully_shard._fsdp_param" [];
"torch.distributed.fsdp._fully_shard._fsdp_param_group" [];
"torch.distributed.fsdp._fully_shard._fsdp_state" [];
"torch.distributed.fsdp._fully_shard._fully_shard" [];
"torch.distributed.fsdp._fully_shard._fsdp_collectives" [];
"torch.distributed.fsdp._fully_shard._fsdp_common" [];
"torch.distributed.fsdp._fully_shard._fsdp_init" [];
"torch.distributed.fsdp._fully_shard._fsdp_init" [];
"torch.distributed.fsdp._fully_shard._fsdp_param" [];
"torch.distributed.fsdp._fully_shard._fsdp_param_group" [];
"torch.distributed.fsdp._fully_shard._fsdp_state" [];
"torch.distributed.fsdp._fully_shard._fully_shard" [];
"torch.distributed.fsdp._init_utils" [];
"torch.distributed.fsdp._limiter_utils" [];
"torch.distributed.fsdp._optim_utils" [];
"torch.distributed.fsdp._runtime_utils" [];
"torch.distributed.fsdp._shard_utils" [];
"torch.distributed.fsdp._state_dict_utils" [];
"torch.distributed.fsdp._traversal_utils" [];
"torch.distributed.fsdp._unshard_param_utils" [];
"torch.distributed.fsdp._wrap_utils" [];
"torch.distributed.fsdp.api" [];
"torch.distributed.fsdp.fully_sharded_data_parallel" [];
"torch.distributed.fsdp.wrap" [];
"torch.distributed.launcher.api" [];
"torch.distributed.launcher" [];
"torch.distributed.logging_handlers" [];
"torch.distributed.nn.api.remote_module" [];
"torch.distributed.nn" [];
"torch.distributed.nn.functional" [];
"torch.distributed.nn.jit.templates.remote_module_template" [];
"torch.distributed.nn.jit.instantiator" [];
"torch.distributed.optim._deprecation_warning" [];
"torch.distributed.optim.functional_adadelta" [];
"torch.distributed.optim.functional_adagrad" [];
"torch.distributed.optim.functional_adam" [];
"torch.distributed.optim.functional_adamax" [];
"torch.distributed.optim.functional_adamw" [];
"torch.distributed.optim.functional_rmsprop" [];
"torch.distributed.optim.functional_rprop" [];
"torch.distributed.optim.functional_sgd" [];
"torch.distributed.optim.apply_optimizer_in_backward" [];
"torch.distributed.optim" [];
"torch.distributed.optim.functional_adadelta" [];
"torch.distributed.optim.utils" [];
"torch.distributed.optim.functional_adagrad" [];
"torch.distributed.optim.functional_adam" [];
"torch.distributed.optim.functional_adamax" [];
"torch.distributed.optim.functional_adamw" [];
"torch.distributed.optim.functional_rmsprop" [];
"torch.distributed.optim.functional_rprop" [];
"torch.distributed.optim.functional_sgd" [];
"torch.distributed.optim.named_optimizer" [];
"torch.distributed.optim.optimizer" [];
"torch.distributed.optim.post_localSGD_optimizer" [];
"torch.distributed.optim.utils" [];
"torch.distributed.optim.zero_redundancy_optimizer" [];
"torch.distributed.optim.zero_redundancy_optimizer" [];
"torch.distributed.pipelining._IR" [];
"torch.distributed.pipelining" [];
"torch.distributed.pipelining._backward" [];
"torch.distributed.pipelining.stage" [];
"torch.distributed.pipelining._debug" [];
"torch.distributed.pipelining._unflatten" [];
"torch.distributed.pipelining._utils" [];
"torch.distributed.pipelining.microbatch" [];
"torch.distributed.pipelining.schedules" [];
"torch.distributed.pipelining.schedules" [];
"torch.distributed.pipelining.stage" [];
"torch.distributed.remote_device" [];
"torch.distributed.rendezvous" [];
"torch.distributed.rpc" [];
"torch.distributed.rpc._utils" [];
"torch.distributed.rpc.backend_registry" [];
"torch.distributed.rpc.rref_proxy" [];
"torch.distributed.rpc.server_process_global_profiler" [];
"torch.distributed.rpc._testing" [];
"torch.distributed.rpc._testing.faulty_agent_backend_registry" [];
"torch.distributed.rpc._testing.faulty_agent_backend_registry" [];
"torch.distributed.rpc._utils" [];
"torch.distributed.rpc.api" [];
"torch.distributed.rpc.api" [];
"torch.distributed.rpc.backend_registry" [];
"torch.distributed.rpc.constants" [];
"torch.distributed.rpc.options" [];
"torch.distributed.rpc.functions" [];
"torch.distributed.rpc.internal" [];
"torch.distributed.rpc.options" [];
"torch.distributed.rpc.server_process_global_profiler" [];
"torch.distributed.run" [];
"torch.distributed.launch" [];
"torch.distributed.tensor" [];
"torch.distributed.tensor._api" [];
"torch.distributed.tensor._dispatch" [];
"torch.distributed.tensor._redistribute" [];
"torch.distributed.tensor._tp_conv" [];
"torch.distributed.tensor._utils" [];
"torch.distributed.tensor._collective_utils" [];
"torch.distributed.tensor.placement_types" [];
"torch.distributed.tensor._dispatch" [];
"torch.distributed.tensor._dtensor_spec" [];
"torch.distributed.tensor._op_schema" [];
"torch.distributed.tensor._random" [];
"torch.distributed.tensor._sharding_prop" [];
"torch.distributed.tensor._op_schema" [];
"torch.distributed.tensor._ops" [];
"torch.distributed.tensor._ops._common_rules" [];
"torch.distributed.tensor._ops._tensor_ops" [];
"torch.distributed.tensor._ops._conv_ops" [];
"torch.distributed.tensor._ops._einsum_strategy" [];
"torch.distributed.tensor._ops._matrix_ops" [];
"torch.distributed.tensor._ops._embedding_ops" [];
"torch.distributed.tensor._ops._experimental_ops" [];
"torch.distributed.tensor._ops._math_ops" [];
"torch.distributed.tensor._ops._matrix_ops" [];
"torch.distributed.tensor._ops._pointwise_ops" [];
"torch.distributed.tensor._ops._random_ops" [];
"torch.distributed.tensor._ops._tensor_ops" [];
"torch.distributed.tensor._ops._view_ops" [];
"torch.distributed.tensor._ops.utils" [];
"torch.distributed.tensor._random" [];
"torch.distributed.tensor._redistribute" [];
"torch.distributed.tensor._sharding_prop" [];
"torch.distributed.tensor._tp_conv" [];
"torch.distributed.tensor._utils" [];
"torch.distributed.tensor.debug._comm_mode" [];
"torch.distributed.tensor.debug" [];
"torch.distributed.tensor.debug._visualize_sharding" [];
"torch.distributed.tensor.device_mesh" [];
"torch.distributed.tensor.experimental._attention" [];
"torch.distributed.tensor.experimental" [];
"torch.distributed.tensor.experimental._func_map" [];
"torch.distributed.tensor.experimental._register_sharding" [];
"torch.distributed.tensor.parallel._data_parallel_utils" [];
"torch.distributed.tensor.parallel.ddp" [];
"torch.distributed.tensor.parallel.fsdp" [];
"torch.distributed.tensor.parallel._utils" [];
"torch.distributed.tensor.parallel.api" [];
"torch.distributed.tensor.parallel.api" [];
"torch.distributed.tensor.parallel" [];
"torch.distributed.tensor.parallel.loss" [];
"torch.distributed.tensor.parallel.style" [];
"torch.distributed.tensor.placement_types" [];
"torch.distributions" [];
"torch.distributions.lkj_cholesky" [];
"torch.distributions.mixture_same_family" [];
"torch.distributions.multinomial" [];
"torch.distributions.studentT" [];
"torch.distributions.bernoulli" [];
"torch.distributions.kl" [];
"torch.distributions.beta" [];
"torch.distributions.binomial" [];
"torch.distributions.categorical" [];
"torch.distributions.one_hot_categorical" [];
"torch.distributions.relaxed_categorical" [];
"torch.distributions.cauchy" [];
"torch.distributions.half_cauchy" [];
"torch.distributions.chi2" [];
"torch.distributions.constraint_registry" [];
"torch.distributions.constraints" [];
"torch.distributions.continuous_bernoulli" [];
"torch.distributions.dirichlet" [];
"torch.distributions.distribution" [];
"torch.distributions.exponential" [];
"torch.distributions.fishersnedecor" [];
"torch.distributions.gamma" [];
"torch.distributions.geometric" [];
"torch.distributions.gumbel" [];
"torch.distributions.half_normal" [];
"torch.distributions.independent" [];
"torch.distributions.inverse_gamma" [];
"torch.distributions.kumaraswamy" [];
"torch.distributions.laplace" [];
"torch.distributions.log_normal" [];
"torch.distributions.logistic_normal" [];
"torch.distributions.lowrank_multivariate_normal" [];
"torch.distributions.multivariate_normal" [];
"torch.distributions.negative_binomial" [];
"torch.distributions.normal" [];
"torch.distributions.pareto" [];
"torch.distributions.poisson" [];
"torch.distributions.relaxed_bernoulli" [];
"torch.distributions.transformed_distribution" [];
"torch.distributions.transforms" [];
"torch.distributions.uniform" [];
"torch.distributions.von_mises" [];
"torch.distributions.weibull" [];
"torch.distributions.wishart" [];
"torch.distributions.continuous_bernoulli" [];
"torch.distributions.dirichlet" [];
"torch.distributions.distribution" [];
"torch.distributions.exp_family" [];
"torch.distributions.exp_family" [];
"torch.distributions.exponential" [];
"torch.distributions.fishersnedecor" [];
"torch.distributions.gamma" [];
"torch.distributions.geometric" [];
"torch.distributions.gumbel" [];
"torch.distributions.half_cauchy" [];
"torch.distributions.half_normal" [];
"torch.distributions.independent" [];
"torch.distributions.inverse_gamma" [];
"torch.distributions.kl" [];
"torch.distributions.kumaraswamy" [];
"torch.distributions.laplace" [];
"torch.distributions.lkj_cholesky" [];
"torch.distributions.log_normal" [];
"torch.distributions.logistic_normal" [];
"torch.distributions.lowrank_multivariate_normal" [];
"torch.distributions.mixture_same_family" [];
"torch.distributions.multinomial" [];
"torch.distributions.multivariate_normal" [];
"torch.distributions.negative_binomial" [];
"torch.distributions.normal" [];
"torch.distributions.one_hot_categorical" [];
"torch.distributions.pareto" [];
"torch.distributions.poisson" [];
"torch.distributions.relaxed_bernoulli" [];
"torch.distributions.relaxed_categorical" [];
"torch.distributions.studentT" [];
"torch.distributions.transformed_distribution" [];
"torch.distributions.transforms" [];
"torch.distributions.uniform" [];
"torch.distributions.utils" [];
"torch.distributions.von_mises" [];
"torch.distributions.weibull" [];
"torch.distributions.wishart" [];
"torch.export" [];
"torch.export._draft_export" [];
"torch.export._remove_auto_functionalized_pass" [];
"torch.export._remove_effect_tokens_pass" [];
"torch.export._unlift" [];
"torch.export.unflatten" [];
"torch.export._safeguard" [];
"torch.export._trace" [];
"torch.export._trace" [];
"torch.export.exported_program" [];
"torch.export._tree_utils" [];
"torch.export._unlift" [];
"torch.export.decomp_utils" [];
"torch.export.dynamic_shapes" [];
"torch.export.exported_program" [];
"torch.export._swap" [];
"torch.export.graph_signature" [];
"torch.export.unflatten" [];
"torch.fft" [];
"torch.func" [];
"torch.functional" [];
"torch.futures" [];
"torch.fx" [];
"torch.fx._compatibility" [];
"torch.fx._lazy_graph_module" [];
"torch.fx._symbolic_trace" [];
"torch.fx.annotate" [];
"torch.fx.graph" [];
"torch.fx.graph_module" [];
"torch.fx.immutable_collections" [];
"torch.fx.interpreter" [];
"torch.fx.node" [];
"torch.fx.operator_schemas" [];
"torch.fx.proxy" [];
"torch.fx.subgraph_rewriter" [];
"torch.fx.tensor_type" [];
"torch.fx.traceback" [];
"torch.fx._lazy_graph_module" [];
"torch.fx._pytree" [];
"torch.fx._symbolic_trace" [];
"torch.fx.config" [];
"torch.fx.experimental._backward_state" [];
"torch.fx.experimental.proxy_tensor" [];
"torch.fx.experimental._config" [];
"torch.fx.experimental.symbolic_shapes" [];
"torch.fx.experimental.validator" [];
"torch.fx.experimental.graph_gradual_typechecker" [];
"torch.fx.experimental.unify_refinements" [];
"torch.fx.experimental.migrate_gradual_types.constraint" [];
"torch.fx.experimental.migrate_gradual_types.constraint_generator" [];
"torch.fx.experimental.migrate_gradual_types.constraint_transformation" [];
"torch.fx.experimental.migrate_gradual_types.transform_to_z3" [];
"torch.fx.experimental.migrate_gradual_types.util" [];
"torch.fx.experimental.migrate_gradual_types.constraint_generator" [];
"torch.fx.experimental.migrate_gradual_types.constraint_transformation" [];
"torch.fx.experimental.migrate_gradual_types.operation" [];
"torch.fx.experimental.migrate_gradual_types.util" [];
"torch.fx.experimental.migrate_gradual_types.z3_types" [];
"torch.fx.experimental.partitioner_utils" [];
"torch.fx.experimental.accelerator_partitioner" [];
"torch.fx.experimental.proxy_tensor" [];
"torch.fx.experimental.sym_node" [];
"torch.fx.experimental.recording" [];
"torch.fx.experimental.refinement_types" [];
"torch.fx.experimental.schema_type_annotation" [];
"torch.fx.experimental.normalize" [];
"torch.fx.experimental.sym_node" [];
"torch.fx.experimental.symbolic_shapes" [];
"torch.fx.experimental.unification" [];
"torch.fx.experimental.unification.core" [];
"torch.fx.experimental.unification.match" [];
"torch.fx.experimental.unification.more" [];
"torch.fx.experimental.unification.dispatch" [];
"torch.fx.experimental.unification.variable" [];
"torch.fx.experimental.unification.more" [];
"torch.fx.experimental.unification.multipledispatch" [];
"torch.fx.experimental.unification.multipledispatch.conflict" [];
"torch.fx.experimental.unification.multipledispatch.dispatcher" [];
"torch.fx.experimental.unification.multipledispatch.core" [];
"torch.fx.experimental.unification.multipledispatch.dispatcher" [];
"torch.fx.experimental.unification.multipledispatch.utils" [];
"torch.fx.experimental.unification.multipledispatch.variadic" [];
"torch.fx.experimental.unification.multipledispatch.variadic" [];
"torch.fx.experimental.unification.unification_tools" [];
"torch.fx.experimental.unification.utils" [];
"torch.fx.experimental.unification.variable" [];
"torch.fx.experimental.validator" [];
"torch.fx.graph" [];
"torch.fx.graph_module" [];
"torch.fx.immutable_collections" [];
"torch.fx.interpreter" [];
"torch.fx.node" [];
"torch.fx.operator_schemas" [];
"torch.fx.passes.graph_drawer" [];
"torch.fx.passes" [];
"torch.fx.passes.graph_transform_observer" [];
"torch.fx.passes.splitter_base" [];
"torch.fx.passes.graph_manipulation" [];
"torch.fx.passes.infra.pass_base" [];
"torch.fx.passes.infra.pass_manager" [];
"torch.fx.passes.infra.pass_manager" [];
"torch.fx.passes.infra" [];
"torch.fx.passes.net_min_base" [];
"torch.fx.passes.operator_support" [];
"torch.fx.passes.param_fetch" [];
"torch.fx.passes.reinplace" [];
"torch.fx.passes.runtime_assert" [];
"torch.fx.passes._tensorify_python_scalars" [];
"torch.fx.passes.shape_prop" [];
"torch.fx.passes.split_module" [];
"torch.fx.passes.split_utils" [];
"torch.fx.passes.splitter_base" [];
"torch.fx.passes.tools_common" [];
"torch.fx.passes.utils" [];
"torch.fx.passes.utils.fuser_utils" [];
"torch.fx.passes.utils.common" [];
"torch.fx.passes.utils.fuser_utils" [];
"torch.fx.passes.utils.matcher_utils" [];
"torch.fx.passes.utils.matcher_utils" [];
"torch.fx.passes.utils.matcher_with_name_node_map_utils" [];
"torch.fx.passes.utils.matcher_with_name_node_map_utils" [];
"torch.fx.proxy" [];
"torch.fx.subgraph_rewriter" [];
"torch.fx.traceback" [];
"torch.hub" [];
"torch.jit" [];
"torch.jit.supported_ops" [];
"torch.jit.unsupported_tensor_ops" [];
"torch.jit._async" [];
"torch.jit._await" [];
"torch.jit._builtins" [];
"torch.jit._recursive" [];
"torch.jit._script" [];
"torch.jit._check" [];
"torch.jit._dataclass_impls" [];
"torch.jit.frontend" [];
"torch.jit._decomposition_utils" [];
"torch.jit._freeze" [];
"torch.jit._fuser" [];
"torch.jit._ir_utils" [];
"torch.jit._monkeytype_config" [];
"torch.jit._recursive" [];
"torch.jit._serialization" [];
"torch.jit._script" [];
"torch.jit._trace" [];
"torch.jit._serialization" [];
"torch.jit._state" [];
"torch.jit.annotations" [];
"torch.jit._trace" [];
"torch.jit.annotations" [];
"torch.jit.frontend" [];
"torch.library" [];
"torch.linalg" [];
"torch.masked" [];
"torch.masked._docs" [];
"torch.masked._ops" [];
"torch.masked._ops" [];
"torch.masked.maskedtensor._ops_refs" [];
"torch.masked.maskedtensor.core" [];
"torch.masked.maskedtensor.binary" [];
"torch.masked.maskedtensor" [];
"torch.masked.maskedtensor.core" [];
"torch.masked.maskedtensor.creation" [];
"torch.masked.maskedtensor.passthrough" [];
"torch.masked.maskedtensor.reductions" [];
"torch.masked.maskedtensor.unary" [];
"torch.masked.maskedtensor.creation" [];
"torch.masked.maskedtensor.passthrough" [];
"torch.masked.maskedtensor.reductions" [];
"torch.masked.maskedtensor.unary" [];
"torch.mps" [];
"torch.mps.event" [];
"torch.mps.profiler" [];
"torch.mtia" [];
"torch.mtia.memory" [];
"torch.mtia._utils" [];
"torch.mtia.memory" [];
"torch.multiprocessing" [];
"torch.multiprocessing.reductions" [];
"torch.multiprocessing.spawn" [];
"torch.multiprocessing._atfork" [];
"torch.multiprocessing.queue" [];
"torch.multiprocessing.pool" [];
"torch.multiprocessing.reductions" [];
"torch.multiprocessing.spawn" [];
"torch.nested" [];
"torch.nested._internal.nested_int" [];
"torch.nested._internal.nested_tensor" [];
"torch.nested._internal.nested_tensor" [];
"torch.nested._internal.ops" [];
"torch.nested._internal.sdpa" [];
"torch.nested._internal.ops" [];
"torch.nested._internal.sdpa" [];
"torch.nn" [];
"torch.nn.cpp" [];
"torch.nn._reduction" [];
"torch.nn.functional" [];
"torch.nn.attention" [];
"torch.nn.attention.bias" [];
"torch.nn.attention._utils" [];
"torch.nn.attention.flex_attention" [];
"torch.nn.functional" [];
"torch.nn.grad" [];
"torch.nn.init" [];
"torch.nn.intrinsic" [];
"torch.nn.intrinsic.modules" [];
"torch.nn.intrinsic.modules.fused" [];
"torch.nn.intrinsic.qat" [];
"torch.nn.intrinsic.qat.modules" [];
"torch.nn.intrinsic.qat.modules.conv_fused" [];
"torch.nn.intrinsic.qat.modules.linear_fused" [];
"torch.nn.intrinsic.qat.modules.linear_relu" [];
"torch.nn.intrinsic.quantized" [];
"torch.nn.intrinsic.quantized.dynamic" [];
"torch.nn.intrinsic.quantized.dynamic.modules" [];
"torch.nn.intrinsic.quantized.dynamic.modules.linear_relu" [];
"torch.nn.intrinsic.quantized.modules" [];
"torch.nn.intrinsic.quantized.modules.bn_relu" [];
"torch.nn.intrinsic.quantized.modules.conv_relu" [];
"torch.nn.intrinsic.quantized.modules.linear_relu" [];
"torch.nn.modules" [];
"torch.nn.modules._functions" [];
"torch.nn.modules.batchnorm" [];
"torch.nn.modules.normalization" [];
"torch.nn.modules.activation" [];
"torch.nn.modules.transformer" [];
"torch.nn.modules.adaptive" [];
"torch.nn.modules.batchnorm" [];
"torch.nn.modules.instancenorm" [];
"torch.nn.modules.channelshuffle" [];
"torch.nn.modules.container" [];
"torch.nn.modules.conv" [];
"torch.nn.modules.distance" [];
"torch.nn.modules.loss" [];
"torch.nn.modules.dropout" [];
"torch.nn.modules.flatten" [];
"torch.nn.modules.fold" [];
"torch.nn.modules.instancenorm" [];
"torch.nn.modules.lazy" [];
"torch.nn.modules.linear" [];
"torch.nn.modules.linear" [];
"torch.nn.modules.loss" [];
"torch.nn.modules.module" [];
"torch.nn.modules.padding" [];
"torch.nn.modules.pixelshuffle" [];
"torch.nn.modules.pooling" [];
"torch.nn.modules.rnn" [];
"torch.nn.modules.sparse" [];
"torch.nn.modules.upsampling" [];
"torch.nn.modules.normalization" [];
"torch.nn.modules.padding" [];
"torch.nn.modules.pixelshuffle" [];
"torch.nn.modules.pooling" [];
"torch.nn.modules.rnn" [];
"torch.nn.modules.sparse" [];
"torch.nn.modules.transformer" [];
"torch.nn.modules.upsampling" [];
"torch.nn.modules.utils" [];
"torch.nn.parallel" [];
"torch.nn.parallel._functions" [];
"torch.nn.parallel.replicate" [];
"torch.nn.parallel.scatter_gather" [];
"torch.nn.parallel.comm" [];
"torch.nn.parallel.data_parallel" [];
"torch.nn.parallel.distributed" [];
"torch.nn.parallel.parallel_apply" [];
"torch.nn.parallel.replicate" [];
"torch.nn.parallel.scatter_gather" [];
"torch.nn.parameter" [];
"torch.nn.qat" [];
"torch.nn.qat.dynamic" [];
"torch.nn.qat.dynamic.modules" [];
"torch.nn.qat.dynamic.modules.linear" [];
"torch.nn.qat.modules" [];
"torch.nn.qat.modules.conv" [];
"torch.nn.qat.modules.embedding_ops" [];
"torch.nn.qat.modules.linear" [];
"torch.nn.quantizable" [];
"torch.nn.quantizable.modules" [];
"torch.nn.quantized" [];
"torch.nn.quantized._reference.modules" [];
"torch.nn.quantized._reference" [];
"torch.nn.quantized.dynamic" [];
"torch.nn.quantized.functional" [];
"torch.nn.quantized.modules" [];
"torch.nn.utils" [];
"torch.nn.utils._expanded_weights.conv_expanded_weights" [];
"torch.nn.utils._expanded_weights" [];
"torch.nn.utils._expanded_weights.conv_utils" [];
"torch.nn.utils._expanded_weights.embedding_expanded_weights" [];
"torch.nn.utils._expanded_weights.expanded_weights_impl" [];
"torch.nn.utils._expanded_weights.expanded_weights_utils" [];
"torch.nn.utils._expanded_weights.group_norm_expanded_weights" [];
"torch.nn.utils._expanded_weights.instance_norm_expanded_weights" [];
"torch.nn.utils._expanded_weights.layer_norm_expanded_weights" [];
"torch.nn.utils._expanded_weights.linear_expanded_weights" [];
"torch.nn.utils._per_sample_grad" [];
"torch.nn.utils._expanded_weights.expanded_weights_utils" [];
"torch.nn.utils._expanded_weights.group_norm_expanded_weights" [];
"torch.nn.utils._expanded_weights.instance_norm_expanded_weights" [];
"torch.nn.utils._expanded_weights.layer_norm_expanded_weights" [];
"torch.nn.utils._expanded_weights.linear_expanded_weights" [];
"torch.nn.utils._named_member_accessor" [];
"torch.nn.utils.stateless" [];
"torch.nn.utils.clip_grad" [];
"torch.nn.utils.convert_parameters" [];
"torch.nn.utils.fusion" [];
"torch.nn.utils.init" [];
"torch.nn.utils.memory_format" [];
"torch.nn.utils.parametrizations" [];
"torch.nn.utils.parametrize" [];
"torch.nn.utils.rnn" [];
"torch.nn.utils.spectral_norm" [];
"torch.nn.utils.stateless" [];
"torch.nn.utils.weight_norm" [];
"torch.onnx" [];
"torch.onnx.symbolic_opset10" [];
"torch.onnx.symbolic_opset9" [];
"torch.onnx._constants" [];
"torch.onnx._globals" [];
"torch.onnx._onnx_supported_ops" [];
"torch.onnx.errors" [];
"torch.onnx.symbolic_helper" [];
"torch.onnx.symbolic_opset13" [];
"torch.onnx.symbolic_opset14" [];
"torch.onnx.utils" [];
"torch.onnx.verification" [];
"torch.onnx._deprecation" [];
"torch.onnx._experimental" [];
"torch.onnx._flags" [];
"torch.onnx._globals" [];
"torch.onnx._internal" [];
"torch.onnx._internal.onnxruntime" [];
"torch.onnx._internal._exporter_legacy" [];
"torch.onnx._internal._lazy_import" [];
"torch.onnx._internal.diagnostics" [];
"torch.onnx._internal.diagnostics._diagnostic" [];
"torch.onnx._internal.diagnostics._rules" [];
"torch.onnx._internal.diagnostics.infra" [];
"torch.onnx._internal.diagnostics.infra.context" [];
"torch.onnx._internal.diagnostics.infra.decorator" [];
"torch.onnx._internal.diagnostics.infra._infra" [];
"torch.onnx._internal.diagnostics.infra.utils" [];
"torch.onnx._internal.diagnostics.infra.context" [];
"torch.onnx._internal.diagnostics.infra.formatter" [];
"torch.onnx._internal.diagnostics.infra.sarif" [];
"torch.onnx._internal.diagnostics.infra.sarif._address" [];
"torch.onnx._internal.diagnostics.infra.sarif._external_properties" [];
"torch.onnx._internal.diagnostics.infra.sarif._physical_location" [];
"torch.onnx._internal.diagnostics.infra.sarif._run" [];
"torch.onnx._internal.diagnostics.infra.sarif._artifact" [];
"torch.onnx._internal.diagnostics.infra.sarif._artifact_change" [];
"torch.onnx._internal.diagnostics.infra.sarif._fix" [];
"torch.onnx._internal.diagnostics.infra.sarif._artifact_content" [];
"torch.onnx._internal.diagnostics.infra.sarif._region" [];
"torch.onnx._internal.diagnostics.infra.sarif._replacement" [];
"torch.onnx._internal.diagnostics.infra.sarif._web_request" [];
"torch.onnx._internal.diagnostics.infra.sarif._web_response" [];
"torch.onnx._internal.diagnostics.infra.sarif._artifact_location" [];
"torch.onnx._internal.diagnostics.infra.sarif._attachment" [];
"torch.onnx._internal.diagnostics.infra.sarif._conversion" [];
"torch.onnx._internal.diagnostics.infra.sarif._external_property_file_reference" [];
"torch.onnx._internal.diagnostics.infra.sarif._invocation" [];
"torch.onnx._internal.diagnostics.infra.sarif._result" [];
"torch.onnx._internal.diagnostics.infra.sarif._special_locations" [];
"torch.onnx._internal.diagnostics.infra.sarif._tool_component" [];
"torch.onnx._internal.diagnostics.infra.sarif._version_control_details" [];
"torch.onnx._internal.diagnostics.infra.sarif._attachment" [];
"torch.onnx._internal.diagnostics.infra.sarif._code_flow" [];
"torch.onnx._internal.diagnostics.infra.sarif._configuration_override" [];
"torch.onnx._internal.diagnostics.infra.sarif._conversion" [];
"torch.onnx._internal.diagnostics.infra.sarif._edge" [];
"torch.onnx._internal.diagnostics.infra.sarif._graph" [];
"torch.onnx._internal.diagnostics.infra.sarif._edge_traversal" [];
"torch.onnx._internal.diagnostics.infra.sarif._graph_traversal" [];
"torch.onnx._internal.diagnostics.infra.sarif._exception" [];
"torch.onnx._internal.diagnostics.infra.sarif._notification" [];
"torch.onnx._internal.diagnostics.infra.sarif._external_properties" [];
"torch.onnx._internal.diagnostics.infra.sarif._sarif_log" [];
"torch.onnx._internal.diagnostics.infra.sarif._external_property_file_reference" [];
"torch.onnx._internal.diagnostics.infra.sarif._external_property_file_references" [];
"torch.onnx._internal.diagnostics.infra.sarif._external_property_file_references" [];
"torch.onnx._internal.diagnostics.infra.sarif._fix" [];
"torch.onnx._internal.diagnostics.infra.sarif._graph" [];
"torch.onnx._internal.diagnostics.infra.sarif._graph_traversal" [];
"torch.onnx._internal.diagnostics.infra.sarif._invocation" [];
"torch.onnx._internal.diagnostics.infra.sarif._location" [];
"torch.onnx._internal.diagnostics.infra.sarif._node" [];
"torch.onnx._internal.diagnostics.infra.sarif._stack_frame" [];
"torch.onnx._internal.diagnostics.infra.sarif._suppression" [];
"torch.onnx._internal.diagnostics.infra.sarif._thread_flow_location" [];
"torch.onnx._internal.diagnostics.infra.sarif._location_relationship" [];
"torch.onnx._internal.diagnostics.infra.sarif._logical_location" [];
"torch.onnx._internal.diagnostics.infra.sarif._message" [];
"torch.onnx._internal.diagnostics.infra.sarif._rectangle" [];
"torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_relationship" [];
"torch.onnx._internal.diagnostics.infra.sarif._run_automation_details" [];
"torch.onnx._internal.diagnostics.infra.sarif._stack" [];
"torch.onnx._internal.diagnostics.infra.sarif._thread_flow" [];
"torch.onnx._internal.diagnostics.infra.sarif._multiformat_message_string" [];
"torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor" [];
"torch.onnx._internal.diagnostics.infra.sarif._translation_metadata" [];
"torch.onnx._internal.diagnostics.infra.sarif._node" [];
"torch.onnx._internal.diagnostics.infra.sarif._notification" [];
"torch.onnx._internal.diagnostics.infra.sarif._physical_location" [];
"torch.onnx._internal.diagnostics.infra.sarif._result_provenance" [];
"torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._reporting_configuration" [];
"torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_reference" [];
"torch.onnx._internal.diagnostics.infra.sarif._tool" [];
"torch.onnx._internal.diagnostics.infra.sarif._tool_component_reference" [];
"torch.onnx._internal.diagnostics.infra.sarif._rectangle" [];
"torch.onnx._internal.diagnostics.infra.sarif._region" [];
"torch.onnx._internal.diagnostics.infra.sarif._replacement" [];
"torch.onnx._internal.diagnostics.infra.sarif._reporting_configuration" [];
"torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor" [];
"torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_reference" [];
"torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_relationship" [];
"torch.onnx._internal.diagnostics.infra.sarif._result" [];
"torch.onnx._internal.diagnostics.infra.sarif._result_provenance" [];
"torch.onnx._internal.diagnostics.infra.sarif._run" [];
"torch.onnx._internal.diagnostics.infra.sarif._run_automation_details" [];
"torch.onnx._internal.diagnostics.infra.sarif._sarif_log" [];
"torch.onnx._internal.diagnostics.infra.sarif._special_locations" [];
"torch.onnx._internal.diagnostics.infra.sarif._stack" [];
"torch.onnx._internal.diagnostics.infra.sarif._stack_frame" [];
"torch.onnx._internal.diagnostics.infra.sarif._suppression" [];
"torch.onnx._internal.diagnostics.infra.sarif._thread_flow" [];
"torch.onnx._internal.diagnostics.infra.sarif._thread_flow_location" [];
"torch.onnx._internal.diagnostics.infra.sarif._tool" [];
"torch.onnx._internal.diagnostics.infra.sarif._tool_component" [];
"torch.onnx._internal.diagnostics.infra.sarif._tool_component_reference" [];
"torch.onnx._internal.diagnostics.infra.sarif._translation_metadata" [];
"torch.onnx._internal.diagnostics.infra.sarif._version_control_details" [];
"torch.onnx._internal.diagnostics.infra.sarif._web_request" [];
"torch.onnx._internal.diagnostics.infra.sarif._web_response" [];
"torch.onnx._internal.diagnostics.infra.sarif.version" [];
"torch.onnx._internal.diagnostics.infra.utils" [];
"torch.onnx._internal.exporter._analysis" [];
"torch.onnx._internal.exporter._core" [];
"torch.onnx._internal.exporter._reporting" [];
"torch.onnx._internal.exporter._building" [];
"torch.onnx._internal.exporter._capture_strategies" [];
"torch.onnx._internal.exporter._compat" [];
"torch.onnx._internal.exporter._core" [];
"torch.onnx._internal.exporter._onnx_program" [];
"torch.onnx._internal.exporter._decomp" [];
"torch.onnx._internal.exporter._fx_passes" [];
"torch.onnx._internal.exporter._dispatching" [];
"torch.onnx._internal.exporter._errors" [];
"torch.onnx._internal.exporter._fx_passes" [];
"torch.onnx._internal.exporter._ir_passes" [];
"torch.onnx._internal.exporter._onnx_program" [];
"torch.onnx._internal.exporter._testing" [];
"torch.onnx._internal.exporter._verification" [];
"torch.onnx._internal.exporter._registration" [];
"torch.onnx._internal.exporter._reporting" [];
"torch.onnx._internal.exporter._schemas" [];
"torch.onnx._internal.exporter._tensors" [];
"torch.onnx._internal.exporter._torchlib._torchlib_registry" [];
"torch.onnx._internal.exporter._torchlib.ops" [];
"torch.onnx._internal.exporter._torchlib.ops.hop" [];
"torch.onnx._internal.exporter._verification" [];
"torch.onnx._internal.fx._pass" [];
"torch.onnx._internal.fx.fx_onnx_interpreter" [];
"torch.onnx._internal.fx.analysis" [];
"torch.onnx._internal.fx.analysis.unsupported_nodes" [];
"torch.onnx._internal.fx.decomposition_skip" [];
"torch.onnx._internal.fx.decomposition_table" [];
"torch.onnx._internal.fx.diagnostics" [];
"torch.onnx._internal.fx.onnxfunction_dispatcher" [];
"torch.onnx._internal.fx.dynamo_graph_extractor" [];
"torch.onnx._internal.fx.fx_onnx_interpreter" [];
"torch.onnx._internal.fx.fx_symbolic_graph_extractor" [];
"torch.onnx._internal.fx.onnxfunction_dispatcher" [];
"torch.onnx._internal.fx.passes" [];
"torch.onnx._internal.fx.passes._utils" [];
"torch.onnx._internal.fx.passes.decomp" [];
"torch.onnx._internal.fx.passes.functionalization" [];
"torch.onnx._internal.fx.passes.decomp" [];
"torch.onnx._internal.fx.passes.functionalization" [];
"torch.onnx._internal.fx.passes.modularization" [];
"torch.onnx._internal.fx.passes.readability" [];
"torch.onnx._internal.fx.passes.type_promotion" [];
"torch.onnx._internal.fx.passes.virtualization" [];
"torch.onnx._internal.fx.patcher" [];
"torch.onnx._internal.fx" [];
"torch.onnx._internal.fx.registration" [];
"torch.onnx._internal.fx.serialization" [];
"torch.onnx._internal.fx.type_utils" [];
"torch.onnx._internal.io_adapter" [];
"torch.onnx._internal.jit_utils" [];
"torch.onnx._internal.onnx_proto_utils" [];
"torch.onnx.symbolic_caffe2" [];
"torch.onnx.symbolic_opset11" [];
"torch.onnx.symbolic_opset12" [];
"torch.onnx.symbolic_opset15" [];
"torch.onnx.symbolic_opset16" [];
"torch.onnx.symbolic_opset17" [];
"torch.onnx.symbolic_opset18" [];
"torch.onnx.symbolic_opset20" [];
"torch.onnx.symbolic_opset7" [];
"torch.onnx.symbolic_opset8" [];
"torch.onnx._internal.onnx_proto_utils" [];
"torch.onnx._internal.onnxruntime" [];
"torch.onnx._internal.registration" [];
"torch.onnx._type_utils" [];
"torch.onnx.errors" [];
"torch.onnx.symbolic_caffe2" [];
"torch.onnx.symbolic_helper" [];
"torch.onnx.symbolic_opset10" [];
"torch.onnx.symbolic_opset11" [];
"torch.onnx.symbolic_opset12" [];
"torch.onnx.symbolic_opset13" [];
"torch.onnx.symbolic_opset14" [];
"torch.onnx.symbolic_opset15" [];
"torch.onnx.symbolic_opset16" [];
"torch.onnx.symbolic_opset17" [];
"torch.onnx.symbolic_opset18" [];
"torch.onnx.symbolic_opset19" [];
"torch.onnx.symbolic_opset20" [];
"torch.onnx.symbolic_opset7" [];
"torch.onnx.symbolic_opset8" [];
"torch.onnx.symbolic_opset9" [];
"torch.onnx.utils" [];
"torch.optim" [];
"torch.optim._adafactor" [];
"torch.optim._functional" [];
"torch.optim.sparse_adam" [];
"torch.optim.adadelta" [];
"torch.optim.adagrad" [];
"torch.optim.adam" [];
"torch.optim.adamax" [];
"torch.optim.adamw" [];
"torch.optim.asgd" [];
"torch.optim.lbfgs" [];
"torch.optim.lr_scheduler" [];
"torch.optim.swa_utils" [];
"torch.optim.nadam" [];
"torch.optim.optimizer" [];
"torch.optim.radam" [];
"torch.optim.rmsprop" [];
"torch.optim.rprop" [];
"torch.optim.sgd" [];
"torch.optim.radam" [];
"torch.optim.rmsprop" [];
"torch.optim.rprop" [];
"torch.optim.sgd" [];
"torch.optim.sparse_adam" [];
"torch.optim.swa_utils" [];
"torch.overrides" [];
"torch.package" [];
"torch.package._digraph" [];
"torch.package.package_exporter" [];
"torch.package._directory_reader" [];
"torch.package.package_importer" [];
"torch.package._importlib" [];
"torch.package.find_file_dependencies" [];
"torch.package._mangling" [];
"torch.package.importer" [];
"torch.package._package_pickler" [];
"torch.package._package_unpickler" [];
"torch.package._stdlib" [];
"torch.package.analyze.find_first_use_of_broken_modules" [];
"torch.package.analyze" [];
"torch.package.analyze.is_from_package" [];
"torch.package.analyze.trace_dependencies" [];
"torch.package.file_structure_representation" [];
"torch.package.find_file_dependencies" [];
"torch.package.glob_group" [];
"torch.package.importer" [];
"torch.package.package_exporter" [];
"torch.package.package_importer" [];
"torch.profiler" [];
"torch.profiler._pattern_matcher" [];
"torch.profiler._utils" [];
"torch.profiler._memory_profiler" [];
"torch.profiler.profiler" [];
"torch.profiler._utils" [];
"torch.profiler.itt" [];
"torch.profiler.profiler" [];
"torch.quantization" [];
"torch.quantization.fake_quantize" [];
"torch.quantization.fuse_modules" [];
"torch.quantization.fuser_method_mappings" [];
"torch.quantization.observer" [];
"torch.quantization.qconfig" [];
"torch.quantization.quant_type" [];
"torch.quantization.quantization_mappings" [];
"torch.quantization.quantize" [];
"torch.quantization.quantize_jit" [];
"torch.quantization.stubs" [];
"torch.quasirandom" [];
"torch.random" [];
"torch.return_types" [];
"torch.serialization" [];
"torch.signal.windows" [];
"torch.signal" [];
"torch.signal.windows.windows" [];
"torch.sparse" [];
"torch.sparse._semi_structured_conversions" [];
"torch.sparse.semi_structured" [];
"torch.sparse._semi_structured_ops" [];
"torch.sparse._triton_ops" [];
"torch.sparse._triton_ops_meta" [];
"torch.sparse._triton_ops_meta" [];
"torch.sparse.semi_structured" [];
"torch.special" [];
"torch.storage" [];
"torch.testing" [];
"torch.testing._comparison" [];
"torch.testing._creation" [];
"torch.testing._internal.autograd_function_db" [];
"torch.testing._internal.custom_op_db" [];
"torch.testing._internal.common_cuda" [];
"torch.testing._internal.common_device_type" [];
"torch.testing._internal.common_methods_invocations" [];
"torch.testing._internal.common_modules" [];
"torch.testing._internal.common_nn" [];
"torch.testing._internal.common_utils" [];
"torch.testing._internal.common_device_type" [];
"torch.testing._internal.common_optimizers" [];
"torch.testing._internal.hop_db" [];
"torch.testing._internal.common_distributed" [];
"torch.testing._internal.common_fsdp" [];
"torch.testing._internal.common_dtype" [];
"torch.testing._internal.common_jit" [];
"torch.testing._internal.common_jit" [];
"torch.testing._internal.jit_utils" [];
"torch.testing._internal.common_methods_invocations" [];
"torch.testing._internal.common_nn" [];
"torch.testing._internal.jit_metaprogramming_utils" [];
"torch.testing._internal.common_quantized" [];
"torch.testing._internal.common_quantization" [];
"torch.testing._internal.hypothesis_utils" [];
"torch.testing._internal.common_utils" [];
"torch.testing._internal.autocast_test_lists" [];
"torch.testing._internal.dist_utils" [];
"torch.testing._internal.inductor_utils" [];
"torch.testing._internal.torchbind_impls" [];
"torch.testing._internal.distributed.ddp_under_dist_autograd_test" [];
"torch.testing._internal.distributed.rpc_utils" [];
"torch.testing._internal.distributed.multi_threaded_pg" [];
"torch.testing._internal.distributed.nn.api.remote_module_test" [];
"torch.testing._internal.distributed.rpc.dist_autograd_test" [];
"torch.testing._internal.distributed.rpc.dist_optimizer_test" [];
"torch.testing._internal.distributed.rpc.examples.parameter_server_test" [];
"torch.testing._internal.distributed.rpc.examples.reinforcement_learning_rpc_test" [];
"torch.testing._internal.distributed.rpc.faulty_agent_rpc_test" [];
"torch.testing._internal.distributed.rpc.jit.dist_autograd_test" [];
"torch.testing._internal.distributed.rpc.jit.rpc_test" [];
"torch.testing._internal.distributed.rpc.jit.rpc_test_faulty" [];
"torch.testing._internal.distributed.rpc.rpc_agent_test_fixture" [];
"torch.testing._internal.distributed.rpc.faulty_rpc_agent_test_fixture" [];
"torch.testing._internal.distributed.rpc.rpc_test" [];
"torch.testing._internal.distributed.rpc.tensorpipe_rpc_agent_test_fixture" [];
"torch.testing._internal.distributed.rpc.rpc_test" [];
"torch.testing._internal.dynamo_test_failures" [];
"torch.testing._internal.inductor_utils" [];
"torch.testing._internal.triton_utils" [];
"torch.testing._internal.logging_tensor" [];
"torch.testing._internal.common_subclass" [];
"torch.testing._internal.opinfo" [];
"torch.testing._internal.opinfo.core" [];
"torch.testing._internal.opinfo.refs" [];
"torch.testing._internal.opinfo.definitions" [];
"torch.testing._internal.opinfo.definitions._masked" [];
"torch.testing._internal.opinfo.definitions.fft" [];
"torch.testing._internal.opinfo.definitions.linalg" [];
"torch.testing._internal.opinfo.definitions.signal" [];
"torch.testing._internal.opinfo.definitions.sparse" [];
"torch.testing._internal.opinfo.definitions.special" [];
"torch.testing._internal.opinfo.refs" [];
"torch.testing._internal.opinfo.utils" [];
"torch.testing._internal.optests" [];
"torch.testing._internal.optests.generate_tests" [];
"torch.testing._internal.optests.aot_autograd" [];
"torch.testing._internal.optests.autograd_registration" [];
"torch.testing._internal.optests.fake_tensor" [];
"torch.testing._internal.optests.generate_tests" [];
"torch.testing._internal.optests.make_fx" [];
"torch.testing._internal.two_tensor" [];
"torch.testing._internal.subclasses" [];
"torch.testing._utils" [];
"torch.torch_version" [];
"torch.types" [];
"torch.utils" [];
"torch.utils._contextlib" [];
"torch.utils._device" [];
"torch.utils._cpp_extension_versioner" [];
"torch.utils.cpp_extension" [];
"torch.utils._cxx_pytree" [];
"torch.utils._pytree" [];
"torch.utils._device" [];
"torch.utils._python_dispatch" [];
"torch.utils.checkpoint" [];
"torch.utils.flop_counter" [];
"torch.utils._pytree" [];
"torch.utils.module_tracker" [];
"torch.utils._sympy.functions" [];
"torch.utils._sympy.interp" [];
"torch.utils._sympy.reference" [];
"torch.utils._sympy.solve" [];
"torch.utils._sympy.value_ranges" [];
"torch.utils._sympy.interp" [];
"torch.utils._sympy.numbers" [];
"torch.utils._traceback" [];
"torch.utils.backcompat" [];
"torch.utils.backend_registration" [];
"torch.utils.benchmark.utils._stubs" [];
"torch.utils.benchmark.utils.cpp_jit" [];
"torch.utils.benchmark.utils.timer" [];
"torch.utils.benchmark.utils.common" [];
"torch.utils.benchmark" [];
"torch.utils.benchmark.utils.compare" [];
"torch.utils.benchmark.utils.compare" [];
"torch.utils.benchmark.utils.cpp_jit" [];
"torch.utils.benchmark.utils.fuzzer" [];
"torch.utils.benchmark.utils.sparse_fuzzer" [];
"torch.utils.benchmark.utils.timer" [];
"torch.utils.benchmark.utils.valgrind_wrapper.timer_interface" [];
"torch.utils.collect_env" [];
"torch.utils.cpp_backtrace" [];
"torch.utils.data" [];
"torch.utils.data._utils" [];
"torch.utils.data._utils.pin_memory" [];
"torch.utils.data._utils.signal_handling" [];
"torch.utils.data._utils.worker" [];
"torch.utils.data.dataloader" [];
"torch.utils.data._utils.collate" [];
"torch.utils.data._utils.fetch" [];
"torch.utils.data._utils.pin_memory" [];
"torch.utils.data._utils.signal_handling" [];
"torch.utils.data._utils.worker" [];
"torch.utils.data.dataloader" [];
"torch.utils.data.datapipes._decorator" [];
"torch.utils.data.datapipes._hook_iterator" [];
"torch.utils.data.datapipes._typing" [];
"torch.utils.data.datapipes.datapipe" [];
"torch.utils.data.datapipes._typing" [];
"torch.utils.data.datapipes.dataframe" [];
"torch.utils.data.datapipes" [];
"torch.utils.data.datapipes.dataframe.dataframe_wrapper" [];
"torch.utils.data.datapipes.dataframe.datapipes" [];
"torch.utils.data.datapipes.dataframe.structures" [];
"torch.utils.data.datapipes.dataframe.dataframes" [];
"torch.utils.data.datapipes.dataframe.datapipes" [];
"torch.utils.data.datapipes.dataframe.structures" [];
"torch.utils.data.datapipes.datapipe" [];
"torch.utils.data.graph" [];
"torch.utils.data.datapipes.iter" [];
"torch.utils.data.datapipes.iter.callable" [];
"torch.utils.data.datapipes.iter.combinatorics" [];
"torch.utils.data.datapipes.iter.combining" [];
"torch.utils.data.datapipes.iter.filelister" [];
"torch.utils.data.datapipes.iter.fileopener" [];
"torch.utils.data.datapipes.iter.grouping" [];
"torch.utils.data.datapipes.iter.routeddecoder" [];
"torch.utils.data.datapipes.iter.selecting" [];
"torch.utils.data.datapipes.iter.sharding" [];
"torch.utils.data.graph_settings" [];
"torch.utils.data.datapipes.iter.streamreader" [];
"torch.utils.data.datapipes.iter.utils" [];
"torch.utils.data.datapipes.map" [];
"torch.utils.data.datapipes.map.callable" [];
"torch.utils.data.datapipes.map.combinatorics" [];
"torch.utils.data.datapipes.map.combining" [];
"torch.utils.data.datapipes.map.grouping" [];
"torch.utils.data.datapipes.map.utils" [];
"torch.utils.data.datapipes.utils.common" [];
"torch.utils.data.datapipes.utils.decoder" [];
"torch.utils.data.dataset" [];
"torch.utils.data.distributed" [];
"torch.utils.data.distributed" [];
"torch.utils.data.graph" [];
"torch.utils.data.graph_settings" [];
"torch.utils.data.sampler" [];
"torch.utils.deterministic" [];
"torch.utils.dlpack" [];
"torch.utils.file_baton" [];
"torch.utils.hipify.constants" [];
"torch.utils.hipify.cuda_to_hip_mappings" [];
"torch.utils.hipify.hipify_python" [];
"torch.utils.hipify.cuda_to_hip_mappings" [];
"torch.utils.hipify.hipify_python" [];
"torch.utils.hipify.version" [];
"torch.utils.hipify" [];
"torch.utils.hooks" [];
"torch.utils.model_dump" [];
"torch.utils.model_dump.__main__" [];
"torch.utils.module_tracker" [];
"torch.utils.tensorboard._convert_np" [];
"torch.utils.tensorboard._embedding" [];
"torch.utils.tensorboard.summary" [];
"torch.utils.tensorboard.writer" [];
"torch.utils.tensorboard._embedding" [];
"torch.utils.tensorboard._onnx_graph" [];
"torch.utils.tensorboard._proto_graph" [];
"torch.utils.tensorboard._pytorch_graph" [];
"torch.utils.tensorboard._pytorch_graph" [];
"torch.utils.tensorboard._utils" [];
"torch.utils.tensorboard.summary" [];
"torch.utils.tensorboard.writer" [];
"torch.utils.tensorboard" [];
"torch.utils.throughput_benchmark" [];
"torch.utils.weak" [];
"torch.xpu" [];
"torch.xpu.memory" [];
"torch.xpu.random" [];
"torch.xpu._utils" [];
"torch.xpu.memory" [];
"torch.xpu.random" [];
"torch.xpu.streams" [];
"torch._VF" -> "torch" [];
"torch.__config__" -> "torch" [];
"torch._deploy" -> "torch" [];
"torch._guards" -> "torch" [];
"torch._jit_internal" -> "torch" [];
"torch._linalg_utils" -> "torch" [];
"torch._lobpcg" -> "torch" [];
"torch._lowrank" -> "torch" [];
"torch._meta_registrations" -> "torch" [];
"torch._ops" -> "torch" [];
"torch._streambase" -> "torch" [];
"torch._tensor" -> "torch" [];
"torch._tensor_str" -> "torch" [];
"torch._utils" -> "torch" [];
"torch._utils_internal" -> "torch" [];
"torch._vmap_internals" -> "torch" [];
"torch._weights_only_unpickler" -> "torch" [];
"torch.functional" -> "torch" [];
"torch.hub" -> "torch" [];
"torch.library" -> "torch" [];
"torch.overrides" -> "torch" [];
"torch.quasirandom" -> "torch" [];
"torch.random" -> "torch" [];
"torch.return_types" -> "torch" [];
"torch.serialization" -> "torch" [];
"torch.storage" -> "torch" [];
"torch.types" -> "torch" [];
"torch" -> "torch._C" [];
"torch._classes" -> "torch._C" [];
"torch._jit_internal" -> "torch._C" [];
"torch._ops" -> "torch._C" [];
"torch._python_dispatcher" -> "torch._C" [];
"torch._size_docs" -> "torch._C" [];
"torch._sources" -> "torch._C" [];
"torch._storage_docs" -> "torch._C" [];
"torch._tensor" -> "torch._C" [];
"torch._tensor_docs" -> "torch._C" [];
"torch._torch_docs" -> "torch._C" [];
"torch.functional" -> "torch._C" [];
"torch.overrides" -> "torch._C" [];
"torch.random" -> "torch._C" [];
"torch" -> "torch._VF" [];
"torch.functional" -> "torch._VF" [];
"torch" -> "torch.__config__" [];
"torch" -> "torch.__future__" [];
"torch" -> "torch._awaits" [];
"torch._jit_internal" -> "torch._awaits" [];
"torch" -> "torch._classes" [];
"torch" -> "torch._compile" [];
"torch._custom_op.functional" -> "torch._custom_op.autograd" [];
"torch._custom_op.impl" -> "torch._custom_op.autograd" [];
"torch._custom_ops" -> "torch._custom_op.impl" [];
"torch._decomp.decompositions" -> "torch._decomp" [];
"torch._decomp.decompositions_for_jvp" -> "torch._decomp" [];
"torch._decomp.decompositions_for_rng" -> "torch._decomp" [];
"torch._meta_registrations" -> "torch._decomp" [];
"torch._decomp" -> "torch._decomp.decompositions" [];
"torch._ops" -> "torch._dispatch.python" [];
"torch" -> "torch._dynamo" [];
"torch._compile" -> "torch._dynamo" [];
"torch._dynamo.eval_frame" -> "torch._dynamo" [];
"torch._dynamo.test_case" -> "torch._dynamo" [];
"torch._dynamo.test_minifier_common" -> "torch._dynamo" [];
"torch._dynamo.testing" -> "torch._dynamo" [];
"torch._dynamo.trace_rules" -> "torch._dynamo" [];
"torch._ops" -> "torch._dynamo" [];
"torch._dynamo.backends.registry" -> "torch._dynamo.backends" [];
"torch._dynamo.backends.cudagraphs" -> "torch._dynamo.backends.common" [];
"torch._dynamo.backends.debugging" -> "torch._dynamo.backends.common" [];
"torch._dynamo.backends.torchxla" -> "torch._dynamo.backends.common" [];
"torch._dynamo.backends.tvm" -> "torch._dynamo.backends.common" [];
"torch._dynamo.backends.cudagraphs" -> "torch._dynamo.backends.debugging" [];
"torch._dynamo.convert_frame" -> "torch._dynamo.backends.debugging" [];
"torch._dynamo.eval_frame" -> "torch._dynamo.backends.debugging" [];
"torch._dynamo.testing" -> "torch._dynamo.backends.debugging" [];
"torch._dynamo.convert_frame" -> "torch._dynamo.backends.distributed" [];
"torch" -> "torch._dynamo.backends.registry" [];
"torch._dynamo" -> "torch._dynamo.backends.registry" [];
"torch._dynamo.backends.cudagraphs" -> "torch._dynamo.backends.registry" [];
"torch._dynamo.backends.debugging" -> "torch._dynamo.backends.registry" [];
"torch._dynamo.backends.onnxrt" -> "torch._dynamo.backends.registry" [];
"torch._dynamo.backends.torchxla" -> "torch._dynamo.backends.registry" [];
"torch._dynamo.backends.tvm" -> "torch._dynamo.backends.registry" [];
"torch._dynamo.convert_frame" -> "torch._dynamo.backends.registry" [];
"torch._dynamo.eval_frame" -> "torch._dynamo.backends.registry" [];
"torch._dynamo.output_graph" -> "torch._dynamo.backends.registry" [];
"torch._dynamo.testing" -> "torch._dynamo.backends.registry" [];
"torch._dynamo.bytecode_transformation" -> "torch._dynamo.bytecode_analysis" [];
"torch._dynamo.convert_frame" -> "torch._dynamo.bytecode_analysis" [];
"torch._dynamo.symbolic_convert" -> "torch._dynamo.bytecode_analysis" [];
"torch._dynamo.codegen" -> "torch._dynamo.bytecode_transformation" [];
"torch._dynamo.convert_frame" -> "torch._dynamo.bytecode_transformation" [];
"torch._dynamo.output_graph" -> "torch._dynamo.bytecode_transformation" [];
"torch._dynamo.resume_execution" -> "torch._dynamo.bytecode_transformation" [];
"torch._dynamo.side_effects" -> "torch._dynamo.bytecode_transformation" [];
"torch._dynamo.source" -> "torch._dynamo.bytecode_transformation" [];
"torch._dynamo.symbolic_convert" -> "torch._dynamo.bytecode_transformation" [];
"torch._dynamo.testing" -> "torch._dynamo.bytecode_transformation" [];
"torch._dynamo.convert_frame" -> "torch._dynamo.cache_size" [];
"torch._dynamo" -> "torch._dynamo.callback" [];
"torch._dynamo" -> "torch._dynamo.code_context" [];
"torch._dynamo.eval_frame" -> "torch._dynamo.code_context" [];
"torch._dynamo.output_graph" -> "torch._dynamo.code_context" [];
"torch._dynamo.symbolic_convert" -> "torch._dynamo.code_context" [];
"torch._dynamo.output_graph" -> "torch._dynamo.codegen" [];
"torch._dynamo.side_effects" -> "torch._dynamo.codegen" [];
"torch._dynamo.symbolic_convert" -> "torch._dynamo.codegen" [];
"torch._dynamo.decorators" -> "torch._dynamo.comptime" [];
"torch._dynamo.cache_size" -> "torch._dynamo.config" [];
"torch._dynamo.convert_frame" -> "torch._dynamo.config" [];
"torch._dynamo.debug_utils" -> "torch._dynamo.config" [];
"torch._dynamo.distributed" -> "torch._dynamo.config" [];
"torch._dynamo.eval_frame" -> "torch._dynamo.config" [];
"torch._dynamo.exc" -> "torch._dynamo.config" [];
"torch._dynamo.guards" -> "torch._dynamo.config" [];
"torch._dynamo.mutation_guard" -> "torch._dynamo.config" [];
"torch._dynamo.output_graph" -> "torch._dynamo.config" [];
"torch._dynamo.pgo" -> "torch._dynamo.config" [];
"torch._dynamo.symbolic_convert" -> "torch._dynamo.config" [];
"torch._dynamo.test_case" -> "torch._dynamo.config" [];
"torch._dynamo.testing" -> "torch._dynamo.config" [];
"torch._dynamo.utils" -> "torch._dynamo.config" [];
"torch._dynamo" -> "torch._dynamo.convert_frame" [];
"torch._dynamo.eval_frame" -> "torch._dynamo.convert_frame" [];
"torch._dynamo.guards" -> "torch._dynamo.convert_frame" [];
"torch._dynamo.output_graph" -> "torch._dynamo.current_scope_id" [];
"torch._dynamo" -> "torch._dynamo.decorators" [];
"torch._dynamo.eval_frame" -> "torch._dynamo.decorators" [];
"torch._dynamo.output_graph" -> "torch._dynamo.decorators" [];
"torch._dynamo.convert_frame" -> "torch._dynamo.distributed" [];
"torch._dynamo" -> "torch._dynamo.eval_frame" [];
"torch._dynamo.compiled_autograd" -> "torch._dynamo.eval_frame" [];
"torch._dynamo.convert_frame" -> "torch._dynamo.eval_frame" [];
"torch._dynamo.decorators" -> "torch._dynamo.eval_frame" [];
"torch._dynamo.guards" -> "torch._dynamo.eval_frame" [];
"torch._dynamo.testing" -> "torch._dynamo.eval_frame" [];
"torch._dynamo.utils" -> "torch._dynamo.eval_frame" [];
"torch._dynamo.codegen" -> "torch._dynamo.exc" [];
"torch._dynamo.comptime" -> "torch._dynamo.exc" [];
"torch._dynamo.convert_frame" -> "torch._dynamo.exc" [];
"torch._dynamo.decorators" -> "torch._dynamo.exc" [];
"torch._dynamo.eval_frame" -> "torch._dynamo.exc" [];
"torch._dynamo.guards" -> "torch._dynamo.exc" [];
"torch._dynamo.output_graph" -> "torch._dynamo.exc" [];
"torch._dynamo.side_effects" -> "torch._dynamo.exc" [];
"torch._dynamo.symbolic_convert" -> "torch._dynamo.exc" [];
"torch._dynamo.utils" -> "torch._dynamo.exc" [];
"torch._dynamo" -> "torch._dynamo.external_utils" [];
"torch._dynamo.compiled_autograd" -> "torch._dynamo.external_utils" [];
"torch._dynamo.decorators" -> "torch._dynamo.external_utils" [];
"torch._dynamo.eval_frame" -> "torch._dynamo.external_utils" [];
"torch._dynamo.guards" -> "torch._dynamo.external_utils" [];
"torch._dynamo.symbolic_convert" -> "torch._dynamo.funcname_cache" [];
"torch._dynamo.output_graph" -> "torch._dynamo.graph_deduplication" [];
"torch._dynamo.graph_deduplication" -> "torch._dynamo.graph_region_tracker" [];
"torch._dynamo.output_graph" -> "torch._dynamo.graph_region_tracker" [];
"torch._dynamo.convert_frame" -> "torch._dynamo.guards" [];
"torch._dynamo.decorators" -> "torch._dynamo.guards" [];
"torch._dynamo.output_graph" -> "torch._dynamo.guards" [];
"torch._dynamo.symbolic_convert" -> "torch._dynamo.guards" [];
"torch._dynamo.testing" -> "torch._dynamo.guards" [];
"torch._guards" -> "torch._dynamo.guards" [];
"torch._dynamo.convert_frame" -> "torch._dynamo.hooks" [];
"torch._dynamo.eval_frame" -> "torch._dynamo.hooks" [];
"torch._dynamo.output_graph" -> "torch._dynamo.logging" [];
"torch._dynamo.symbolic_convert" -> "torch._dynamo.logging" [];
"torch._dynamo.utils" -> "torch._dynamo.metrics_context" [];
"torch._dynamo" -> "torch._dynamo.mutation_guard" [];
"torch._dynamo.eval_frame" -> "torch._dynamo.mutation_guard" [];
"torch._dynamo.guards" -> "torch._dynamo.mutation_guard" [];
"torch._dynamo.output_graph" -> "torch._dynamo.mutation_guard" [];
"torch._dynamo.convert_frame" -> "torch._dynamo.output_graph" [];
"torch._dynamo.symbolic_convert" -> "torch._dynamo.output_graph" [];
"torch._dynamo.testing" -> "torch._dynamo.output_graph" [];
"torch._dynamo" -> "torch._dynamo.pgo" [];
"torch._dynamo.convert_frame" -> "torch._dynamo.pgo" [];
"torch._dynamo.guards" -> "torch._dynamo.polyfills" [];
"torch._dynamo.polyfills.loader" -> "torch._dynamo.polyfills" [];
"torch._dynamo.polyfills" -> "torch._dynamo.polyfills.builtins" [];
"torch._dynamo.polyfills" -> "torch._dynamo.polyfills.functools" [];
"torch._dynamo.polyfills" -> "torch._dynamo.polyfills.itertools" [];
"torch._dynamo" -> "torch._dynamo.polyfills.loader" [];
"torch._dynamo.guards" -> "torch._dynamo.polyfills.loader" [];
"torch._dynamo.polyfills" -> "torch._dynamo.polyfills.operator" [];
"torch._dynamo.polyfills" -> "torch._dynamo.polyfills.os" [];
"torch._dynamo.polyfills" -> "torch._dynamo.polyfills.pytree" [];
"torch._dynamo.polyfills" -> "torch._dynamo.polyfills.sys" [];
"torch._dynamo.convert_frame" -> "torch._dynamo.replay_record" [];
"torch._dynamo.symbolic_convert" -> "torch._dynamo.replay_record" [];
"torch._dynamo.convert_frame" -> "torch._dynamo.repro.after_dynamo" [];
"torch._dynamo.eval_frame" -> "torch._dynamo.repro.after_dynamo" [];
"torch._dynamo" -> "torch._dynamo.resume_execution" [];
"torch._dynamo.convert_frame" -> "torch._dynamo.resume_execution" [];
"torch._dynamo.symbolic_convert" -> "torch._dynamo.resume_execution" [];
"torch._dynamo.trace_rules" -> "torch._dynamo.resume_execution" [];
"torch._dynamo.output_graph" -> "torch._dynamo.side_effects" [];
"torch._dynamo.codegen" -> "torch._dynamo.source" [];
"torch._dynamo.compiled_autograd" -> "torch._dynamo.source" [];
"torch._dynamo.guards" -> "torch._dynamo.source" [];
"torch._dynamo.output_graph" -> "torch._dynamo.source" [];
"torch._dynamo.side_effects" -> "torch._dynamo.source" [];
"torch._dynamo.symbolic_convert" -> "torch._dynamo.source" [];
"torch._dynamo.utils" -> "torch._dynamo.source" [];
"torch._dynamo" -> "torch._dynamo.symbolic_convert" [];
"torch._dynamo.convert_frame" -> "torch._dynamo.symbolic_convert" [];
"torch._dynamo.graph_region_tracker" -> "torch._dynamo.symbolic_convert" [];
"torch._dynamo.output_graph" -> "torch._dynamo.symbolic_convert" [];
"torch._dynamo.pgo" -> "torch._dynamo.symbolic_convert" [];
"torch._dynamo.testing" -> "torch._dynamo.symbolic_convert" [];
"torch._dynamo.test_minifier_common" -> "torch._dynamo.test_case" [];
"torch._dynamo.debug_utils" -> "torch._dynamo.testing" [];
"torch._dynamo.convert_frame" -> "torch._dynamo.trace_rules" [];
"torch._dynamo.decorators" -> "torch._dynamo.trace_rules" [];
"torch._dynamo.eval_frame" -> "torch._dynamo.trace_rules" [];
"torch._dynamo.symbolic_convert" -> "torch._dynamo.trace_rules" [];
"torch._dynamo.test_minifier_common" -> "torch._dynamo.trace_rules" [];
"torch._dynamo.utils" -> "torch._dynamo.trace_rules" [];
"torch._dynamo.cache_size" -> "torch._dynamo.types" [];
"torch._dynamo.convert_frame" -> "torch._dynamo.types" [];
"torch._dynamo.eval_frame" -> "torch._dynamo.types" [];
"torch._dynamo.guards" -> "torch._dynamo.types" [];
"torch._dynamo.hooks" -> "torch._dynamo.types" [];
"torch._dynamo.testing" -> "torch._dynamo.types" [];
"torch._dynamo" -> "torch._dynamo.utils" [];
"torch._dynamo.bytecode_transformation" -> "torch._dynamo.utils" [];
"torch._dynamo.code_context" -> "torch._dynamo.utils" [];
"torch._dynamo.codegen" -> "torch._dynamo.utils" [];
"torch._dynamo.compiled_autograd" -> "torch._dynamo.utils" [];
"torch._dynamo.convert_frame" -> "torch._dynamo.utils" [];
"torch._dynamo.debug_utils" -> "torch._dynamo.utils" [];
"torch._dynamo.decorators" -> "torch._dynamo.utils" [];
"torch._dynamo.eval_frame" -> "torch._dynamo.utils" [];
"torch._dynamo.exc" -> "torch._dynamo.utils" [];
"torch._dynamo.guards" -> "torch._dynamo.utils" [];
"torch._dynamo.mutation_guard" -> "torch._dynamo.utils" [];
"torch._dynamo.output_graph" -> "torch._dynamo.utils" [];
"torch._dynamo.pgo" -> "torch._dynamo.utils" [];
"torch._dynamo.profiler" -> "torch._dynamo.utils" [];
"torch._dynamo.resume_execution" -> "torch._dynamo.utils" [];
"torch._dynamo.side_effects" -> "torch._dynamo.utils" [];
"torch._dynamo.source" -> "torch._dynamo.utils" [];
"torch._dynamo.symbolic_convert" -> "torch._dynamo.utils" [];
"torch._dynamo.test_case" -> "torch._dynamo.utils" [];
"torch._dynamo.testing" -> "torch._dynamo.utils" [];
"torch._dynamo.trace_rules" -> "torch._dynamo.utils" [];
"torch._dynamo.comptime" -> "torch._dynamo.variables" [];
"torch._dynamo.decorators" -> "torch._dynamo.variables" [];
"torch._dynamo.exc" -> "torch._dynamo.variables" [];
"torch._dynamo.output_graph" -> "torch._dynamo.variables" [];
"torch._dynamo.side_effects" -> "torch._dynamo.variables" [];
"torch._dynamo.symbolic_convert" -> "torch._dynamo.variables" [];
"torch._dynamo.trace_rules" -> "torch._dynamo.variables" [];
"torch._dynamo.utils" -> "torch._dynamo.variables" [];
"torch._dynamo.variables.base" -> "torch._dynamo.variables" [];
"torch._dynamo.variables.builtin" -> "torch._dynamo.variables" [];
"torch._dynamo.variables.constant" -> "torch._dynamo.variables" [];
"torch._dynamo.variables.ctx_manager" -> "torch._dynamo.variables" [];
"torch._dynamo.variables.dicts" -> "torch._dynamo.variables" [];
"torch._dynamo.variables.distributed" -> "torch._dynamo.variables" [];
"torch._dynamo.variables.functions" -> "torch._dynamo.variables" [];
"torch._dynamo.variables.higher_order_ops" -> "torch._dynamo.variables" [];
"torch._dynamo.variables.iter" -> "torch._dynamo.variables" [];
"torch._dynamo.variables.lists" -> "torch._dynamo.variables" [];
"torch._dynamo.variables.misc" -> "torch._dynamo.variables" [];
"torch._dynamo.variables.nn_module" -> "torch._dynamo.variables" [];
"torch._dynamo.variables.optimizer" -> "torch._dynamo.variables" [];
"torch._dynamo.variables.tensor" -> "torch._dynamo.variables" [];
"torch._dynamo.variables.torch" -> "torch._dynamo.variables" [];
"torch._dynamo.variables.user_defined" -> "torch._dynamo.variables" [];
"torch._dynamo.codegen" -> "torch._dynamo.variables.base" [];
"torch._dynamo.output_graph" -> "torch._dynamo.variables.base" [];
"torch._dynamo.side_effects" -> "torch._dynamo.variables.base" [];
"torch._dynamo.symbolic_convert" -> "torch._dynamo.variables.base" [];
"torch._dynamo.trace_rules" -> "torch._dynamo.variables.base" [];
"torch._dynamo.utils" -> "torch._dynamo.variables.base" [];
"torch._dynamo.variables" -> "torch._dynamo.variables.base" [];
"torch._dynamo.variables.builder" -> "torch._dynamo.variables.base" [];
"torch._dynamo.variables.builtin" -> "torch._dynamo.variables.base" [];
"torch._dynamo.variables.constant" -> "torch._dynamo.variables.base" [];
"torch._dynamo.variables.ctx_manager" -> "torch._dynamo.variables.base" [];
"torch._dynamo.variables.dicts" -> "torch._dynamo.variables.base" [];
"torch._dynamo.variables.distributed" -> "torch._dynamo.variables.base" [];
"torch._dynamo.variables.functions" -> "torch._dynamo.variables.base" [];
"torch._dynamo.variables.higher_order_ops" -> "torch._dynamo.variables.base" [];
"torch._dynamo.variables.iter" -> "torch._dynamo.variables.base" [];
"torch._dynamo.variables.lazy" -> "torch._dynamo.variables.base" [];
"torch._dynamo.variables.lists" -> "torch._dynamo.variables.base" [];
"torch._dynamo.variables.misc" -> "torch._dynamo.variables.base" [];
"torch._dynamo.variables.nn_module" -> "torch._dynamo.variables.base" [];
"torch._dynamo.variables.optimizer" -> "torch._dynamo.variables.base" [];
"torch._dynamo.variables.script_object" -> "torch._dynamo.variables.base" [];
"torch._dynamo.variables.sdpa" -> "torch._dynamo.variables.base" [];
"torch._dynamo.variables.tensor" -> "torch._dynamo.variables.base" [];
"torch._dynamo.variables.torch" -> "torch._dynamo.variables.base" [];
"torch._dynamo.variables.torch_function" -> "torch._dynamo.variables.base" [];
"torch._dynamo.variables.user_defined" -> "torch._dynamo.variables.base" [];
"torch._dynamo.convert_frame" -> "torch._dynamo.variables.builder" [];
"torch._dynamo.decorators" -> "torch._dynamo.variables.builder" [];
"torch._dynamo.output_graph" -> "torch._dynamo.variables.builder" [];
"torch._dynamo.symbolic_convert" -> "torch._dynamo.variables.builder" [];
"torch._dynamo.variables.base" -> "torch._dynamo.variables.builder" [];
"torch._dynamo.variables.builtin" -> "torch._dynamo.variables.builder" [];
"torch._dynamo.variables.ctx_manager" -> "torch._dynamo.variables.builder" [];
"torch._dynamo.variables.distributed" -> "torch._dynamo.variables.builder" [];
"torch._dynamo.variables.higher_order_ops" -> "torch._dynamo.variables.builder" [];
"torch._dynamo.variables.misc" -> "torch._dynamo.variables.builder" [];
"torch._dynamo.variables.nn_module" -> "torch._dynamo.variables.builder" [];
"torch._dynamo.variables.sdpa" -> "torch._dynamo.variables.builder" [];
"torch._dynamo.variables.tensor" -> "torch._dynamo.variables.builder" [];
"torch._dynamo.variables.torch" -> "torch._dynamo.variables.builder" [];
"torch._dynamo.variables.user_defined" -> "torch._dynamo.variables.builder" [];
"torch._dynamo.symbolic_convert" -> "torch._dynamo.variables.builtin" [];
"torch._dynamo.variables" -> "torch._dynamo.variables.builtin" [];
"torch._dynamo.variables.higher_order_ops" -> "torch._dynamo.variables.builtin" [];
"torch._dynamo.variables.iter" -> "torch._dynamo.variables.builtin" [];
"torch._dynamo.variables.lists" -> "torch._dynamo.variables.builtin" [];
"torch._dynamo.variables.tensor" -> "torch._dynamo.variables.builtin" [];
"torch._dynamo.variables.user_defined" -> "torch._dynamo.variables.builtin" [];
"torch._dynamo.comptime" -> "torch._dynamo.variables.constant" [];
"torch._dynamo.symbolic_convert" -> "torch._dynamo.variables.constant" [];
"torch._dynamo.utils" -> "torch._dynamo.variables.constant" [];
"torch._dynamo.variables" -> "torch._dynamo.variables.constant" [];
"torch._dynamo.variables.builder" -> "torch._dynamo.variables.constant" [];
"torch._dynamo.variables.builtin" -> "torch._dynamo.variables.constant" [];
"torch._dynamo.variables.dicts" -> "torch._dynamo.variables.constant" [];
"torch._dynamo.variables.distributed" -> "torch._dynamo.variables.constant" [];
"torch._dynamo.variables.functions" -> "torch._dynamo.variables.constant" [];
"torch._dynamo.variables.iter" -> "torch._dynamo.variables.constant" [];
"torch._dynamo.variables.lazy" -> "torch._dynamo.variables.constant" [];
"torch._dynamo.variables.lists" -> "torch._dynamo.variables.constant" [];
"torch._dynamo.variables.optimizer" -> "torch._dynamo.variables.constant" [];
"torch._dynamo.variables.tensor" -> "torch._dynamo.variables.constant" [];
"torch._dynamo.variables.torch_function" -> "torch._dynamo.variables.constant" [];
"torch._dynamo.symbolic_convert" -> "torch._dynamo.variables.ctx_manager" [];
"torch._dynamo.variables" -> "torch._dynamo.variables.ctx_manager" [];
"torch._dynamo.variables.builder" -> "torch._dynamo.variables.ctx_manager" [];
"torch._dynamo.variables.builtin" -> "torch._dynamo.variables.ctx_manager" [];
"torch._dynamo.variables.torch" -> "torch._dynamo.variables.ctx_manager" [];
"torch._dynamo.variables.torch_function" -> "torch._dynamo.variables.ctx_manager" [];
"torch._dynamo.variables.user_defined" -> "torch._dynamo.variables.ctx_manager" [];
"torch._dynamo.symbolic_convert" -> "torch._dynamo.variables.dicts" [];
"torch._dynamo.variables" -> "torch._dynamo.variables.dicts" [];
"torch._dynamo.variables.builder" -> "torch._dynamo.variables.dicts" [];
"torch._dynamo.variables.builtin" -> "torch._dynamo.variables.dicts" [];
"torch._dynamo.variables.functions" -> "torch._dynamo.variables.dicts" [];
"torch._dynamo.variables.higher_order_ops" -> "torch._dynamo.variables.dicts" [];
"torch._dynamo.variables.optimizer" -> "torch._dynamo.variables.dicts" [];
"torch._dynamo.variables.torch_function" -> "torch._dynamo.variables.dicts" [];
"torch._dynamo.variables.user_defined" -> "torch._dynamo.variables.dicts" [];
"torch._dynamo.variables" -> "torch._dynamo.variables.distributed" [];
"torch._dynamo.variables.builder" -> "torch._dynamo.variables.distributed" [];
"torch._dynamo.variables.torch" -> "torch._dynamo.variables.distributed" [];
"torch._dynamo.symbolic_convert" -> "torch._dynamo.variables.functions" [];
"torch._dynamo.variables" -> "torch._dynamo.variables.functions" [];
"torch._dynamo.variables.builder" -> "torch._dynamo.variables.functions" [];
"torch._dynamo.variables.builtin" -> "torch._dynamo.variables.functions" [];
"torch._dynamo.variables.ctx_manager" -> "torch._dynamo.variables.functions" [];
"torch._dynamo.variables.higher_order_ops" -> "torch._dynamo.variables.functions" [];
"torch._dynamo.variables.lists" -> "torch._dynamo.variables.functions" [];
"torch._dynamo.variables.misc" -> "torch._dynamo.variables.functions" [];
"torch._dynamo.variables.nn_module" -> "torch._dynamo.variables.functions" [];
"torch._dynamo.utils" -> "torch._dynamo.variables.higher_order_ops" [];
"torch._dynamo.variables" -> "torch._dynamo.variables.higher_order_ops" [];
"torch._dynamo.variables.builder" -> "torch._dynamo.variables.higher_order_ops" [];
"torch._dynamo.variables.misc" -> "torch._dynamo.variables.higher_order_ops" [];
"torch._dynamo.variables.script_object" -> "torch._dynamo.variables.higher_order_ops" [];
"torch._dynamo.symbolic_convert" -> "torch._dynamo.variables.iter" [];
"torch._dynamo.variables" -> "torch._dynamo.variables.iter" [];
"torch._dynamo.variables.builder" -> "torch._dynamo.variables.iter" [];
"torch._dynamo.variables.lists" -> "torch._dynamo.variables.iter" [];
"torch._dynamo.symbolic_convert" -> "torch._dynamo.variables.lazy" [];
"torch._dynamo.variables" -> "torch._dynamo.variables.lazy" [];
"torch._dynamo.variables.builder" -> "torch._dynamo.variables.lazy" [];
"torch._dynamo.variables.builtin" -> "torch._dynamo.variables.lazy" [];
"torch._dynamo.variables.higher_order_ops" -> "torch._dynamo.variables.lazy" [];
"torch._dynamo.variables.nn_module" -> "torch._dynamo.variables.lazy" [];
"torch._dynamo.variables.optimizer" -> "torch._dynamo.variables.lazy" [];
"torch._dynamo.variables.torch_function" -> "torch._dynamo.variables.lazy" [];
"torch._dynamo.output_graph" -> "torch._dynamo.variables.lists" [];
"torch._dynamo.symbolic_convert" -> "torch._dynamo.variables.lists" [];
"torch._dynamo.variables" -> "torch._dynamo.variables.lists" [];
"torch._dynamo.variables.builder" -> "torch._dynamo.variables.lists" [];
"torch._dynamo.variables.builtin" -> "torch._dynamo.variables.lists" [];
"torch._dynamo.variables.functions" -> "torch._dynamo.variables.lists" [];
"torch._dynamo.variables.higher_order_ops" -> "torch._dynamo.variables.lists" [];
"torch._dynamo.variables.nn_module" -> "torch._dynamo.variables.lists" [];
"torch._dynamo.variables.optimizer" -> "torch._dynamo.variables.lists" [];
"torch._dynamo.variables.tensor" -> "torch._dynamo.variables.lists" [];
"torch._dynamo.variables.torch" -> "torch._dynamo.variables.lists" [];
"torch._dynamo.variables.torch_function" -> "torch._dynamo.variables.lists" [];
"torch._dynamo.output_graph" -> "torch._dynamo.variables.misc" [];
"torch._dynamo.side_effects" -> "torch._dynamo.variables.misc" [];
"torch._dynamo.symbolic_convert" -> "torch._dynamo.variables.misc" [];
"torch._dynamo.variables" -> "torch._dynamo.variables.misc" [];
"torch._dynamo.variables.builder" -> "torch._dynamo.variables.misc" [];
"torch._dynamo.variables.optimizer" -> "torch._dynamo.variables.misc" [];
"torch._dynamo.variables.sdpa" -> "torch._dynamo.variables.misc" [];
"torch._dynamo.variables.tensor" -> "torch._dynamo.variables.misc" [];
"torch._dynamo.codegen" -> "torch._dynamo.variables.nn_module" [];
"torch._dynamo.output_graph" -> "torch._dynamo.variables.nn_module" [];
"torch._dynamo.symbolic_convert" -> "torch._dynamo.variables.nn_module" [];
"torch._dynamo.variables" -> "torch._dynamo.variables.nn_module" [];
"torch._dynamo.variables.builder" -> "torch._dynamo.variables.nn_module" [];
"torch._dynamo.variables.builtin" -> "torch._dynamo.variables.nn_module" [];
"torch._dynamo.variables.misc" -> "torch._dynamo.variables.nn_module" [];
"torch._dynamo.variables" -> "torch._dynamo.variables.optimizer" [];
"torch._dynamo.variables.builder" -> "torch._dynamo.variables.optimizer" [];
"torch._dynamo.variables.builder" -> "torch._dynamo.variables.script_object" [];
"torch._dynamo.variables" -> "torch._dynamo.variables.sdpa" [];
"torch._dynamo.variables.builder" -> "torch._dynamo.variables.sdpa" [];
"torch._dynamo.codegen" -> "torch._dynamo.variables.tensor" [];
"torch._dynamo.comptime" -> "torch._dynamo.variables.tensor" [];
"torch._dynamo.output_graph" -> "torch._dynamo.variables.tensor" [];
"torch._dynamo.symbolic_convert" -> "torch._dynamo.variables.tensor" [];
"torch._dynamo.utils" -> "torch._dynamo.variables.tensor" [];
"torch._dynamo.variables" -> "torch._dynamo.variables.tensor" [];
"torch._dynamo.variables.builder" -> "torch._dynamo.variables.tensor" [];
"torch._dynamo.variables.builtin" -> "torch._dynamo.variables.tensor" [];
"torch._dynamo.variables.constant" -> "torch._dynamo.variables.tensor" [];
"torch._dynamo.variables.functions" -> "torch._dynamo.variables.tensor" [];
"torch._dynamo.variables.higher_order_ops" -> "torch._dynamo.variables.tensor" [];
"torch._dynamo.variables.lazy" -> "torch._dynamo.variables.tensor" [];
"torch._dynamo.variables.lists" -> "torch._dynamo.variables.tensor" [];
"torch._dynamo.variables.misc" -> "torch._dynamo.variables.tensor" [];
"torch._dynamo.variables.nn_module" -> "torch._dynamo.variables.tensor" [];
"torch._dynamo.variables.torch_function" -> "torch._dynamo.variables.tensor" [];
"torch._dynamo.variables" -> "torch._dynamo.variables.torch" [];
"torch._dynamo.variables.builder" -> "torch._dynamo.variables.torch" [];
"torch._dynamo.variables.builtin" -> "torch._dynamo.variables.torch" [];
"torch._dynamo.variables.sdpa" -> "torch._dynamo.variables.torch" [];
"torch._dynamo.variables.torch_function" -> "torch._dynamo.variables.torch" [];
"torch._dynamo.codegen" -> "torch._dynamo.variables.torch_function" [];
"torch._dynamo.convert_frame" -> "torch._dynamo.variables.torch_function" [];
"torch._dynamo.output_graph" -> "torch._dynamo.variables.torch_function" [];
"torch._dynamo.resume_execution" -> "torch._dynamo.variables.torch_function" [];
"torch._dynamo.source" -> "torch._dynamo.variables.torch_function" [];
"torch._dynamo.symbolic_convert" -> "torch._dynamo.variables.torch_function" [];
"torch._dynamo.utils" -> "torch._dynamo.variables.torch_function" [];
"torch._dynamo.variables.builder" -> "torch._dynamo.variables.torch_function" [];
"torch._dynamo.variables.builtin" -> "torch._dynamo.variables.torch_function" [];
"torch._dynamo.variables.tensor" -> "torch._dynamo.variables.torch_function" [];
"torch._dynamo.variables.torch" -> "torch._dynamo.variables.torch_function" [];
"torch._dynamo.variables.user_defined" -> "torch._dynamo.variables.torch_function" [];
"torch._dynamo.side_effects" -> "torch._dynamo.variables.user_defined" [];
"torch._dynamo.symbolic_convert" -> "torch._dynamo.variables.user_defined" [];
"torch._dynamo.variables" -> "torch._dynamo.variables.user_defined" [];
"torch._dynamo.variables.builder" -> "torch._dynamo.variables.user_defined" [];
"torch._dynamo.variables.builtin" -> "torch._dynamo.variables.user_defined" [];
"torch._dynamo.variables.ctx_manager" -> "torch._dynamo.variables.user_defined" [];
"torch._dynamo.variables.misc" -> "torch._dynamo.variables.user_defined" [];
"torch._dynamo.variables.nn_module" -> "torch._dynamo.variables.user_defined" [];
"torch._dynamo.variables.optimizer" -> "torch._dynamo.variables.user_defined" [];
"torch._dynamo.variables.script_object" -> "torch._dynamo.variables.user_defined" [];
"torch._dynamo.variables.torch_function" -> "torch._dynamo.variables.user_defined" [];
"torch._export.db.gen_example" -> "torch._export.db.examples" [];
"torch._export.db.logging" -> "torch._export.db.examples" [];
"torch._export" -> "torch._export.non_strict_utils" [];
"torch._export.pass_base" -> "torch._export.pass_infra.node_metadata" [];
"torch._export.pass_base" -> "torch._export.pass_infra.proxy_value" [];
"torch._export.passes.insert_custom_op_guards" -> "torch._export.passes._node_metadata_hook" [];
"torch._export.utils" -> "torch._export.passes._node_metadata_hook" [];
"torch._export.non_strict_utils" -> "torch._export.passes.add_runtime_assertions_for_constraints_pass" [];
"torch._export.utils" -> "torch._export.passes.add_runtime_assertions_for_constraints_pass" [];
"torch._export.non_strict_utils" -> "torch._export.passes.lift_constants_pass" [];
"torch._export.utils" -> "torch._export.passes.lift_constants_pass" [];
"torch._export.converter" -> "torch._export.passes.replace_quantized_ops_with_standard_ops_pass" [];
"torch._export.passes" -> "torch._export.passes.replace_view_ops_with_view_copy_ops_pass" [];
"torch._export.passes.replace_autocast_with_hop_pass" -> "torch._export.passes.replace_with_hop_pass_util" [];
"torch._export.passes.replace_set_grad_with_hop_pass" -> "torch._export.passes.replace_with_hop_pass_util" [];
"torch._export.serde.aoti_schema" -> "torch._export.serde.schema" [];
"torch._export.serde.schema_check" -> "torch._export.serde.schema" [];
"torch._export.serde.serialize" -> "torch._export.serde.schema" [];
"torch._export.serde.dynamic_shapes" -> "torch._export.serde.serialize" [];
"torch._export.serde.schema" -> "torch._export.serde.union" [];
"torch._export.serde.schema_check" -> "torch._export.serde.union" [];
"torch._export.serde.serialize" -> "torch._export.serde.union" [];
"torch._export" -> "torch._export.utils" [];
"torch._export" -> "torch._export.wrappers" [];
"torch._functorch.partitioners" -> "torch._functorch._activation_checkpointing.knapsack" [];
"torch._functorch._aot_autograd.jit_compile_runtime_wrappers" -> "torch._functorch._aot_autograd.autograd_cache" [];
"torch._functorch.aot_autograd" -> "torch._functorch._aot_autograd.autograd_cache" [];
"torch._functorch._aot_autograd.input_output_analysis" -> "torch._functorch._aot_autograd.collect_metadata_analysis" [];
"torch._functorch._aot_autograd.runtime_wrappers" -> "torch._functorch._aot_autograd.collect_metadata_analysis" [];
"torch._functorch._aot_autograd.traced_function_transforms" -> "torch._functorch._aot_autograd.collect_metadata_analysis" [];
"torch._functorch.aot_autograd" -> "torch._functorch._aot_autograd.collect_metadata_analysis" [];
"torch._functorch._aot_autograd.jit_compile_runtime_wrappers" -> "torch._functorch._aot_autograd.dispatch_and_compile_graph" [];
"torch._functorch._aot_autograd.collect_metadata_analysis" -> "torch._functorch._aot_autograd.functional_utils" [];
"torch._functorch._aot_autograd.dispatch_and_compile_graph" -> "torch._functorch._aot_autograd.functional_utils" [];
"torch._functorch._aot_autograd.runtime_wrappers" -> "torch._functorch._aot_autograd.functional_utils" [];
"torch._functorch._aot_autograd.schemas" -> "torch._functorch._aot_autograd.functional_utils" [];
"torch._functorch._aot_autograd.traced_function_transforms" -> "torch._functorch._aot_autograd.functional_utils" [];
"torch._functorch.aot_autograd" -> "torch._functorch._aot_autograd.functional_utils" [];
"torch._functorch._aot_autograd.runtime_wrappers" -> "torch._functorch._aot_autograd.input_output_analysis" [];
"torch._functorch.aot_autograd" -> "torch._functorch._aot_autograd.input_output_analysis" [];
"torch._functorch.aot_autograd" -> "torch._functorch._aot_autograd.jit_compile_runtime_wrappers" [];
"torch._functorch._aot_autograd.jit_compile_runtime_wrappers" -> "torch._functorch._aot_autograd.logging_utils" [];
"torch._functorch._aot_autograd.runtime_wrappers" -> "torch._functorch._aot_autograd.logging_utils" [];
"torch._functorch._aot_autograd.traced_function_transforms" -> "torch._functorch._aot_autograd.logging_utils" [];
"torch._functorch.aot_autograd" -> "torch._functorch._aot_autograd.logging_utils" [];
"torch._functorch.partitioners" -> "torch._functorch._aot_autograd.logging_utils" [];
"torch._functorch._aot_autograd.autograd_cache" -> "torch._functorch._aot_autograd.runtime_wrappers" [];
"torch._functorch._aot_autograd.jit_compile_runtime_wrappers" -> "torch._functorch._aot_autograd.runtime_wrappers" [];
"torch._functorch.aot_autograd" -> "torch._functorch._aot_autograd.runtime_wrappers" [];
"torch._functorch._aot_autograd.autograd_cache" -> "torch._functorch._aot_autograd.schemas" [];
"torch._functorch._aot_autograd.collect_metadata_analysis" -> "torch._functorch._aot_autograd.schemas" [];
"torch._functorch._aot_autograd.dispatch_and_compile_graph" -> "torch._functorch._aot_autograd.schemas" [];
"torch._functorch._aot_autograd.input_output_analysis" -> "torch._functorch._aot_autograd.schemas" [];
"torch._functorch._aot_autograd.jit_compile_runtime_wrappers" -> "torch._functorch._aot_autograd.schemas" [];
"torch._functorch._aot_autograd.runtime_wrappers" -> "torch._functorch._aot_autograd.schemas" [];
"torch._functorch._aot_autograd.subclass_utils" -> "torch._functorch._aot_autograd.schemas" [];
"torch._functorch._aot_autograd.traced_function_transforms" -> "torch._functorch._aot_autograd.schemas" [];
"torch._functorch.aot_autograd" -> "torch._functorch._aot_autograd.schemas" [];
"torch._functorch._aot_autograd.collect_metadata_analysis" -> "torch._functorch._aot_autograd.subclass_utils" [];
"torch._functorch._aot_autograd.jit_compile_runtime_wrappers" -> "torch._functorch._aot_autograd.subclass_utils" [];
"torch._functorch._aot_autograd.runtime_wrappers" -> "torch._functorch._aot_autograd.subclass_utils" [];
"torch._functorch._aot_autograd.schemas" -> "torch._functorch._aot_autograd.subclass_utils" [];
"torch._functorch._aot_autograd.traced_function_transforms" -> "torch._functorch._aot_autograd.subclass_utils" [];
"torch._functorch.aot_autograd" -> "torch._functorch._aot_autograd.subclass_utils" [];
"torch._functorch._aot_autograd.dispatch_and_compile_graph" -> "torch._functorch._aot_autograd.traced_function_transforms" [];
"torch._functorch._aot_autograd.runtime_wrappers" -> "torch._functorch._aot_autograd.traced_function_transforms" [];
"torch._functorch.aot_autograd" -> "torch._functorch._aot_autograd.traced_function_transforms" [];
"torch._functorch._aot_autograd.collect_metadata_analysis" -> "torch._functorch._aot_autograd.utils" [];
"torch._functorch._aot_autograd.dispatch_and_compile_graph" -> "torch._functorch._aot_autograd.utils" [];
"torch._functorch._aot_autograd.input_output_analysis" -> "torch._functorch._aot_autograd.utils" [];
"torch._functorch._aot_autograd.jit_compile_runtime_wrappers" -> "torch._functorch._aot_autograd.utils" [];
"torch._functorch._aot_autograd.runtime_wrappers" -> "torch._functorch._aot_autograd.utils" [];
"torch._functorch._aot_autograd.schemas" -> "torch._functorch._aot_autograd.utils" [];
"torch._functorch._aot_autograd.subclass_utils" -> "torch._functorch._aot_autograd.utils" [];
"torch._functorch._aot_autograd.traced_function_transforms" -> "torch._functorch._aot_autograd.utils" [];
"torch._functorch.aot_autograd" -> "torch._functorch._aot_autograd.utils" [];
"torch._functorch.partitioners" -> "torch._functorch._aot_autograd.utils" [];
"torch._functorch.compilers" -> "torch._functorch.aot_autograd" [];
"torch._functorch.autograd_function" -> "torch._functorch.apis" [];
"torch._functorch.deprecated" -> "torch._functorch.apis" [];
"torch._functorch.eager_transforms" -> "torch._functorch.apis" [];
"torch.library" -> "torch._functorch.autograd_function" [];
"torch._functorch.compilers" -> "torch._functorch.compile_utils" [];
"torch._functorch.fx_minifier" -> "torch._functorch.compile_utils" [];
"torch._functorch.partitioners" -> "torch._functorch.compile_utils" [];
"torch._functorch.aot_autograd" -> "torch._functorch.config" [];
"torch._functorch.partitioners" -> "torch._functorch.config" [];
"torch._functorch.apis" -> "torch._functorch.eager_transforms" [];
"torch._functorch.deprecated" -> "torch._functorch.eager_transforms" [];
"torch._functorch.deprecated" -> "torch._functorch.make_functional" [];
"torch._functorch.aot_autograd" -> "torch._functorch.partitioners" [];
"torch._functorch.compilers" -> "torch._functorch.partitioners" [];
"torch._ops" -> "torch._functorch.pyfunctorch" [];
"torch.library" -> "torch._functorch.pyfunctorch" [];
"torch._functorch.apis" -> "torch._functorch.utils" [];
"torch._functorch.autograd_function" -> "torch._functorch.utils" [];
"torch._functorch.batch_norm_replacement" -> "torch._functorch.utils" [];
"torch._functorch.eager_transforms" -> "torch._functorch.utils" [];
"torch._functorch.functional_call" -> "torch._functorch.utils" [];
"torch._functorch.apis" -> "torch._functorch.vmap" [];
"torch._functorch.autograd_function" -> "torch._functorch.vmap" [];
"torch._functorch.deprecated" -> "torch._functorch.vmap" [];
"torch._functorch.eager_transforms" -> "torch._functorch.vmap" [];
"torch" -> "torch._higher_order_ops.cond" [];
"torch._higher_order_ops" -> "torch._higher_order_ops.cond" [];
"torch._higher_order_ops.torchbind" -> "torch._higher_order_ops.effects" [];
"torch._ops" -> "torch._higher_order_ops.effects" [];
"torch._higher_order_ops" -> "torch._higher_order_ops.flex_attention" [];
"torch._higher_order_ops" -> "torch._higher_order_ops.foreach_map" [];
"torch._higher_order_ops" -> "torch._higher_order_ops.hints_wrap" [];
"torch._guards" -> "torch._higher_order_ops.invoke_subgraph" [];
"torch._higher_order_ops" -> "torch._higher_order_ops.invoke_subgraph" [];
"torch._higher_order_ops.prim_hop_base" -> "torch._higher_order_ops.invoke_subgraph" [];
"torch._higher_order_ops" -> "torch._higher_order_ops.prim_hop_base" [];
"torch._higher_order_ops.foreach_map" -> "torch._higher_order_ops.prim_hop_base" [];
"torch._higher_order_ops" -> "torch._higher_order_ops.scan" [];
"torch._higher_order_ops.effects" -> "torch._higher_order_ops.torchbind" [];
"torch._higher_order_ops.associative_scan" -> "torch._higher_order_ops.utils" [];
"torch._higher_order_ops.cond" -> "torch._higher_order_ops.utils" [];
"torch._higher_order_ops.flex_attention" -> "torch._higher_order_ops.utils" [];
"torch._higher_order_ops.hints_wrap" -> "torch._higher_order_ops.utils" [];
"torch._higher_order_ops.invoke_subgraph" -> "torch._higher_order_ops.utils" [];
"torch._higher_order_ops.map" -> "torch._higher_order_ops.utils" [];
"torch._higher_order_ops.out_dtype" -> "torch._higher_order_ops.utils" [];
"torch._higher_order_ops.prim_hop_base" -> "torch._higher_order_ops.utils" [];
"torch._higher_order_ops.run_const_graph" -> "torch._higher_order_ops.utils" [];
"torch._higher_order_ops.scan" -> "torch._higher_order_ops.utils" [];
"torch._higher_order_ops.strict_mode" -> "torch._higher_order_ops.utils" [];
"torch._higher_order_ops.torchbind" -> "torch._higher_order_ops.utils" [];
"torch._higher_order_ops.while_loop" -> "torch._higher_order_ops.utils" [];
"torch" -> "torch._higher_order_ops.while_loop" [];
"torch._higher_order_ops" -> "torch._higher_order_ops.while_loop" [];
"torch" -> "torch._inductor" [];
"torch._inductor.autotune_process" -> "torch._inductor.async_compile" [];
"torch._inductor.compile_fx" -> "torch._inductor.async_compile" [];
"torch._inductor.scheduler" -> "torch._inductor.async_compile" [];
"torch._inductor.select_algorithm" -> "torch._inductor.async_compile" [];
"torch._inductor.autoheuristic.autoheuristic" -> "torch._inductor.autoheuristic.autoheuristic_utils" [];
"torch._inductor.autoheuristic.learned_heuristic_controller" -> "torch._inductor.autoheuristic.autoheuristic_utils" [];
"torch._inductor.autoheuristic.learnedheuristic_interface" -> "torch._inductor.autoheuristic.autoheuristic_utils" [];
"torch._inductor.autoheuristic.autoheuristic" -> "torch._inductor.autoheuristic.learned_heuristic_controller" [];
"torch._inductor.autoheuristic.learned_heuristic_controller" -> "torch._inductor.autoheuristic.learnedheuristic_interface" [];
"torch._inductor.select_algorithm" -> "torch._inductor.autotune_process" [];
"torch._inductor.loop_body" -> "torch._inductor.bounds" [];
"torch._inductor.virtualized" -> "torch._inductor.choices" [];
"torch._inductor.aoti_eager" -> "torch._inductor.codecache" [];
"torch._inductor.async_compile" -> "torch._inductor.codecache" [];
"torch._inductor.autotune_process" -> "torch._inductor.codecache" [];
"torch._inductor.choices" -> "torch._inductor.codecache" [];
"torch._inductor.compile_fx" -> "torch._inductor.codecache" [];
"torch._inductor.cpp_builder" -> "torch._inductor.codecache" [];
"torch._inductor.cpu_vec_isa" -> "torch._inductor.codecache" [];
"torch._inductor.graph" -> "torch._inductor.codecache" [];
"torch._inductor.metrics" -> "torch._inductor.codecache" [];
"torch._inductor.output_code" -> "torch._inductor.codecache" [];
"torch._inductor.select_algorithm" -> "torch._inductor.codecache" [];
"torch._inductor.utils" -> "torch._inductor.codecache" [];
"torch._inductor.wrapper_benchmark" -> "torch._inductor.codecache" [];
"torch._inductor.codegen.cpp_wrapper_cpu" -> "torch._inductor.codegen.aoti_hipify_utils" [];
"torch._inductor.codegen.cpp_wrapper_gpu" -> "torch._inductor.codegen.aoti_hipify_utils" [];
"torch._inductor.codegen.triton" -> "torch._inductor.codegen.block_analysis" [];
"torch._inductor.autotune_process" -> "torch._inductor.codegen.common" [];
"torch._inductor.codegen.cpp" -> "torch._inductor.codegen.common" [];
"torch._inductor.codegen.cpp_micro_gemm" -> "torch._inductor.codegen.common" [];
"torch._inductor.codegen.cpp_template" -> "torch._inductor.codegen.common" [];
"torch._inductor.codegen.cpp_template_kernel" -> "torch._inductor.codegen.common" [];
"torch._inductor.codegen.cpp_utils" -> "torch._inductor.codegen.common" [];
"torch._inductor.codegen.cpp_wrapper_cpu" -> "torch._inductor.codegen.common" [];
"torch._inductor.codegen.cpp_wrapper_gpu" -> "torch._inductor.codegen.common" [];
"torch._inductor.codegen.cpu_device_op_overrides" -> "torch._inductor.codegen.common" [];
"torch._inductor.codegen.halide" -> "torch._inductor.codegen.common" [];
"torch._inductor.codegen.multi_kernel" -> "torch._inductor.codegen.common" [];
"torch._inductor.codegen.simd" -> "torch._inductor.codegen.common" [];
"torch._inductor.codegen.triton" -> "torch._inductor.codegen.common" [];
"torch._inductor.codegen.triton_combo_kernel" -> "torch._inductor.codegen.common" [];
"torch._inductor.codegen.triton_utils" -> "torch._inductor.codegen.common" [];
"torch._inductor.codegen.wrapper" -> "torch._inductor.codegen.common" [];
"torch._inductor.decomposition" -> "torch._inductor.codegen.common" [];
"torch._inductor.dependencies" -> "torch._inductor.codegen.common" [];
"torch._inductor.graph" -> "torch._inductor.codegen.common" [];
"torch._inductor.ir" -> "torch._inductor.codegen.common" [];
"torch._inductor.loop_body" -> "torch._inductor.codegen.common" [];
"torch._inductor.lowering" -> "torch._inductor.codegen.common" [];
"torch._inductor.scheduler" -> "torch._inductor.codegen.common" [];
"torch._inductor.select_algorithm" -> "torch._inductor.codegen.common" [];
"torch._inductor.utils" -> "torch._inductor.codegen.common" [];
"torch._inductor.codegen.common" -> "torch._inductor.codegen.cpp" [];
"torch._inductor.codegen.cpp_flex_attention_template" -> "torch._inductor.codegen.cpp" [];
"torch._inductor.codegen.cpp_gemm_template" -> "torch._inductor.codegen.cpp" [];
"torch._inductor.codegen.cpp_template_kernel" -> "torch._inductor.codegen.cpp" [];
"torch._inductor.codegen.halide" -> "torch._inductor.codegen.cpp" [];
"torch._inductor.codegen.wrapper" -> "torch._inductor.codegen.cpp" [];
"torch._inductor.codegen.cpp_bmm_template" -> "torch._inductor.codegen.cpp_gemm_template" [];
"torch._inductor.mkldnn_lowerings" -> "torch._inductor.codegen.cpp_gemm_template" [];
"torch._inductor.quantized_lowerings" -> "torch._inductor.codegen.cpp_gemm_template" [];
"torch._inductor.codegen.cpp_bmm_template" -> "torch._inductor.codegen.cpp_micro_gemm" [];
"torch._inductor.codegen.cpp_gemm_template" -> "torch._inductor.codegen.cpp_micro_gemm" [];
"torch._inductor.utils" -> "torch._inductor.codegen.cpp_micro_gemm" [];
"torch._inductor.codegen.cpp_flex_attention_template" -> "torch._inductor.codegen.cpp_template" [];
"torch._inductor.codegen.cpp_gemm_template" -> "torch._inductor.codegen.cpp_template" [];
"torch._inductor.codegen.cpp_bmm_template" -> "torch._inductor.codegen.cpp_template_kernel" [];
"torch._inductor.codegen.cpp_gemm_template" -> "torch._inductor.codegen.cpp_template_kernel" [];
"torch._inductor.codegen.cpp_micro_gemm" -> "torch._inductor.codegen.cpp_template_kernel" [];
"torch._inductor.codegen.cpp_template" -> "torch._inductor.codegen.cpp_template_kernel" [];
"torch._inductor.codegen.common" -> "torch._inductor.codegen.cpp_utils" [];
"torch._inductor.codegen.cpp" -> "torch._inductor.codegen.cpp_utils" [];
"torch._inductor.codegen.cpp_bmm_template" -> "torch._inductor.codegen.cpp_utils" [];
"torch._inductor.codegen.cpp_gemm_template" -> "torch._inductor.codegen.cpp_utils" [];
"torch._inductor.codegen.cpp_micro_gemm" -> "torch._inductor.codegen.cpp_utils" [];
"torch._inductor.codegen.cpp_template_kernel" -> "torch._inductor.codegen.cpp_utils" [];
"torch._inductor.codegen.cpp_wrapper_cpu" -> "torch._inductor.codegen.cpp_utils" [];
"torch._inductor.codegen.cpp_wrapper_cpu_array_ref" -> "torch._inductor.codegen.cpp_utils" [];
"torch._inductor.codegen.cpp_wrapper_gpu" -> "torch._inductor.codegen.cpp_utils" [];
"torch._inductor.codegen.halide" -> "torch._inductor.codegen.cpp_utils" [];
"torch._inductor.mkldnn_lowerings" -> "torch._inductor.codegen.cpp_utils" [];
"torch._inductor.quantized_lowerings" -> "torch._inductor.codegen.cpp_utils" [];
"torch._inductor.utils" -> "torch._inductor.codegen.cpp_utils" [];
"torch._inductor.virtualized" -> "torch._inductor.codegen.cpp_utils" [];
"torch._inductor.codegen.common" -> "torch._inductor.codegen.cpp_wrapper_cpu" [];
"torch._inductor.codegen.cpp" -> "torch._inductor.codegen.cpp_wrapper_cpu" [];
"torch._inductor.codegen.cpp_template_kernel" -> "torch._inductor.codegen.cpp_wrapper_cpu" [];
"torch._inductor.codegen.cpp_wrapper_cpu_array_ref" -> "torch._inductor.codegen.cpp_wrapper_cpu" [];
"torch._inductor.codegen.cpp_wrapper_gpu" -> "torch._inductor.codegen.cpp_wrapper_cpu" [];
"torch._inductor.codegen.common" -> "torch._inductor.codegen.cpp_wrapper_cpu_array_ref" [];
"torch._inductor.codegen.common" -> "torch._inductor.codegen.cpp_wrapper_gpu" [];
"torch._inductor.codegen.common" -> "torch._inductor.codegen.cpu_device_op_overrides" [];
"torch._inductor.codegen.cuda_combined_scheduling" -> "torch._inductor.codegen.cuda.cuda_cpp_scheduling" [];
"torch._inductor.codecache" -> "torch._inductor.codegen.cuda.cuda_env" [];
"torch._inductor.codegen.cuda.cutlass_utils" -> "torch._inductor.codegen.cuda.cuda_env" [];
"torch._inductor.codegen.cuda.cuda_template" -> "torch._inductor.codegen.cuda.cuda_kernel" [];
"torch._inductor.codegen.cuda.gemm_template" -> "torch._inductor.codegen.cuda.cuda_kernel" [];
"torch._inductor.select_algorithm" -> "torch._inductor.codegen.cuda.cuda_kernel" [];
"torch._inductor.codegen.cuda.cuda_kernel" -> "torch._inductor.codegen.cuda.cuda_template" [];
"torch._inductor.codegen.cuda.gemm_template" -> "torch._inductor.codegen.cuda.cuda_template" [];
"torch._inductor.ir" -> "torch._inductor.codegen.cuda.cuda_template" [];
"torch._inductor.codegen.cuda.gemm_template" -> "torch._inductor.codegen.cuda.cutlass_utils" [];
"torch._inductor.utils" -> "torch._inductor.codegen.cuda.cutlass_utils" [];
"torch._inductor.codegen.common" -> "torch._inductor.codegen.cuda.device_op_overrides" [];
"torch._inductor.codegen.common" -> "torch._inductor.codegen.cuda_combined_scheduling" [];
"torch._inductor.codegen.triton" -> "torch._inductor.codegen.cuda_combined_scheduling" [];
"torch._inductor.scheduler" -> "torch._inductor.codegen.cuda_combined_scheduling" [];
"torch._inductor.codegen.wrapper" -> "torch._inductor.codegen.debug_utils" [];
"torch._inductor.codegen.common" -> "torch._inductor.codegen.halide" [];
"torch._inductor.codegen.cpp_wrapper_cpu_array_ref" -> "torch._inductor.codegen.memory_planning" [];
"torch._inductor.codegen.wrapper" -> "torch._inductor.codegen.memory_planning" [];
"torch._inductor.async_compile" -> "torch._inductor.codegen.multi_kernel" [];
"torch._inductor.codegen.cpp_wrapper_gpu" -> "torch._inductor.codegen.multi_kernel" [];
"torch._inductor.codegen.debug_utils" -> "torch._inductor.codegen.multi_kernel" [];
"torch._inductor.codegen.simd" -> "torch._inductor.codegen.multi_kernel" [];
"torch._inductor.codegen.wrapper" -> "torch._inductor.codegen.multi_kernel" [];
"torch._inductor.codegen.rocm.ck_conv_template" -> "torch._inductor.codegen.rocm.ck_template" [];
"torch._inductor.codegen.rocm.ck_universal_gemm_template" -> "torch._inductor.codegen.rocm.ck_template" [];
"torch._inductor.codecache" -> "torch._inductor.codegen.rocm.compile_command" [];
"torch._inductor.codegen.rocm.ck_universal_gemm_template" -> "torch._inductor.codegen.rocm.compile_command" [];
"torch._inductor.codegen.rocm.rocm_kernel" -> "torch._inductor.codegen.rocm.rocm_benchmark_request" [];
"torch._inductor.codegen.rocm.rocm_template" -> "torch._inductor.codegen.rocm.rocm_benchmark_request" [];
"torch._inductor.codegen.cuda_combined_scheduling" -> "torch._inductor.codegen.rocm.rocm_cpp_scheduling" [];
"torch._inductor.codegen.rocm.ck_conv_template" -> "torch._inductor.codegen.rocm.rocm_kernel" [];
"torch._inductor.codegen.rocm.ck_universal_gemm_template" -> "torch._inductor.codegen.rocm.rocm_kernel" [];
"torch._inductor.codegen.rocm.rocm_template" -> "torch._inductor.codegen.rocm.rocm_kernel" [];
"torch._inductor.codegen.rocm.ck_template" -> "torch._inductor.codegen.rocm.rocm_template" [];
"torch._inductor.codegen.rocm.rocm_kernel" -> "torch._inductor.codegen.rocm.rocm_template" [];
"torch._inductor.codegen.rocm.rocm_cpp_scheduling" -> "torch._inductor.codegen.rocm.rocm_template_buffer" [];
"torch._inductor.codegen.rocm.rocm_kernel" -> "torch._inductor.codegen.rocm.rocm_template_buffer" [];
"torch._inductor.codegen.rocm.rocm_template" -> "torch._inductor.codegen.rocm.rocm_template_buffer" [];
"torch._inductor.codegen.halide" -> "torch._inductor.codegen.simd" [];
"torch._inductor.codegen.simd_kernel_features" -> "torch._inductor.codegen.simd" [];
"torch._inductor.codegen.triton" -> "torch._inductor.codegen.simd" [];
"torch._inductor.codegen.triton_combo_kernel" -> "torch._inductor.codegen.simd" [];
"torch._inductor.codegen.triton_split_scan" -> "torch._inductor.codegen.simd" [];
"torch._inductor.scheduler" -> "torch._inductor.codegen.simd" [];
"torch._inductor.select_algorithm" -> "torch._inductor.codegen.simd" [];
"torch._inductor.utils" -> "torch._inductor.codegen.simd" [];
"torch._inductor.choices" -> "torch._inductor.codegen.simd_kernel_features" [];
"torch._inductor.codegen.simd" -> "torch._inductor.codegen.simd_kernel_features" [];
"torch._inductor.codegen.triton_combo_kernel" -> "torch._inductor.codegen.simd_kernel_features" [];
"torch._inductor.select_algorithm" -> "torch._inductor.codegen.simd_kernel_features" [];
"torch._inductor.choices" -> "torch._inductor.codegen.triton" [];
"torch._inductor.codegen.common" -> "torch._inductor.codegen.triton" [];
"torch._inductor.codegen.cuda_combined_scheduling" -> "torch._inductor.codegen.triton" [];
"torch._inductor.codegen.triton_combo_kernel" -> "torch._inductor.codegen.triton" [];
"torch._inductor.codegen.triton_split_scan" -> "torch._inductor.codegen.triton" [];
"torch._inductor.codegen.wrapper" -> "torch._inductor.codegen.triton" [];
"torch._inductor.select_algorithm" -> "torch._inductor.codegen.triton" [];
"torch._inductor.codegen.simd" -> "torch._inductor.codegen.triton_combo_kernel" [];
"torch._inductor.codegen.triton" -> "torch._inductor.codegen.triton_split_scan" [];
"torch._inductor.codegen.cpp_wrapper_cpu" -> "torch._inductor.codegen.triton_utils" [];
"torch._inductor.codegen.triton" -> "torch._inductor.codegen.triton_utils" [];
"torch._inductor.codegen.triton_combo_kernel" -> "torch._inductor.codegen.triton_utils" [];
"torch._inductor.codegen.wrapper" -> "torch._inductor.codegen.triton_utils" [];
"torch._inductor.select_algorithm" -> "torch._inductor.codegen.triton_utils" [];
"torch._inductor.codecache" -> "torch._inductor.codegen.wrapper" [];
"torch._inductor.codegen.common" -> "torch._inductor.codegen.wrapper" [];
"torch._inductor.codegen.cpp_wrapper_cpu" -> "torch._inductor.codegen.wrapper" [];
"torch._inductor.codegen.cpp_wrapper_cpu_array_ref" -> "torch._inductor.codegen.wrapper" [];
"torch._inductor.codegen.cpp_wrapper_gpu" -> "torch._inductor.codegen.wrapper" [];
"torch._inductor.codegen.memory_planning" -> "torch._inductor.codegen.wrapper" [];
"torch._inductor.graph" -> "torch._inductor.codegen.wrapper" [];
"torch._inductor.scheduler" -> "torch._inductor.codegen.wrapper" [];
"torch._inductor.utils" -> "torch._inductor.codegen.wrapper" [];
"torch._inductor.codegen.common" -> "torch._inductor.codegen.xpu.device_op_overrides" [];
"torch._inductor.scheduler" -> "torch._inductor.comm_analysis" [];
"torch._inductor.lowering" -> "torch._inductor.comm_lowering" [];
"torch._inductor.scheduler" -> "torch._inductor.comms" [];
"torch" -> "torch._inductor.compile_fx" [];
"torch._inductor" -> "torch._inductor.compile_fx" [];
"torch._inductor.codecache" -> "torch._inductor.compile_fx" [];
"torch._inductor.cudagraph_trees" -> "torch._inductor.compile_fx" [];
"torch._inductor.debug" -> "torch._inductor.compile_fx" [];
"torch._inductor.graph" -> "torch._inductor.compile_fx" [];
"torch._inductor.output_code" -> "torch._inductor.compile_fx" [];
"torch._inductor.async_compile" -> "torch._inductor.compile_worker.subproc_pool" [];
"torch._inductor.compile_worker.__main__" -> "torch._inductor.compile_worker.subproc_pool" [];
"torch._inductor.compile_worker.__main__" -> "torch._inductor.compile_worker.watchdog" [];
"torch._inductor.compile_worker.subproc_pool" -> "torch._inductor.compile_worker.watchdog" [];
"torch" -> "torch._inductor.compiler_bisector" [];
"torch._inductor.codecache" -> "torch._inductor.compiler_bisector" [];
"torch._inductor.graph" -> "torch._inductor.compiler_bisector" [];
"torch" -> "torch._inductor.config" [];
"torch._inductor" -> "torch._inductor.config" [];
"torch._inductor.async_compile" -> "torch._inductor.config" [];
"torch._inductor.autotune_process" -> "torch._inductor.config" [];
"torch._inductor.choices" -> "torch._inductor.config" [];
"torch._inductor.codecache" -> "torch._inductor.config" [];
"torch._inductor.comm_lowering" -> "torch._inductor.config" [];
"torch._inductor.comms" -> "torch._inductor.config" [];
"torch._inductor.compile_fx" -> "torch._inductor.config" [];
"torch._inductor.cpp_builder" -> "torch._inductor.config" [];
"torch._inductor.cpu_vec_isa" -> "torch._inductor.config" [];
"torch._inductor.cudagraph_trees" -> "torch._inductor.config" [];
"torch._inductor.debug" -> "torch._inductor.config" [];
"torch._inductor.decomposition" -> "torch._inductor.config" [];
"torch._inductor.dtype_propagation" -> "torch._inductor.config" [];
"torch._inductor.exc" -> "torch._inductor.config" [];
"torch._inductor.freezing" -> "torch._inductor.config" [];
"torch._inductor.graph" -> "torch._inductor.config" [];
"torch._inductor.ir" -> "torch._inductor.config" [];
"torch._inductor.loop_body" -> "torch._inductor.config" [];
"torch._inductor.lowering" -> "torch._inductor.config" [];
"torch._inductor.metrics" -> "torch._inductor.config" [];
"torch._inductor.mock_cache" -> "torch._inductor.config" [];
"torch._inductor.output_code" -> "torch._inductor.config" [];
"torch._inductor.pattern_matcher" -> "torch._inductor.config" [];
"torch._inductor.quantized_lowerings" -> "torch._inductor.config" [];
"torch._inductor.remote_cache" -> "torch._inductor.config" [];
"torch._inductor.scheduler" -> "torch._inductor.config" [];
"torch._inductor.select_algorithm" -> "torch._inductor.config" [];
"torch._inductor.test_case" -> "torch._inductor.config" [];
"torch._inductor.triton_bundler" -> "torch._inductor.config" [];
"torch._inductor.utils" -> "torch._inductor.config" [];
"torch._inductor.compile_fx" -> "torch._inductor.constant_folding" [];
"torch._inductor.freezing" -> "torch._inductor.constant_folding" [];
"torch._inductor.codecache" -> "torch._inductor.cpp_builder" [];
"torch._inductor.cpu_vec_isa" -> "torch._inductor.cpp_builder" [];
"torch._inductor.codecache" -> "torch._inductor.cpu_vec_isa" [];
"torch._inductor.cpp_builder" -> "torch._inductor.cpu_vec_isa" [];
"torch" -> "torch._inductor.cudagraph_trees" [];
"torch._inductor" -> "torch._inductor.cudagraph_trees" [];
"torch._inductor.compile_fx" -> "torch._inductor.cudagraph_trees" [];
"torch._inductor.compile_fx" -> "torch._inductor.cudagraph_utils" [];
"torch._inductor.cudagraph_trees" -> "torch._inductor.cudagraph_utils" [];
"torch._inductor.output_code" -> "torch._inductor.cudagraph_utils" [];
"torch._inductor.codecache" -> "torch._inductor.custom_graph_pass" [];
"torch._inductor.config" -> "torch._inductor.custom_graph_pass" [];
"torch._inductor" -> "torch._inductor.debug" [];
"torch._inductor.compile_fx" -> "torch._inductor.debug" [];
"torch._inductor.scheduler" -> "torch._inductor.debug" [];
"torch._inductor.virtualized" -> "torch._inductor.debug" [];
"torch._inductor.compile_fx" -> "torch._inductor.decomposition" [];
"torch._inductor.lowering" -> "torch._inductor.decomposition" [];
"torch._inductor.pattern_matcher" -> "torch._inductor.decomposition" [];
"torch._inductor.comms" -> "torch._inductor.dependencies" [];
"torch._inductor.ir" -> "torch._inductor.dependencies" [];
"torch._inductor.loop_body" -> "torch._inductor.dependencies" [];
"torch._inductor.memory" -> "torch._inductor.dependencies" [];
"torch._inductor.scheduler" -> "torch._inductor.dependencies" [];
"torch._inductor.codecache" -> "torch._inductor.exc" [];
"torch._inductor.cpp_builder" -> "torch._inductor.exc" [];
"torch._inductor.graph" -> "torch._inductor.exc" [];
"torch._inductor.select_algorithm" -> "torch._inductor.exc" [];
"torch._inductor.subgraph_lowering" -> "torch._inductor.exc" [];
"torch._inductor.graph" -> "torch._inductor.extern_node_serializer" [];
"torch._inductor.compile_fx" -> "torch._inductor.freezing" [];
"torch._inductor.fx_passes.pre_grad" -> "torch._inductor.fx_passes" [];
"torch._inductor.fx_passes.post_grad" -> "torch._inductor.fx_passes.b2b_gemm" [];
"torch._inductor.fx_passes.freezing_patterns" -> "torch._inductor.fx_passes.binary_folding" [];
"torch._inductor.fx_passes.post_grad" -> "torch._inductor.fx_passes.ddp_fusion" [];
"torch._inductor.fx_passes.post_grad" -> "torch._inductor.fx_passes.decompose_mem_bound_mm" [];
"torch._inductor.fx_passes.joint_graph" -> "torch._inductor.fx_passes.dedupe_symint_uses" [];
"torch._inductor.fx_passes.pre_grad" -> "torch._inductor.fx_passes.efficient_conv_bn_eval" [];
"torch._inductor.freezing" -> "torch._inductor.fx_passes.freezing_patterns" [];
"torch._inductor.fx_passes.binary_folding" -> "torch._inductor.fx_passes.freezing_patterns" [];
"torch._inductor.fx_passes.mkldnn_fusion" -> "torch._inductor.fx_passes.freezing_patterns" [];
"torch._inductor.fx_passes.quantization" -> "torch._inductor.fx_passes.freezing_patterns" [];
"torch._inductor.fx_passes.joint_graph" -> "torch._inductor.fx_passes.fuse_attention" [];
"torch._inductor.fx_passes.post_grad" -> "torch._inductor.fx_passes.group_batch_fusion" [];
"torch._inductor.fx_passes.pre_grad" -> "torch._inductor.fx_passes.group_batch_fusion" [];
"torch._inductor.fx_passes.split_cat" -> "torch._inductor.fx_passes.group_batch_fusion" [];
"torch._inductor.compile_fx" -> "torch._inductor.fx_passes.joint_graph" [];
"torch._inductor.fx_passes.fuse_attention" -> "torch._inductor.fx_passes.joint_graph" [];
"torch._inductor.fx_passes.misc_patterns" -> "torch._inductor.fx_passes.joint_graph" [];
"torch._inductor.fx_passes.pad_mm" -> "torch._inductor.fx_passes.joint_graph" [];
"torch._inductor.pattern_matcher" -> "torch._inductor.fx_passes.joint_graph" [];
"torch._inductor.fx_passes.post_grad" -> "torch._inductor.fx_passes.micro_pipeline_tp" [];
"torch._inductor.fx_passes.joint_graph" -> "torch._inductor.fx_passes.misc_patterns" [];
"torch._inductor.fx_passes.pre_grad" -> "torch._inductor.fx_passes.misc_patterns" [];
"torch._inductor.fx_passes.freezing_patterns" -> "torch._inductor.fx_passes.mkldnn_fusion" [];
"torch._inductor.fx_passes.post_grad" -> "torch._inductor.fx_passes.mkldnn_fusion" [];
"torch._inductor.fx_passes.quantization" -> "torch._inductor.fx_passes.mkldnn_fusion" [];
"torch._inductor.fx_passes.pre_grad" -> "torch._inductor.fx_passes.numeric_utils" [];
"torch._inductor.fx_passes.joint_graph" -> "torch._inductor.fx_passes.pad_mm" [];
"torch._inductor.compile_fx" -> "torch._inductor.fx_passes.post_grad" [];
"torch._inductor.freezing" -> "torch._inductor.fx_passes.post_grad" [];
"torch._inductor.fx_passes.joint_graph" -> "torch._inductor.fx_passes.post_grad" [];
"torch._inductor.fx_passes.misc_patterns" -> "torch._inductor.fx_passes.post_grad" [];
"torch._inductor.fx_passes.mkldnn_fusion" -> "torch._inductor.fx_passes.post_grad" [];
"torch._inductor.fx_passes.quantization" -> "torch._inductor.fx_passes.post_grad" [];
"torch._inductor.pattern_matcher" -> "torch._inductor.fx_passes.post_grad" [];
"torch._inductor.compile_fx" -> "torch._inductor.fx_passes.pre_grad" [];
"torch._inductor.fx_passes.efficient_conv_bn_eval" -> "torch._inductor.fx_passes.pre_grad" [];
"torch._inductor.fx_passes.post_grad" -> "torch._inductor.fx_passes.pre_grad" [];
"torch._inductor.fx_passes.mkldnn_fusion" -> "torch._inductor.fx_passes.quantization" [];
"torch._inductor.fx_passes.pre_grad" -> "torch._inductor.fx_passes.quantization" [];
"torch._inductor.fx_passes.post_grad" -> "torch._inductor.fx_passes.reinplace" [];
"torch._inductor.fx_passes.joint_graph" -> "torch._inductor.fx_passes.replace_random" [];
"torch._inductor.fx_passes.decompose_mem_bound_mm" -> "torch._inductor.fx_passes.split_cat" [];
"torch._inductor.fx_passes.post_grad" -> "torch._inductor.fx_passes.split_cat" [];
"torch._inductor.fx_passes.pre_grad" -> "torch._inductor.fx_passes.split_cat" [];
"torch._inductor.codecache" -> "torch._inductor.graph" [];
"torch._inductor.compile_fx" -> "torch._inductor.graph" [];
"torch._inductor.ir" -> "torch._inductor.graph" [];
"torch._inductor.output_code" -> "torch._inductor.graph" [];
"torch._inductor.utils" -> "torch._inductor.graph" [];
"torch._inductor.virtualized" -> "torch._inductor.graph" [];
"torch._inductor.loop_body" -> "torch._inductor.index_propagation" [];
"torch._inductor.decomposition" -> "torch._inductor.inductor_prims" [];
"torch._inductor.lowering" -> "torch._inductor.inductor_prims" [];
"torch._inductor.autotune_process" -> "torch._inductor.ir" [];
"torch._inductor.codecache" -> "torch._inductor.ir" [];
"torch._inductor.comm_analysis" -> "torch._inductor.ir" [];
"torch._inductor.comm_lowering" -> "torch._inductor.ir" [];
"torch._inductor.comms" -> "torch._inductor.ir" [];
"torch._inductor.compile_fx" -> "torch._inductor.ir" [];
"torch._inductor.debug" -> "torch._inductor.ir" [];
"torch._inductor.dependencies" -> "torch._inductor.ir" [];
"torch._inductor.extern_node_serializer" -> "torch._inductor.ir" [];
"torch._inductor.graph" -> "torch._inductor.ir" [];
"torch._inductor.jagged_lowerings" -> "torch._inductor.ir" [];
"torch._inductor.loop_body" -> "torch._inductor.ir" [];
"torch._inductor.lowering" -> "torch._inductor.ir" [];
"torch._inductor.memory" -> "torch._inductor.ir" [];
"torch._inductor.mkldnn_ir" -> "torch._inductor.ir" [];
"torch._inductor.mkldnn_lowerings" -> "torch._inductor.ir" [];
"torch._inductor.ops_handler" -> "torch._inductor.ir" [];
"torch._inductor.scheduler" -> "torch._inductor.ir" [];
"torch._inductor.select_algorithm" -> "torch._inductor.ir" [];
"torch._inductor.subgraph_lowering" -> "torch._inductor.ir" [];
"torch._inductor.utils" -> "torch._inductor.ir" [];
"torch._inductor.lowering" -> "torch._inductor.jagged_lowerings" [];
"torch._inductor.lowering" -> "torch._inductor.kernel" [];
"torch._inductor.kernel.flex_decoding" -> "torch._inductor.kernel.flex_attention" [];
"torch._inductor.kernel.flex_attention" -> "torch._inductor.kernel.flex_decoding" [];
"torch._inductor.kernel" -> "torch._inductor.kernel.mm" [];
"torch._inductor.kernel" -> "torch._inductor.kernel.mm_common" [];
"torch._inductor.kernel.bmm" -> "torch._inductor.kernel.mm_common" [];
"torch._inductor.kernel.conv" -> "torch._inductor.kernel.mm_common" [];
"torch._inductor.kernel.mm" -> "torch._inductor.kernel.mm_common" [];
"torch._inductor.kernel.mm_plus_mm" -> "torch._inductor.kernel.mm_common" [];
"torch._inductor.kernel.mm_scaled" -> "torch._inductor.kernel.mm_common" [];
"torch._inductor.kernel.unpack_mixed_mm" -> "torch._inductor.kernel.mm_common" [];
"torch._inductor.mkldnn_lowerings" -> "torch._inductor.kernel.mm_common" [];
"torch._inductor.quantized_lowerings" -> "torch._inductor.kernel.mm_common" [];
"torch._inductor.utils" -> "torch._inductor.kernel.mm_common" [];
"torch._inductor.kernel" -> "torch._inductor.kernel.mm_plus_mm" [];
"torch._inductor.kernel" -> "torch._inductor.kernel.unpack_mixed_mm" [];
"torch._inductor.bounds" -> "torch._inductor.loop_body" [];
"torch._inductor.dependencies" -> "torch._inductor.loop_body" [];
"torch._inductor.dtype_propagation" -> "torch._inductor.loop_body" [];
"torch._inductor.ir" -> "torch._inductor.loop_body" [];
"torch._inductor.optimize_indexing" -> "torch._inductor.loop_body" [];
"torch._inductor.scheduler" -> "torch._inductor.loop_body" [];
"torch._inductor.virtualized" -> "torch._inductor.loop_body" [];
"torch._inductor.comm_lowering" -> "torch._inductor.lowering" [];
"torch._inductor.fx_utils" -> "torch._inductor.lowering" [];
"torch._inductor.graph" -> "torch._inductor.lowering" [];
"torch._inductor.jagged_lowerings" -> "torch._inductor.lowering" [];
"torch._inductor.mkldnn_lowerings" -> "torch._inductor.lowering" [];
"torch._inductor.pattern_matcher" -> "torch._inductor.lowering" [];
"torch._inductor.quantized_lowerings" -> "torch._inductor.lowering" [];
"torch._inductor.select_algorithm" -> "torch._inductor.lowering" [];
"torch._inductor.subgraph_lowering" -> "torch._inductor.lowering" [];
"torch._inductor.utils" -> "torch._inductor.lowering" [];
"torch._inductor.scheduler" -> "torch._inductor.memory" [];
"torch._inductor.choices" -> "torch._inductor.metrics" [];
"torch._inductor.codecache" -> "torch._inductor.metrics" [];
"torch._inductor.compile_fx" -> "torch._inductor.metrics" [];
"torch._inductor.graph" -> "torch._inductor.metrics" [];
"torch._inductor.ir" -> "torch._inductor.metrics" [];
"torch._inductor.output_code" -> "torch._inductor.metrics" [];
"torch._inductor.scheduler" -> "torch._inductor.metrics" [];
"torch._inductor.mkldnn_lowerings" -> "torch._inductor.mkldnn_ir" [];
"torch._inductor.lowering" -> "torch._inductor.mkldnn_lowerings" [];
"torch._inductor.dtype_propagation" -> "torch._inductor.ops_handler" [];
"torch._inductor.ir" -> "torch._inductor.ops_handler" [];
"torch._inductor.select_algorithm" -> "torch._inductor.ops_handler" [];
"torch._inductor.subgraph_lowering" -> "torch._inductor.ops_handler" [];
"torch._inductor.virtualized" -> "torch._inductor.ops_handler" [];
"torch._inductor.codecache" -> "torch._inductor.output_code" [];
"torch._inductor.compile_fx" -> "torch._inductor.output_code" [];
"torch._inductor.utils" -> "torch._inductor.output_code" [];
"torch._inductor" -> "torch._inductor.package" [];
"torch._inductor.package" -> "torch._inductor.package.package" [];
"torch._inductor.package.package" -> "torch._inductor.package.pt2_archive_constants" [];
"torch._inductor.comms" -> "torch._inductor.pattern_matcher" [];
"torch._inductor.utils" -> "torch._inductor.pattern_matcher" [];
"torch._inductor.lowering" -> "torch._inductor.quantized_lowerings" [];
"torch._inductor.codecache" -> "torch._inductor.remote_cache" [];
"torch._inductor.mock_cache" -> "torch._inductor.remote_cache" [];
"torch._inductor.codecache" -> "torch._inductor.runtime.autotune_cache" [];
"torch._inductor.graph" -> "torch._inductor.runtime.autotune_cache" [];
"torch._inductor.output_code" -> "torch._inductor.runtime.autotune_cache" [];
"torch._inductor.runtime.triton_heuristics" -> "torch._inductor.runtime.autotune_cache" [];
"torch._inductor.autotune_process" -> "torch._inductor.runtime.benchmarking" [];
"torch._inductor.ir" -> "torch._inductor.runtime.benchmarking" [];
"torch._inductor.runtime.triton_heuristics" -> "torch._inductor.runtime.benchmarking" [];
"torch._inductor.select_algorithm" -> "torch._inductor.runtime.benchmarking" [];
"torch._inductor.wrapper_benchmark" -> "torch._inductor.runtime.benchmarking" [];
"torch._inductor.compiler_bisector" -> "torch._inductor.runtime.cache_dir_utils" [];
"torch._inductor.runtime.runtime_utils" -> "torch._inductor.runtime.cache_dir_utils" [];
"torch._inductor.async_compile" -> "torch._inductor.runtime.compile_tasks" [];
"torch._inductor.codecache" -> "torch._inductor.runtime.compile_tasks" [];
"torch._inductor.runtime.triton_heuristics" -> "torch._inductor.runtime.coordinate_descent_tuner" [];
"torch._inductor.async_compile" -> "torch._inductor.runtime.hints" [];
"torch._inductor.choices" -> "torch._inductor.runtime.hints" [];
"torch._inductor.codecache" -> "torch._inductor.runtime.hints" [];
"torch._inductor.ir" -> "torch._inductor.runtime.hints" [];
"torch._inductor.runtime.coordinate_descent_tuner" -> "torch._inductor.runtime.hints" [];
"torch._inductor.runtime.triton_heuristics" -> "torch._inductor.runtime.hints" [];
"torch._inductor.select_algorithm" -> "torch._inductor.runtime.hints" [];
"torch._inductor.utils" -> "torch._inductor.runtime.hints" [];
"torch._inductor.aoti_eager" -> "torch._inductor.runtime.runtime_utils" [];
"torch._inductor.codecache" -> "torch._inductor.runtime.runtime_utils" [];
"torch._inductor.compile_fx" -> "torch._inductor.runtime.runtime_utils" [];
"torch._inductor.cpp_builder" -> "torch._inductor.runtime.runtime_utils" [];
"torch._inductor.runtime.coordinate_descent_tuner" -> "torch._inductor.runtime.runtime_utils" [];
"torch._inductor.runtime.triton_heuristics" -> "torch._inductor.runtime.runtime_utils" [];
"torch._inductor.scheduler" -> "torch._inductor.runtime.runtime_utils" [];
"torch._inductor.sizevars" -> "torch._inductor.runtime.runtime_utils" [];
"torch._inductor.triton_bundler" -> "torch._inductor.runtime.runtime_utils" [];
"torch._inductor.utils" -> "torch._inductor.runtime.runtime_utils" [];
"torch._inductor.wrapper_benchmark" -> "torch._inductor.runtime.runtime_utils" [];
"torch._inductor.runtime.triton_heuristics" -> "torch._inductor.runtime.triton_helpers" [];
"torch._inductor.utils" -> "torch._inductor.runtime.triton_helpers" [];
"torch._inductor.wrapper_benchmark" -> "torch._inductor.runtime.triton_heuristics" [];
"torch._inductor.choices" -> "torch._inductor.scheduler" [];
"torch._inductor.comms" -> "torch._inductor.scheduler" [];
"torch._inductor.debug" -> "torch._inductor.scheduler" [];
"torch._inductor.graph" -> "torch._inductor.scheduler" [];
"torch._inductor.ir" -> "torch._inductor.scheduler" [];
"torch._inductor.memory" -> "torch._inductor.scheduler" [];
"torch._inductor.metrics" -> "torch._inductor.scheduler" [];
"torch._inductor.utils" -> "torch._inductor.scheduler" [];
"torch._inductor.autotune_process" -> "torch._inductor.select_algorithm" [];
"torch._inductor.mkldnn_lowerings" -> "torch._inductor.select_algorithm" [];
"torch._inductor.quantized_lowerings" -> "torch._inductor.select_algorithm" [];
"torch._inductor.graph" -> "torch._inductor.sizevars" [];
"torch._inductor.index_propagation" -> "torch._inductor.sizevars" [];
"torch._inductor.loop_body" -> "torch._inductor.sizevars" [];
"torch._inductor.scheduler" -> "torch._inductor.sizevars" [];
"torch._inductor.lowering" -> "torch._inductor.subgraph_lowering" [];
"torch._inductor.lowering" -> "torch._inductor.test_operators" [];
"torch._inductor.codecache" -> "torch._inductor.triton_bundler" [];
"torch._inductor.compile_fx" -> "torch._inductor.triton_bundler" [];
"torch._inductor.output_code" -> "torch._inductor.triton_bundler" [];
"torch._inductor" -> "torch._inductor.utils" [];
"torch._inductor.aoti_eager" -> "torch._inductor.utils" [];
"torch._inductor.bounds" -> "torch._inductor.utils" [];
"torch._inductor.codecache" -> "torch._inductor.utils" [];
"torch._inductor.comm_analysis" -> "torch._inductor.utils" [];
"torch._inductor.comm_lowering" -> "torch._inductor.utils" [];
"torch._inductor.comms" -> "torch._inductor.utils" [];
"torch._inductor.compile_fx" -> "torch._inductor.utils" [];
"torch._inductor.cudagraph_trees" -> "torch._inductor.utils" [];
"torch._inductor.cudagraph_utils" -> "torch._inductor.utils" [];
"torch._inductor.decomposition" -> "torch._inductor.utils" [];
"torch._inductor.dependencies" -> "torch._inductor.utils" [];
"torch._inductor.dtype_propagation" -> "torch._inductor.utils" [];
"torch._inductor.graph" -> "torch._inductor.utils" [];
"torch._inductor.index_propagation" -> "torch._inductor.utils" [];
"torch._inductor.ir" -> "torch._inductor.utils" [];
"torch._inductor.loop_body" -> "torch._inductor.utils" [];
"torch._inductor.lowering" -> "torch._inductor.utils" [];
"torch._inductor.memory" -> "torch._inductor.utils" [];
"torch._inductor.metrics" -> "torch._inductor.utils" [];
"torch._inductor.mkldnn_ir" -> "torch._inductor.utils" [];
"torch._inductor.mkldnn_lowerings" -> "torch._inductor.utils" [];
"torch._inductor.ops_handler" -> "torch._inductor.utils" [];
"torch._inductor.optimize_indexing" -> "torch._inductor.utils" [];
"torch._inductor.output_code" -> "torch._inductor.utils" [];
"torch._inductor.quantized_lowerings" -> "torch._inductor.utils" [];
"torch._inductor.scheduler" -> "torch._inductor.utils" [];
"torch._inductor.select_algorithm" -> "torch._inductor.utils" [];
"torch._inductor.sizevars" -> "torch._inductor.utils" [];
"torch._inductor.test_case" -> "torch._inductor.utils" [];
"torch._inductor.triton_bundler" -> "torch._inductor.utils" [];
"torch._inductor.autotune_process" -> "torch._inductor.virtualized" [];
"torch._inductor.bounds" -> "torch._inductor.virtualized" [];
"torch._inductor.choices" -> "torch._inductor.virtualized" [];
"torch._inductor.comm_analysis" -> "torch._inductor.virtualized" [];
"torch._inductor.comm_lowering" -> "torch._inductor.virtualized" [];
"torch._inductor.compile_fx" -> "torch._inductor.virtualized" [];
"torch._inductor.debug" -> "torch._inductor.virtualized" [];
"torch._inductor.dependencies" -> "torch._inductor.virtualized" [];
"torch._inductor.dtype_propagation" -> "torch._inductor.virtualized" [];
"torch._inductor.fx_utils" -> "torch._inductor.virtualized" [];
"torch._inductor.graph" -> "torch._inductor.virtualized" [];
"torch._inductor.index_propagation" -> "torch._inductor.virtualized" [];
"torch._inductor.ir" -> "torch._inductor.virtualized" [];
"torch._inductor.jagged_lowerings" -> "torch._inductor.virtualized" [];
"torch._inductor.loop_body" -> "torch._inductor.virtualized" [];
"torch._inductor.lowering" -> "torch._inductor.virtualized" [];
"torch._inductor.memory" -> "torch._inductor.virtualized" [];
"torch._inductor.mkldnn_ir" -> "torch._inductor.virtualized" [];
"torch._inductor.mkldnn_lowerings" -> "torch._inductor.virtualized" [];
"torch._inductor.ops_handler" -> "torch._inductor.virtualized" [];
"torch._inductor.pattern_matcher" -> "torch._inductor.virtualized" [];
"torch._inductor.scheduler" -> "torch._inductor.virtualized" [];
"torch._inductor.select_algorithm" -> "torch._inductor.virtualized" [];
"torch._inductor.sizevars" -> "torch._inductor.virtualized" [];
"torch._inductor.subgraph_lowering" -> "torch._inductor.virtualized" [];
"torch._inductor.utils" -> "torch._inductor.virtualized" [];
"torch._inductor.metrics" -> "torch._inductor.wrapper_benchmark" [];
"torch.functional" -> "torch._jit_internal" [];
"torch._lazy.extract_compiled_graph" -> "torch._lazy" [];
"torch._lazy" -> "torch._lazy.closure" [];
"torch._lazy.extract_compiled_graph" -> "torch._lazy.computation" [];
"torch._lazy.extract_compiled_graph" -> "torch._lazy.debug" [];
"torch._lazy.closure" -> "torch._lazy.device_context" [];
"torch._lazy.extract_compiled_graph" -> "torch._lazy.metrics" [];
"torch._lazy.extract_compiled_graph" -> "torch._lazy.tensor_factory_functions" [];
"torch" -> "torch._library" [];
"torch.library" -> "torch._library" [];
"torch._library" -> "torch._library.autograd" [];
"torch._library.custom_ops" -> "torch._library.autograd" [];
"torch._library.triton" -> "torch._library.custom_ops" [];
"torch.library" -> "torch._library.custom_ops" [];
"torch._library" -> "torch._library.fake_class_registry" [];
"torch._library" -> "torch._library.fake_impl" [];
"torch._library.simple_registry" -> "torch._library.fake_impl" [];
"torch._library.triton" -> "torch._library.infer_schema" [];
"torch.library" -> "torch._library.infer_schema" [];
"torch._library" -> "torch._library.simple_registry" [];
"torch._library" -> "torch._library.triton" [];
"torch.library" -> "torch._library.triton" [];
"torch._library" -> "torch._library.utils" [];
"torch._library.autograd" -> "torch._library.utils" [];
"torch._library.custom_ops" -> "torch._library.utils" [];
"torch._library.fake_class_registry" -> "torch._library.utils" [];
"torch._library.fake_impl" -> "torch._library.utils" [];
"torch._library.simple_registry" -> "torch._library.utils" [];
"torch" -> "torch._linalg_utils" [];
"torch._lobpcg" -> "torch._linalg_utils" [];
"torch._lowrank" -> "torch._linalg_utils" [];
"torch._tensor" -> "torch._linalg_utils" [];
"torch" -> "torch._lobpcg" [];
"torch" -> "torch._logging" [];
"torch._logging" -> "torch._logging._internal" [];
"torch._logging._registrations" -> "torch._logging._internal" [];
"torch._logging.structured" -> "torch._logging._internal" [];
"torch._logging" -> "torch._logging._registrations" [];
"torch._logging._internal" -> "torch._logging.structured" [];
"torch.functional" -> "torch._lowrank" [];
"torch" -> "torch._meta_registrations" [];
"torch._tensor" -> "torch._namedtensor_internals" [];
"torch._numpy._ufuncs" -> "torch._numpy._binary_ufuncs_impl" [];
"torch._numpy._dtypes_impl" -> "torch._numpy._casting_dicts" [];
"torch._numpy" -> "torch._numpy._dtypes" [];
"torch._numpy._funcs_impl" -> "torch._numpy._dtypes" [];
"torch._numpy._getlimits" -> "torch._numpy._dtypes" [];
"torch._numpy._ndarray" -> "torch._numpy._dtypes" [];
"torch._numpy._normalizations" -> "torch._numpy._dtypes" [];
"torch._numpy._binary_ufuncs_impl" -> "torch._numpy._dtypes_impl" [];
"torch._numpy._dtypes" -> "torch._numpy._dtypes_impl" [];
"torch._numpy._funcs_impl" -> "torch._numpy._dtypes_impl" [];
"torch._numpy._ndarray" -> "torch._numpy._dtypes_impl" [];
"torch._numpy._normalizations" -> "torch._numpy._dtypes_impl" [];
"torch._numpy._reductions_impl" -> "torch._numpy._dtypes_impl" [];
"torch._numpy._ufuncs" -> "torch._numpy._dtypes_impl" [];
"torch._numpy._util" -> "torch._numpy._dtypes_impl" [];
"torch._numpy.fft" -> "torch._numpy._dtypes_impl" [];
"torch._numpy.linalg" -> "torch._numpy._dtypes_impl" [];
"torch._numpy.random" -> "torch._numpy._dtypes_impl" [];
"torch._numpy" -> "torch._numpy._funcs" [];
"torch._numpy._ndarray" -> "torch._numpy._funcs" [];
"torch._numpy._funcs" -> "torch._numpy._funcs_impl" [];
"torch._numpy" -> "torch._numpy._getlimits" [];
"torch._numpy" -> "torch._numpy._ndarray" [];
"torch._numpy._dtypes" -> "torch._numpy._ndarray" [];
"torch._numpy._funcs_impl" -> "torch._numpy._ndarray" [];
"torch._numpy._normalizations" -> "torch._numpy._ndarray" [];
"torch._numpy._util" -> "torch._numpy._ndarray" [];
"torch._numpy.random" -> "torch._numpy._ndarray" [];
"torch._numpy._funcs" -> "torch._numpy._normalizations" [];
"torch._numpy._funcs_impl" -> "torch._numpy._normalizations" [];
"torch._numpy._ndarray" -> "torch._numpy._normalizations" [];
"torch._numpy._reductions_impl" -> "torch._numpy._normalizations" [];
"torch._numpy._ufuncs" -> "torch._numpy._normalizations" [];
"torch._numpy.fft" -> "torch._numpy._normalizations" [];
"torch._numpy.linalg" -> "torch._numpy._normalizations" [];
"torch._numpy.random" -> "torch._numpy._normalizations" [];
"torch._numpy._funcs" -> "torch._numpy._reductions_impl" [];
"torch._numpy" -> "torch._numpy._ufuncs" [];
"torch._numpy._ndarray" -> "torch._numpy._ufuncs" [];
"torch._numpy._ufuncs" -> "torch._numpy._unary_ufuncs_impl" [];
"torch._numpy" -> "torch._numpy._util" [];
"torch._numpy._binary_ufuncs_impl" -> "torch._numpy._util" [];
"torch._numpy._funcs_impl" -> "torch._numpy._util" [];
"torch._numpy._ndarray" -> "torch._numpy._util" [];
"torch._numpy._normalizations" -> "torch._numpy._util" [];
"torch._numpy._reductions_impl" -> "torch._numpy._util" [];
"torch._numpy._ufuncs" -> "torch._numpy._util" [];
"torch._numpy.fft" -> "torch._numpy._util" [];
"torch._numpy.linalg" -> "torch._numpy._util" [];
"torch._numpy.random" -> "torch._numpy._util" [];
"torch._numpy" -> "torch._numpy.fft" [];
"torch._numpy" -> "torch._numpy.linalg" [];
"torch._numpy" -> "torch._numpy.random" [];
"torch._numpy.testing" -> "torch._numpy.testing.utils" [];
"torch" -> "torch._ops" [];
"torch._meta_registrations" -> "torch._ops" [];
"torch.library" -> "torch._ops" [];
"torch._meta_registrations" -> "torch._prims" [];
"torch._prims.context" -> "torch._prims" [];
"torch._prims.rng_prims" -> "torch._prims" [];
"torch._prims.executor" -> "torch._prims.context" [];
"torch._prims" -> "torch._prims.debug_prims" [];
"torch._prims" -> "torch._prims.rng_prims" [];
"torch._meta_registrations" -> "torch._prims_common" [];
"torch._prims" -> "torch._prims_common" [];
"torch._prims.context" -> "torch._prims_common" [];
"torch._prims.rng_prims" -> "torch._prims_common" [];
"torch._prims_common.wrappers" -> "torch._prims_common" [];
"torch._tensor" -> "torch._prims_common" [];
"torch.storage" -> "torch._prims_common" [];
"torch._meta_registrations" -> "torch._prims_common.wrappers" [];
"torch._prims" -> "torch._prims_common.wrappers" [];
"torch._meta_registrations" -> "torch._refs" [];
"torch._refs._conversions" -> "torch._refs" [];
"torch._refs" -> "torch._refs._conversions" [];
"torch._refs" -> "torch._refs.fft" [];
"torch._refs" -> "torch._refs.linalg" [];
"torch._meta_registrations" -> "torch._refs.nn.functional" [];
"torch._refs" -> "torch._refs.nn.functional" [];
"torch._meta_registrations" -> "torch._refs.special" [];
"torch._refs" -> "torch._refs.special" [];
"torch" -> "torch._size_docs" [];
"torch._jit_internal" -> "torch._sources" [];
"torch.serialization" -> "torch._sources" [];
"torch" -> "torch._storage_docs" [];
"torch._strobelight.compile_time_profiler" -> "torch._strobelight.cli_function_profiler" [];
"torch._utils_internal" -> "torch._strobelight.compile_time_profiler" [];
"torch" -> "torch._subclasses" [];
"torch._subclasses.fake_tensor" -> "torch._subclasses._fake_tensor_utils" [];
"torch._subclasses.fake_tensor" -> "torch._subclasses.fake_impls" [];
"torch._guards" -> "torch._subclasses.fake_tensor" [];
"torch._subclasses" -> "torch._subclasses.fake_tensor" [];
"torch._subclasses._fake_tensor_utils" -> "torch._subclasses.fake_tensor" [];
"torch._subclasses.fake_impls" -> "torch._subclasses.fake_tensor" [];
"torch._subclasses.fake_utils" -> "torch._subclasses.fake_tensor" [];
"torch._subclasses.meta_utils" -> "torch._subclasses.fake_tensor" [];
"torch._tensor_str" -> "torch._subclasses.fake_tensor" [];
"torch.storage" -> "torch._subclasses.fake_tensor" [];
"torch._subclasses" -> "torch._subclasses.fake_utils" [];
"torch._subclasses.fake_tensor" -> "torch._subclasses.fake_utils" [];
"torch._ops" -> "torch._subclasses.functional_tensor" [];
"torch._utils" -> "torch._subclasses.functional_tensor" [];
"torch._subclasses.fake_tensor" -> "torch._subclasses.meta_utils" [];
"torch._subclasses.functional_tensor" -> "torch._subclasses.meta_utils" [];
"torch._ops" -> "torch._subclasses.schema_check_mode" [];
"torch" -> "torch._tensor" [];
"torch" -> "torch._tensor_docs" [];
"torch" -> "torch._tensor_str" [];
"torch" -> "torch._torch_docs" [];
"torch._tensor_docs" -> "torch._torch_docs" [];
"torch" -> "torch._utils" [];
"torch._weights_only_unpickler" -> "torch._utils" [];
"torch.serialization" -> "torch._utils" [];
"torch.storage" -> "torch._utils" [];
"torch" -> "torch._utils_internal" [];
"torch._ops" -> "torch._utils_internal" [];
"torch._vendor.packaging.version" -> "torch._vendor.packaging._structures" [];
"torch.torch_version" -> "torch._vendor.packaging.version" [];
"torch.serialization" -> "torch._weights_only_unpickler" [];
"torch" -> "torch.accelerator" [];
"torch.accelerator" -> "torch.accelerator._utils" [];
"torch" -> "torch.amp" [];
"torch.amp" -> "torch.amp.autocast_mode" [];
"torch.amp" -> "torch.amp.grad_scaler" [];
"torch" -> "torch.ao" [];
"torch.ao.nn.intrinsic" -> "torch.ao.nn.intrinsic.modules" [];
"torch.ao.nn.intrinsic" -> "torch.ao.nn.intrinsic.modules.fused" [];
"torch.ao.nn.intrinsic.modules" -> "torch.ao.nn.intrinsic.modules.fused" [];
"torch.ao.nn.intrinsic.qat" -> "torch.ao.nn.intrinsic.qat.modules" [];
"torch.ao.nn.intrinsic.qat.modules" -> "torch.ao.nn.intrinsic.qat.modules.conv_fused" [];
"torch.ao.nn.intrinsic.qat.modules" -> "torch.ao.nn.intrinsic.qat.modules.linear_fused" [];
"torch.ao.nn.intrinsic.qat.modules" -> "torch.ao.nn.intrinsic.qat.modules.linear_relu" [];
"torch.ao.nn.intrinsic.quantized.dynamic" -> "torch.ao.nn.intrinsic.quantized.dynamic.modules" [];
"torch.ao.nn.intrinsic.quantized.dynamic.modules" -> "torch.ao.nn.intrinsic.quantized.dynamic.modules.linear_relu" [];
"torch.ao.nn.intrinsic.quantized" -> "torch.ao.nn.intrinsic.quantized.modules" [];
"torch.ao.nn.intrinsic.quantized.modules" -> "torch.ao.nn.intrinsic.quantized.modules.bn_relu" [];
"torch.ao.nn.intrinsic.quantized.modules" -> "torch.ao.nn.intrinsic.quantized.modules.conv_add" [];
"torch.ao.nn.intrinsic.quantized.modules" -> "torch.ao.nn.intrinsic.quantized.modules.conv_relu" [];
"torch.ao.nn.intrinsic.quantized.modules" -> "torch.ao.nn.intrinsic.quantized.modules.linear_relu" [];
"torch.ao.nn.qat.dynamic" -> "torch.ao.nn.qat.dynamic.modules" [];
"torch.ao.nn.qat.dynamic.modules" -> "torch.ao.nn.qat.dynamic.modules.linear" [];
"torch.ao.nn.qat" -> "torch.ao.nn.qat.modules" [];
"torch.ao.nn.qat.modules" -> "torch.ao.nn.qat.modules.conv" [];
"torch.ao.nn.qat.modules" -> "torch.ao.nn.qat.modules.embedding_ops" [];
"torch.ao.nn.qat.modules" -> "torch.ao.nn.qat.modules.linear" [];
"torch.ao.nn.quantizable" -> "torch.ao.nn.quantizable.modules" [];
"torch.ao.nn.quantizable.modules" -> "torch.ao.nn.quantizable.modules.activation" [];
"torch.ao.nn.quantizable.modules" -> "torch.ao.nn.quantizable.modules.rnn" [];
"torch.ao.nn.quantized.dynamic" -> "torch.ao.nn.quantized.dynamic.modules" [];
"torch.ao.nn.quantized.dynamic.modules" -> "torch.ao.nn.quantized.dynamic.modules.conv" [];
"torch.ao.nn.quantized.dynamic.modules" -> "torch.ao.nn.quantized.dynamic.modules.linear" [];
"torch.ao.nn.quantized.dynamic.modules" -> "torch.ao.nn.quantized.dynamic.modules.rnn" [];
"torch.ao.nn.quantized" -> "torch.ao.nn.quantized.functional" [];
"torch.ao.nn.quantized" -> "torch.ao.nn.quantized.modules" [];
"torch.ao.nn.quantized.modules" -> "torch.ao.nn.quantized.modules.activation" [];
"torch.ao.nn.quantized.modules" -> "torch.ao.nn.quantized.modules.batchnorm" [];
"torch.ao.nn.quantized.modules" -> "torch.ao.nn.quantized.modules.conv" [];
"torch.ao.nn.quantized.modules" -> "torch.ao.nn.quantized.modules.dropout" [];
"torch.ao.nn.quantized.modules" -> "torch.ao.nn.quantized.modules.embedding_ops" [];
"torch.ao.nn.quantized.modules" -> "torch.ao.nn.quantized.modules.functional_modules" [];
"torch.ao.nn.quantized.modules" -> "torch.ao.nn.quantized.modules.linear" [];
"torch.ao.nn.quantized.modules" -> "torch.ao.nn.quantized.modules.normalization" [];
"torch.ao.nn.quantized.modules" -> "torch.ao.nn.quantized.modules.rnn" [];
"torch.ao.nn.quantized.functional" -> "torch.ao.nn.quantized.modules.utils" [];
"torch.ao.nn.quantized.modules.conv" -> "torch.ao.nn.quantized.modules.utils" [];
"torch.ao.nn.quantized.modules.embedding_ops" -> "torch.ao.nn.quantized.modules.utils" [];
"torch.ao.nn.quantized.modules.linear" -> "torch.ao.nn.quantized.modules.utils" [];
"torch.ao.nn.quantized.reference" -> "torch.ao.nn.quantized.reference.modules" [];
"torch.ao.nn.quantized.reference.modules" -> "torch.ao.nn.quantized.reference.modules.conv" [];
"torch.ao.nn.quantized.reference.modules" -> "torch.ao.nn.quantized.reference.modules.linear" [];
"torch.ao.nn.quantized.reference.modules" -> "torch.ao.nn.quantized.reference.modules.rnn" [];
"torch.ao.nn.quantized.reference.modules" -> "torch.ao.nn.quantized.reference.modules.sparse" [];
"torch.ao.nn.quantized.reference.modules.conv" -> "torch.ao.nn.quantized.reference.modules.utils" [];
"torch.ao.nn.quantized.reference.modules.linear" -> "torch.ao.nn.quantized.reference.modules.utils" [];
"torch.ao.nn.quantized.reference.modules.rnn" -> "torch.ao.nn.quantized.reference.modules.utils" [];
"torch.ao.nn.quantized.reference.modules.sparse" -> "torch.ao.nn.quantized.reference.modules.utils" [];
"torch.ao.nn.sparse" -> "torch.ao.nn.sparse.quantized" [];
"torch.ao.nn.sparse.quantized" -> "torch.ao.nn.sparse.quantized.dynamic" [];
"torch.ao.nn.sparse.quantized.dynamic" -> "torch.ao.nn.sparse.quantized.dynamic.linear" [];
"torch.ao.nn.sparse.quantized" -> "torch.ao.nn.sparse.quantized.linear" [];
"torch.ao.ns._numeric_suite_fx" -> "torch.ao.ns.fx.graph_matcher" [];
"torch.ao.ns._numeric_suite_fx" -> "torch.ao.ns.fx.graph_passes" [];
"torch.ao.ns.fx.n_shadows_utils" -> "torch.ao.ns.fx.graph_passes" [];
"torch.ao.ns._numeric_suite_fx" -> "torch.ao.ns.fx.mappings" [];
"torch.ao.ns.fx.graph_matcher" -> "torch.ao.ns.fx.mappings" [];
"torch.ao.ns.fx.graph_passes" -> "torch.ao.ns.fx.mappings" [];
"torch.ao.ns._numeric_suite_fx" -> "torch.ao.ns.fx.n_shadows_utils" [];
"torch.ao.ns._numeric_suite_fx" -> "torch.ao.ns.fx.ns_types" [];
"torch.ao.ns.fx.graph_matcher" -> "torch.ao.ns.fx.ns_types" [];
"torch.ao.ns.fx.graph_passes" -> "torch.ao.ns.fx.ns_types" [];
"torch.ao.ns.fx.mappings" -> "torch.ao.ns.fx.ns_types" [];
"torch.ao.ns.fx.n_shadows_utils" -> "torch.ao.ns.fx.ns_types" [];
"torch.ao.ns.fx.pattern_utils" -> "torch.ao.ns.fx.ns_types" [];
"torch.ao.ns.fx.utils" -> "torch.ao.ns.fx.ns_types" [];
"torch.ao.ns.fx.weight_utils" -> "torch.ao.ns.fx.ns_types" [];
"torch.ao.ns.fx.graph_matcher" -> "torch.ao.ns.fx.pattern_utils" [];
"torch.ao.ns._numeric_suite_fx" -> "torch.ao.ns.fx.qconfig_multi_mapping" [];
"torch.ao.ns._numeric_suite_fx" -> "torch.ao.ns.fx.utils" [];
"torch.ao.ns.fx.graph_passes" -> "torch.ao.ns.fx.utils" [];
"torch.ao.ns.fx.n_shadows_utils" -> "torch.ao.ns.fx.utils" [];
"torch.ao.ns.fx.weight_utils" -> "torch.ao.ns.fx.utils" [];
"torch.ao.ns._numeric_suite_fx" -> "torch.ao.ns.fx.weight_utils" [];
"torch.ao.pruning._experimental.data_scheduler" -> "torch.ao.pruning._experimental.data_scheduler.base_data_scheduler" [];
"torch.ao.pruning._experimental.data_sparsifier" -> "torch.ao.pruning._experimental.data_sparsifier.base_data_sparsifier" [];
"torch.ao.pruning._experimental.data_sparsifier.data_norm_sparsifier" -> "torch.ao.pruning._experimental.data_sparsifier.base_data_sparsifier" [];
"torch.ao.pruning._experimental.data_sparsifier" -> "torch.ao.pruning._experimental.data_sparsifier.data_norm_sparsifier" [];
"torch.ao.pruning._experimental.data_sparsifier.lightning.callbacks.data_sparsity" -> "torch.ao.pruning._experimental.data_sparsifier.lightning.callbacks._data_sparstity_utils" [];
"torch.ao.pruning._experimental.pruner" -> "torch.ao.pruning._experimental.pruner.FPGM_pruner" [];
"torch.ao.pruning._experimental.pruner" -> "torch.ao.pruning._experimental.pruner.base_structured_sparsifier" [];
"torch.ao.pruning._experimental.pruner.FPGM_pruner" -> "torch.ao.pruning._experimental.pruner.base_structured_sparsifier" [];
"torch.ao.pruning._experimental.pruner.lstm_saliency_pruner" -> "torch.ao.pruning._experimental.pruner.base_structured_sparsifier" [];
"torch.ao.pruning._experimental.pruner.saliency_pruner" -> "torch.ao.pruning._experimental.pruner.base_structured_sparsifier" [];
"torch.ao.pruning._experimental.pruner" -> "torch.ao.pruning._experimental.pruner.lstm_saliency_pruner" [];
"torch.ao.pruning._experimental.pruner.base_structured_sparsifier" -> "torch.ao.pruning._experimental.pruner.match_utils" [];
"torch.ao.pruning._experimental.pruner" -> "torch.ao.pruning._experimental.pruner.parametrization" [];
"torch.ao.pruning._experimental.pruner.base_structured_sparsifier" -> "torch.ao.pruning._experimental.pruner.parametrization" [];
"torch.ao.pruning._experimental.pruner.prune_functions" -> "torch.ao.pruning._experimental.pruner.parametrization" [];
"torch.ao.pruning._experimental.pruner.base_structured_sparsifier" -> "torch.ao.pruning._experimental.pruner.prune_functions" [];
"torch.ao.pruning._experimental.pruner" -> "torch.ao.pruning._experimental.pruner.saliency_pruner" [];
"torch.ao.pruning" -> "torch.ao.pruning._mappings" [];
"torch.ao.pruning" -> "torch.ao.pruning.scheduler.base_scheduler" [];
"torch.ao.pruning.scheduler.cubic_scheduler" -> "torch.ao.pruning.scheduler.base_scheduler" [];
"torch.ao.pruning.scheduler.lambda_scheduler" -> "torch.ao.pruning.scheduler.base_scheduler" [];
"torch.ao.pruning" -> "torch.ao.pruning.scheduler.cubic_scheduler" [];
"torch.ao.pruning" -> "torch.ao.pruning.scheduler.lambda_scheduler" [];
"torch.ao.pruning" -> "torch.ao.pruning.sparsifier.base_sparsifier" [];
"torch.ao.pruning.sparsifier.nearly_diagonal_sparsifier" -> "torch.ao.pruning.sparsifier.base_sparsifier" [];
"torch.ao.pruning.sparsifier.weight_norm_sparsifier" -> "torch.ao.pruning.sparsifier.base_sparsifier" [];
"torch.ao.pruning" -> "torch.ao.pruning.sparsifier.nearly_diagonal_sparsifier" [];
"torch.ao.pruning" -> "torch.ao.pruning.sparsifier.utils" [];
"torch.ao.pruning.sparsifier.base_sparsifier" -> "torch.ao.pruning.sparsifier.utils" [];
"torch.ao.pruning" -> "torch.ao.pruning.sparsifier.weight_norm_sparsifier" [];
"torch.ao.quantization._correct_bias" -> "torch.ao.quantization" [];
"torch.ao.quantization.backend_config._qnnpack_pt2e" -> "torch.ao.quantization.backend_config" [];
"torch.ao.quantization.quantize_fx" -> "torch.ao.quantization.backend_config" [];
"torch.ao.quantization.backend_config.executorch" -> "torch.ao.quantization.backend_config._common_operator_config_utils" [];
"torch.ao.quantization.backend_config.fbgemm" -> "torch.ao.quantization.backend_config._common_operator_config_utils" [];
"torch.ao.quantization.backend_config.native" -> "torch.ao.quantization.backend_config._common_operator_config_utils" [];
"torch.ao.quantization.backend_config.onednn" -> "torch.ao.quantization.backend_config._common_operator_config_utils" [];
"torch.ao.quantization.backend_config.qnnpack" -> "torch.ao.quantization.backend_config._common_operator_config_utils" [];
"torch.ao.quantization.backend_config.tensorrt" -> "torch.ao.quantization.backend_config._common_operator_config_utils" [];
"torch.ao.quantization.backend_config.x86" -> "torch.ao.quantization.backend_config._common_operator_config_utils" [];
"torch.ao.quantization.backend_config" -> "torch.ao.quantization.backend_config.backend_config" [];
"torch.ao.quantization.backend_config._common_operator_config_utils" -> "torch.ao.quantization.backend_config.backend_config" [];
"torch.ao.quantization.backend_config.executorch" -> "torch.ao.quantization.backend_config.backend_config" [];
"torch.ao.quantization.backend_config.fbgemm" -> "torch.ao.quantization.backend_config.backend_config" [];
"torch.ao.quantization.backend_config.native" -> "torch.ao.quantization.backend_config.backend_config" [];
"torch.ao.quantization.backend_config.onednn" -> "torch.ao.quantization.backend_config.backend_config" [];
"torch.ao.quantization.backend_config.qnnpack" -> "torch.ao.quantization.backend_config.backend_config" [];
"torch.ao.quantization.backend_config.tensorrt" -> "torch.ao.quantization.backend_config.backend_config" [];
"torch.ao.quantization.backend_config.utils" -> "torch.ao.quantization.backend_config.backend_config" [];
"torch.ao.quantization.backend_config.x86" -> "torch.ao.quantization.backend_config.backend_config" [];
"torch.ao.quantization.backend_config" -> "torch.ao.quantization.backend_config.executorch" [];
"torch.ao.quantization.backend_config" -> "torch.ao.quantization.backend_config.fbgemm" [];
"torch.ao.quantization.backend_config" -> "torch.ao.quantization.backend_config.native" [];
"torch.ao.quantization.backend_config" -> "torch.ao.quantization.backend_config.onednn" [];
"torch.ao.quantization.backend_config" -> "torch.ao.quantization.backend_config.qnnpack" [];
"torch.ao.quantization.backend_config.executorch" -> "torch.ao.quantization.backend_config.qnnpack" [];
"torch.ao.quantization.backend_config" -> "torch.ao.quantization.backend_config.tensorrt" [];
"torch.ao.quantization" -> "torch.ao.quantization.fake_quantize" [];
"torch.ao.quantization.qconfig" -> "torch.ao.quantization.fake_quantize" [];
"torch.ao.quantization.qconfig_mapping" -> "torch.ao.quantization.fake_quantize" [];
"torch.ao.quantization.quantization_mappings" -> "torch.ao.quantization.fake_quantize" [];
"torch.ao.quantization" -> "torch.ao.quantization.fuse_modules" [];
"torch.ao.quantization" -> "torch.ao.quantization.fuser_method_mappings" [];
"torch.ao.quantization.fuse_modules" -> "torch.ao.quantization.fuser_method_mappings" [];
"torch.ao.quantization.fx.convert" -> "torch.ao.quantization.fx._decomposed" [];
"torch.ao.quantization.fx.utils" -> "torch.ao.quantization.fx._decomposed" [];
"torch.ao.quantization.fx.convert" -> "torch.ao.quantization.fx._equalize" [];
"torch.ao.quantization.fx.prepare" -> "torch.ao.quantization.fx._equalize" [];
"torch.ao.quantization.fx.lower_to_fbgemm" -> "torch.ao.quantization.fx._lower_to_native_backend" [];
"torch.ao.quantization.fx.lower_to_qnnpack" -> "torch.ao.quantization.fx._lower_to_native_backend" [];
"torch.ao.quantization.fx._model_report.model_report" -> "torch.ao.quantization.fx._model_report.detector" [];
"torch.ao.quantization.fx._model_report.detector" -> "torch.ao.quantization.fx._model_report.model_report_observer" [];
"torch.ao.quantization.fx._model_report.model_report" -> "torch.ao.quantization.fx._model_report.model_report_visualizer" [];
"torch.ao.quantization.fx" -> "torch.ao.quantization.fx.convert" [];
"torch.ao.quantization.quantize_fx" -> "torch.ao.quantization.fx.convert" [];
"torch.ao.quantization.fx.convert" -> "torch.ao.quantization.fx.custom_config" [];
"torch.ao.quantization.fx.fuse" -> "torch.ao.quantization.fx.custom_config" [];
"torch.ao.quantization.fx.fuse_handler" -> "torch.ao.quantization.fx.custom_config" [];
"torch.ao.quantization.fx.prepare" -> "torch.ao.quantization.fx.custom_config" [];
"torch.ao.quantization.fx.utils" -> "torch.ao.quantization.fx.custom_config" [];
"torch.ao.quantization.quantize_fx" -> "torch.ao.quantization.fx.custom_config" [];
"torch.ao.quantization.fx" -> "torch.ao.quantization.fx.fuse" [];
"torch.ao.quantization.quantize_fx" -> "torch.ao.quantization.fx.fuse" [];
"torch.ao.quantization.fx.fuse" -> "torch.ao.quantization.fx.fuse_handler" [];
"torch.ao.quantization.fx._equalize" -> "torch.ao.quantization.fx.graph_module" [];
"torch.ao.quantization.fx.convert" -> "torch.ao.quantization.fx.graph_module" [];
"torch.ao.quantization.fx.match_utils" -> "torch.ao.quantization.fx.graph_module" [];
"torch.ao.quantization.quantize_fx" -> "torch.ao.quantization.fx.graph_module" [];
"torch.ao.quantization.fx.convert" -> "torch.ao.quantization.fx.lower_to_fbgemm" [];
"torch.ao.quantization.fx.fuse" -> "torch.ao.quantization.fx.match_utils" [];
"torch.ao.quantization.fx.fuse_handler" -> "torch.ao.quantization.fx.match_utils" [];
"torch.ao.quantization.fx.prepare" -> "torch.ao.quantization.fx.match_utils" [];
"torch.ao.quantization.fx.fuse" -> "torch.ao.quantization.fx.pattern_utils" [];
"torch.ao.quantization.fx.prepare" -> "torch.ao.quantization.fx.pattern_utils" [];
"torch.ao.quantization.fx" -> "torch.ao.quantization.fx.prepare" [];
"torch.ao.quantization.quantize_fx" -> "torch.ao.quantization.fx.prepare" [];
"torch.ao.quantization.fx.convert" -> "torch.ao.quantization.fx.qconfig_mapping_utils" [];
"torch.ao.quantization.fx.prepare" -> "torch.ao.quantization.fx.qconfig_mapping_utils" [];
"torch.ao.quantization.fx.match_utils" -> "torch.ao.quantization.fx.quantize_handler" [];
"torch.ao.quantization.fx.prepare" -> "torch.ao.quantization.fx.quantize_handler" [];
"torch.ao.quantization.quantize_fx" -> "torch.ao.quantization.fx.tracer" [];
"torch.ao.quantization.fx._equalize" -> "torch.ao.quantization.fx.utils" [];
"torch.ao.quantization.fx._lower_to_native_backend" -> "torch.ao.quantization.fx.utils" [];
"torch.ao.quantization.fx.convert" -> "torch.ao.quantization.fx.utils" [];
"torch.ao.quantization.fx.prepare" -> "torch.ao.quantization.fx.utils" [];
"torch.ao.quantization.fx.quantize_handler" -> "torch.ao.quantization.fx.utils" [];
"torch.ao.quantization.quantize_fx" -> "torch.ao.quantization.fx.utils" [];
"torch.ao.quantization" -> "torch.ao.quantization.observer" [];
"torch.ao.quantization.fake_quantize" -> "torch.ao.quantization.observer" [];
"torch.ao.quantization.qconfig" -> "torch.ao.quantization.observer" [];
"torch.ao.quantization.qconfig_mapping" -> "torch.ao.quantization.observer" [];
"torch.ao.quantization.quantize" -> "torch.ao.quantization.observer" [];
"torch.ao.quantization.utils" -> "torch.ao.quantization.observer" [];
"torch.ao.quantization" -> "torch.ao.quantization.pt2e._numeric_debugger" [];
"torch.ao.quantization.quantize_pt2e" -> "torch.ao.quantization.pt2e.duplicate_dq_pass" [];
"torch.ao.quantization" -> "torch.ao.quantization.pt2e.export_utils" [];
"torch.ao.quantization.pt2e.qat_utils" -> "torch.ao.quantization.pt2e.export_utils" [];
"torch.ao.quantization.pt2e._numeric_debugger" -> "torch.ao.quantization.pt2e.graph_utils" [];
"torch.ao.quantization.quantize_pt2e" -> "torch.ao.quantization.pt2e.port_metadata_pass" [];
"torch.ao.quantization.quantize_pt2e" -> "torch.ao.quantization.pt2e.prepare" [];
"torch.ao.quantization.quantize_pt2e" -> "torch.ao.quantization.pt2e.qat_utils" [];
"torch.ao.quantization.quantize_pt2e" -> "torch.ao.quantization.pt2e.representation" [];
"torch.ao.quantization.pt2e.representation" -> "torch.ao.quantization.pt2e.representation.rewrite" [];
"torch.ao.quantization.pt2e.duplicate_dq_pass" -> "torch.ao.quantization.pt2e.utils" [];
"torch.ao.quantization.pt2e.export_utils" -> "torch.ao.quantization.pt2e.utils" [];
"torch.ao.quantization.pt2e.port_metadata_pass" -> "torch.ao.quantization.pt2e.utils" [];
"torch.ao.quantization.pt2e.qat_utils" -> "torch.ao.quantization.pt2e.utils" [];
"torch.ao.quantization.quantize_pt2e" -> "torch.ao.quantization.pt2e.utils" [];
"torch.ao.quantization" -> "torch.ao.quantization.qconfig" [];
"torch.ao.quantization.qconfig_mapping" -> "torch.ao.quantization.qconfig" [];
"torch.ao.quantization.quantize" -> "torch.ao.quantization.qconfig" [];
"torch.ao.quantization.quantize_jit" -> "torch.ao.quantization.qconfig" [];
"torch.ao.quantization" -> "torch.ao.quantization.qconfig_mapping" [];
"torch.ao.quantization.quantize_fx" -> "torch.ao.quantization.qconfig_mapping" [];
"torch.ao.quantization" -> "torch.ao.quantization.quant_type" [];
"torch.ao.quantization.quantize_jit" -> "torch.ao.quantization.quant_type" [];
"torch.ao.quantization.utils" -> "torch.ao.quantization.quant_type" [];
"torch.ao.quantization" -> "torch.ao.quantization.quantization_mappings" [];
"torch.ao.quantization.quantize" -> "torch.ao.quantization.quantization_mappings" [];
"torch.ao.quantization" -> "torch.ao.quantization.quantize" [];
"torch.ao.quantization.quantize_pt2e" -> "torch.ao.quantization.quantize_fx" [];
"torch.ao.quantization" -> "torch.ao.quantization.quantize_jit" [];
"torch.ao.quantization.quantize_pt2e" -> "torch.ao.quantization.quantizer" [];
"torch.ao.quantization.quantizer.xnnpack_quantizer" -> "torch.ao.quantization.quantizer" [];
"torch.ao.quantization.quantizer.xnnpack_quantizer_utils" -> "torch.ao.quantization.quantizer" [];
"torch.ao.quantization.quantizer" -> "torch.ao.quantization.quantizer.quantizer" [];
"torch.ao.quantization.quantizer.composable_quantizer" -> "torch.ao.quantization.quantizer.quantizer" [];
"torch.ao.quantization.quantizer.embedding_quantizer" -> "torch.ao.quantization.quantizer.quantizer" [];
"torch.ao.quantization.quantizer.utils" -> "torch.ao.quantization.quantizer.quantizer" [];
"torch.ao.quantization.quantizer.x86_inductor_quantizer" -> "torch.ao.quantization.quantizer.quantizer" [];
"torch.ao.quantization.quantizer.xpu_inductor_quantizer" -> "torch.ao.quantization.quantizer.quantizer" [];
"torch.ao.quantization.quantizer.x86_inductor_quantizer" -> "torch.ao.quantization.quantizer.utils" [];
"torch.ao.quantization.quantizer.xnnpack_quantizer" -> "torch.ao.quantization.quantizer.utils" [];
"torch.ao.quantization.quantizer.xnnpack_quantizer_utils" -> "torch.ao.quantization.quantizer.utils" [];
"torch.ao.quantization.quantizer.xpu_inductor_quantizer" -> "torch.ao.quantization.quantizer.x86_inductor_quantizer" [];
"torch.ao.quantization.quantizer.embedding_quantizer" -> "torch.ao.quantization.quantizer.xnnpack_quantizer_utils" [];
"torch.ao.quantization.quantizer.x86_inductor_quantizer" -> "torch.ao.quantization.quantizer.xnnpack_quantizer_utils" [];
"torch.ao.quantization.quantizer.xnnpack_quantizer" -> "torch.ao.quantization.quantizer.xnnpack_quantizer_utils" [];
"torch.ao.quantization.quantizer.xpu_inductor_quantizer" -> "torch.ao.quantization.quantizer.xnnpack_quantizer_utils" [];
"torch.ao.quantization" -> "torch.ao.quantization.stubs" [];
"torch.ao.quantization.quantization_mappings" -> "torch.ao.quantization.stubs" [];
"torch.ao.quantization.quantize" -> "torch.ao.quantization.stubs" [];
"torch.ao.quantization" -> "torch.ao.quantization.utils" [];
"torch.ao.quantization.fuser_method_mappings" -> "torch.ao.quantization.utils" [];
"torch.ao.quantization.observer" -> "torch.ao.quantization.utils" [];
"torch.ao.quantization.quantization_mappings" -> "torch.ao.quantization.utils" [];
"torch.ao.quantization.quantize" -> "torch.ao.quantization.utils" [];
"torch" -> "torch.autograd" [];
"torch.autograd.profiler" -> "torch.autograd" [];
"torch.autograd.profiler_legacy" -> "torch.autograd" [];
"torch.autograd.profiler_util" -> "torch.autograd" [];
"torch._tensor" -> "torch.autograd._functions" [];
"torch.autograd._functions" -> "torch.autograd._functions.tensor" [];
"torch.autograd" -> "torch.autograd.anomaly_mode" [];
"torch.autograd" -> "torch.autograd.forward_ad" [];
"torch.autograd.functional" -> "torch.autograd.forward_ad" [];
"torch.autograd" -> "torch.autograd.function" [];
"torch.autograd" -> "torch.autograd.functional" [];
"torch.autograd" -> "torch.autograd.grad_mode" [];
"torch.autograd.forward_ad" -> "torch.autograd.grad_mode" [];
"torch.autograd" -> "torch.autograd.gradcheck" [];
"torch.autograd" -> "torch.autograd.graph" [];
"torch.types" -> "torch.autograd.graph" [];
"torch.autograd" -> "torch.autograd.profiler" [];
"torch.autograd.profiler" -> "torch.autograd.profiler_util" [];
"torch.autograd.profiler_legacy" -> "torch.autograd.profiler_util" [];
"torch.autograd" -> "torch.autograd.variable" [];
"torch.autograd.graph" -> "torch.autograd.variable" [];
"torch" -> "torch.backends" [];
"torch.backends._nnapi.prepare" -> "torch.backends._nnapi.serializer" [];
"torch.backends" -> "torch.backends.cpu" [];
"torch.backends" -> "torch.backends.cuda" [];
"torch.backends" -> "torch.backends.cudnn" [];
"torch.backends" -> "torch.backends.cusparselt" [];
"torch.backends" -> "torch.backends.mha" [];
"torch.backends" -> "torch.backends.mkl" [];
"torch.backends" -> "torch.backends.mkldnn" [];
"torch.backends" -> "torch.backends.mps" [];
"torch.backends" -> "torch.backends.nnpack" [];
"torch.backends" -> "torch.backends.openmp" [];
"torch.functional" -> "torch.backends.opt_einsum" [];
"torch.backends" -> "torch.backends.quantized" [];
"torch" -> "torch.compiler" [];
"torch" -> "torch.cpu" [];
"torch.cpu" -> "torch.cpu.amp" [];
"torch.cpu.amp" -> "torch.cpu.amp.autocast_mode" [];
"torch.cpu.amp" -> "torch.cpu.amp.grad_scaler" [];
"torch" -> "torch.cuda" [];
"torch.cuda.memory" -> "torch.cuda" [];
"torch.cuda.nccl" -> "torch.cuda" [];
"torch.cuda.profiler" -> "torch.cuda" [];
"torch.cuda.random" -> "torch.cuda" [];
"torch.random" -> "torch.cuda" [];
"torch.cuda._sanitizer" -> "torch.cuda._gpu_trace" [];
"torch.cuda.memory" -> "torch.cuda._memory_viz" [];
"torch" -> "torch.cuda._sanitizer" [];
"torch.cuda" -> "torch.cuda._utils" [];
"torch.cuda" -> "torch.cuda.amp" [];
"torch.cuda.amp" -> "torch.cuda.amp.autocast_mode" [];
"torch.cuda.amp" -> "torch.cuda.amp.common" [];
"torch.cuda.amp" -> "torch.cuda.amp.grad_scaler" [];
"torch.cuda" -> "torch.cuda.gds" [];
"torch.cuda" -> "torch.cuda.graphs" [];
"torch.cuda" -> "torch.cuda.jiterator" [];
"torch.cuda" -> "torch.cuda.memory" [];
"torch.cuda" -> "torch.cuda.nvtx" [];
"torch.cuda" -> "torch.cuda.profiler" [];
"torch.cuda" -> "torch.cuda.random" [];
"torch.cuda" -> "torch.cuda.sparse" [];
"torch.cuda" -> "torch.cuda.streams" [];
"torch.cuda" -> "torch.cuda.tunable" [];
"torch" -> "torch.distributed" [];
"torch.distributed._functional_collectives" -> "torch.distributed" [];
"torch.distributed._state_dict_utils" -> "torch.distributed" [];
"torch.distributed.c10d_logger" -> "torch.distributed" [];
"torch.distributed.collective_utils" -> "torch.distributed" [];
"torch.distributed.device_mesh" -> "torch.distributed" [];
"torch.distributed.rendezvous" -> "torch.distributed" [];
"torch.distributed.utils" -> "torch.distributed" [];
"torch.distributed._composable" -> "torch.distributed._composable.checkpoint_activation" [];
"torch.distributed._composable" -> "torch.distributed._composable.contract" [];
"torch.distributed._composable.checkpoint_activation" -> "torch.distributed._composable.contract" [];
"torch.distributed._composable.replicate" -> "torch.distributed._composable.contract" [];
"torch.distributed._composable.fsdp" -> "torch.distributed._composable.fsdp.fully_shard" [];
"torch.distributed._composable" -> "torch.distributed._composable.replicate" [];
"torch.distributed._composable.contract" -> "torch.distributed._composable_state" [];
"torch.distributed._composable.replicate" -> "torch.distributed._composable_state" [];
"torch.distributed._state_dict_utils" -> "torch.distributed._functional_collectives" [];
"torch.distributed._functional_collectives" -> "torch.distributed._functional_collectives_impl" [];
"torch.distributed._shard" -> "torch.distributed._shard.api" [];
"torch.distributed._shard.op_registry_utils" -> "torch.distributed._shard.common_op_utils" [];
"torch.distributed._shard._utils" -> "torch.distributed._shard.metadata" [];
"torch.distributed._shard.sharded_optim" -> "torch.distributed._shard.sharded_optim.api" [];
"torch.distributed._shard.api" -> "torch.distributed._shard.sharded_tensor" [];
"torch.distributed._shard.common_op_utils" -> "torch.distributed._shard.sharded_tensor" [];
"torch.distributed._state_dict_utils" -> "torch.distributed._shard.sharded_tensor" [];
"torch.distributed._shard.sharded_tensor" -> "torch.distributed._shard.sharded_tensor._ops" [];
"torch.distributed._shard.sharded_tensor._ops.tensor_ops" -> "torch.distributed._shard.sharded_tensor._ops._common" [];
"torch.distributed._shard.sharded_tensor._ops" -> "torch.distributed._shard.sharded_tensor._ops.binary_cmp" [];
"torch.distributed._shard.sharded_tensor._ops" -> "torch.distributed._shard.sharded_tensor._ops.init" [];
"torch.distributed._shard.sharded_tensor._ops" -> "torch.distributed._shard.sharded_tensor._ops.misc_ops" [];
"torch.distributed._shard.sharded_tensor._ops" -> "torch.distributed._shard.sharded_tensor._ops.tensor_ops" [];
"torch.distributed._shard.sharded_tensor" -> "torch.distributed._shard.sharded_tensor.api" [];
"torch.distributed._shard.sharded_tensor.logger" -> "torch.distributed._shard.sharded_tensor.logging_handlers" [];
"torch.distributed._shard.sharded_tensor" -> "torch.distributed._shard.sharded_tensor.metadata" [];
"torch.distributed._shard.sharded_tensor.api" -> "torch.distributed._shard.sharded_tensor.metadata" [];
"torch.distributed._shard.sharded_tensor.utils" -> "torch.distributed._shard.sharded_tensor.metadata" [];
"torch.distributed._shard.sharded_tensor.api" -> "torch.distributed._shard.sharded_tensor.reshard" [];
"torch.distributed._shard.sharded_tensor.api" -> "torch.distributed._shard.sharded_tensor.shard" [];
"torch.distributed._shard.sharded_tensor.reshard" -> "torch.distributed._shard.sharded_tensor.shard" [];
"torch.distributed._shard.sharded_tensor.utils" -> "torch.distributed._shard.sharded_tensor.shard" [];
"torch.distributed._shard.sharded_tensor.api" -> "torch.distributed._shard.sharded_tensor.utils" [];
"torch.distributed._shard.api" -> "torch.distributed._shard.sharder" [];
"torch.distributed._shard.api" -> "torch.distributed._shard.sharding_plan" [];
"torch.distributed._shard.sharding_plan" -> "torch.distributed._shard.sharding_plan.api" [];
"torch.distributed._shard.api" -> "torch.distributed._shard.sharding_spec" [];
"torch.distributed._shard.sharding_spec.api" -> "torch.distributed._shard.sharding_spec._internals" [];
"torch.distributed._shard.sharding_spec.chunk_sharding_spec" -> "torch.distributed._shard.sharding_spec._internals" [];
"torch.distributed._shard.sharding_spec" -> "torch.distributed._shard.sharding_spec.api" [];
"torch.distributed._shard.sharding_spec.chunk_sharding_spec" -> "torch.distributed._shard.sharding_spec.api" [];
"torch.distributed._shard.sharding_spec" -> "torch.distributed._shard.sharding_spec.chunk_sharding_spec" [];
"torch.distributed._shard.sharding_spec.api" -> "torch.distributed._shard.sharding_spec.chunk_sharding_spec" [];
"torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops.embedding" -> "torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops._common" [];
"torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops.embedding_bag" -> "torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops._common" [];
"torch.distributed._tools" -> "torch.distributed._tools.fsdp2_mem_tracker" [];
"torch.distributed._tools.sac_ilp" -> "torch.distributed._tools.ilp_utils" [];
"torch.distributed._tools" -> "torch.distributed._tools.mem_tracker" [];
"torch.distributed._tools.fsdp2_mem_tracker" -> "torch.distributed._tools.mem_tracker" [];
"torch.distributed._tools.ilp_utils" -> "torch.distributed._tools.mem_tracker" [];
"torch.distributed._tools" -> "torch.distributed._tools.memory_tracker" [];
"torch.distributed._tools" -> "torch.distributed._tools.mod_tracker" [];
"torch.distributed._tools.mem_tracker" -> "torch.distributed._tools.mod_tracker" [];
"torch.distributed._tools.runtime_estimator" -> "torch.distributed._tools.mod_tracker" [];
"torch.distributed._tools.sac_estimator" -> "torch.distributed._tools.mod_tracker" [];
"torch.distributed._tools" -> "torch.distributed._tools.runtime_estimator" [];
"torch.distributed._tools.ilp_utils" -> "torch.distributed._tools.runtime_estimator" [];
"torch.distributed._tools.sac_estimator" -> "torch.distributed._tools.runtime_estimator" [];
"torch.distributed._tools" -> "torch.distributed._tools.sac_estimator" [];
"torch.distributed._tools.ilp_utils" -> "torch.distributed._tools.sac_estimator" [];
"torch.distributed._tools.sac_ilp" -> "torch.distributed._tools.sac_estimator" [];
"torch.distributed.algorithms._comm_hooks" -> "torch.distributed.algorithms._comm_hooks.default_hooks" [];
"torch.distributed.algorithms._optimizer_overlap" -> "torch.distributed.algorithms._optimizer_overlap.optimizer_overlap" [];
"torch.distributed.algorithms.ddp_comm_hooks" -> "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks" [];
"torch.distributed.algorithms.ddp_comm_hooks" -> "torch.distributed.algorithms.ddp_comm_hooks.default_hooks" [];
"torch.distributed.algorithms.ddp_comm_hooks.post_localSGD_hook" -> "torch.distributed.algorithms.ddp_comm_hooks.default_hooks" [];
"torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook" -> "torch.distributed.algorithms.ddp_comm_hooks.default_hooks" [];
"torch.distributed.algorithms.ddp_comm_hooks" -> "torch.distributed.algorithms.ddp_comm_hooks.optimizer_overlap_hooks" [];
"torch.distributed.algorithms.ddp_comm_hooks" -> "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook" [];
"torch.distributed.algorithms.ddp_comm_hooks" -> "torch.distributed.algorithms.ddp_comm_hooks.quantization_hooks" [];
"torch.distributed.algorithms" -> "torch.distributed.algorithms.join" [];
"torch.distributed.algorithms.model_averaging.hierarchical_model_averager" -> "torch.distributed.algorithms.model_averaging.averagers" [];
"torch.distributed.algorithms.model_averaging.averagers" -> "torch.distributed.algorithms.model_averaging.utils" [];
"torch.distributed.algorithms.model_averaging.hierarchical_model_averager" -> "torch.distributed.algorithms.model_averaging.utils" [];
"torch.distributed.run" -> "torch.distributed.argparse_util" [];
"torch.distributed.distributed_c10d" -> "torch.distributed.c10d_logger" [];
"torch.distributed.checkpoint.format_utils" -> "torch.distributed.checkpoint" [];
"torch.distributed.checkpoint.default_planner" -> "torch.distributed.checkpoint._dedup_save_plans" [];
"torch.distributed.checkpoint._storage_utils" -> "torch.distributed.checkpoint._fsspec_filesystem" [];
"torch.distributed.checkpoint.default_planner" -> "torch.distributed.checkpoint._nested_dict" [];
"torch.distributed.checkpoint.format_utils" -> "torch.distributed.checkpoint._nested_dict" [];
"torch.distributed.checkpoint.optimizer" -> "torch.distributed.checkpoint._nested_dict" [];
"torch.distributed.checkpoint.default_planner" -> "torch.distributed.checkpoint._sharded_tensor_utils" [];
"torch.distributed.checkpoint.state_dict_loader" -> "torch.distributed.checkpoint._storage_utils" [];
"torch.distributed.checkpoint.state_dict_saver" -> "torch.distributed.checkpoint._storage_utils" [];
"torch.distributed.checkpoint._nested_dict" -> "torch.distributed.checkpoint._traverse" [];
"torch.distributed.checkpoint._sharded_tensor_utils" -> "torch.distributed.checkpoint._traverse" [];
"torch.distributed.checkpoint.default_planner" -> "torch.distributed.checkpoint._traverse" [];
"torch.distributed.checkpoint._nested_dict" -> "torch.distributed.checkpoint._version" [];
"torch.distributed.checkpoint.default_planner" -> "torch.distributed.checkpoint._version" [];
"torch.distributed.checkpoint" -> "torch.distributed.checkpoint.api" [];
"torch.distributed.checkpoint.utils" -> "torch.distributed.checkpoint.api" [];
"torch.distributed.checkpoint" -> "torch.distributed.checkpoint.default_planner" [];
"torch.distributed.checkpoint.format_utils" -> "torch.distributed.checkpoint.default_planner" [];
"torch.distributed.checkpoint.optimizer" -> "torch.distributed.checkpoint.default_planner" [];
"torch.distributed.checkpoint.state_dict_loader" -> "torch.distributed.checkpoint.default_planner" [];
"torch.distributed.checkpoint.state_dict_saver" -> "torch.distributed.checkpoint.default_planner" [];
"torch.distributed.checkpoint" -> "torch.distributed.checkpoint.filesystem" [];
"torch.distributed.checkpoint._fsspec_filesystem" -> "torch.distributed.checkpoint.filesystem" [];
"torch.distributed.checkpoint._storage_utils" -> "torch.distributed.checkpoint.filesystem" [];
"torch.distributed.checkpoint.state_dict_loader" -> "torch.distributed.checkpoint.logger" [];
"torch.distributed.checkpoint.state_dict_saver" -> "torch.distributed.checkpoint.logger" [];
"torch.distributed.checkpoint.logger" -> "torch.distributed.checkpoint.logging_handlers" [];
"torch.distributed.checkpoint" -> "torch.distributed.checkpoint.metadata" [];
"torch.distributed.checkpoint._checkpointer" -> "torch.distributed.checkpoint.metadata" [];
"torch.distributed.checkpoint._dedup_save_plans" -> "torch.distributed.checkpoint.metadata" [];
"torch.distributed.checkpoint._dedup_tensors" -> "torch.distributed.checkpoint.metadata" [];
"torch.distributed.checkpoint._nested_dict" -> "torch.distributed.checkpoint.metadata" [];
"torch.distributed.checkpoint._sharded_tensor_utils" -> "torch.distributed.checkpoint.metadata" [];
"torch.distributed.checkpoint._traverse" -> "torch.distributed.checkpoint.metadata" [];
"torch.distributed.checkpoint.default_planner" -> "torch.distributed.checkpoint.metadata" [];
"torch.distributed.checkpoint.filesystem" -> "torch.distributed.checkpoint.metadata" [];
"torch.distributed.checkpoint.format_utils" -> "torch.distributed.checkpoint.metadata" [];
"torch.distributed.checkpoint.optimizer" -> "torch.distributed.checkpoint.metadata" [];
"torch.distributed.checkpoint.planner" -> "torch.distributed.checkpoint.metadata" [];
"torch.distributed.checkpoint.planner_helpers" -> "torch.distributed.checkpoint.metadata" [];
"torch.distributed.checkpoint.resharding" -> "torch.distributed.checkpoint.metadata" [];
"torch.distributed.checkpoint.staging" -> "torch.distributed.checkpoint.metadata" [];
"torch.distributed.checkpoint.state_dict_saver" -> "torch.distributed.checkpoint.metadata" [];
"torch.distributed.checkpoint.storage" -> "torch.distributed.checkpoint.metadata" [];
"torch.distributed.checkpoint.utils" -> "torch.distributed.checkpoint.metadata" [];
"torch.distributed.checkpoint" -> "torch.distributed.checkpoint.optimizer" [];
"torch.distributed.checkpoint" -> "torch.distributed.checkpoint.planner" [];
"torch.distributed.checkpoint._dedup_save_plans" -> "torch.distributed.checkpoint.planner" [];
"torch.distributed.checkpoint._dedup_tensors" -> "torch.distributed.checkpoint.planner" [];
"torch.distributed.checkpoint.default_planner" -> "torch.distributed.checkpoint.planner" [];
"torch.distributed.checkpoint.filesystem" -> "torch.distributed.checkpoint.planner" [];
"torch.distributed.checkpoint.format_utils" -> "torch.distributed.checkpoint.planner" [];
"torch.distributed.checkpoint.optimizer" -> "torch.distributed.checkpoint.planner" [];
"torch.distributed.checkpoint.planner_helpers" -> "torch.distributed.checkpoint.planner" [];
"torch.distributed.checkpoint.state_dict_loader" -> "torch.distributed.checkpoint.planner" [];
"torch.distributed.checkpoint.state_dict_saver" -> "torch.distributed.checkpoint.planner" [];
"torch.distributed.checkpoint.storage" -> "torch.distributed.checkpoint.planner" [];
"torch.distributed.checkpoint.default_planner" -> "torch.distributed.checkpoint.planner_helpers" [];
"torch.distributed.checkpoint.format_utils" -> "torch.distributed.checkpoint.planner_helpers" [];
"torch.distributed.checkpoint.optimizer" -> "torch.distributed.checkpoint.planner_helpers" [];
"torch.distributed.checkpoint.planner_helpers" -> "torch.distributed.checkpoint.resharding" [];
"torch.distributed.checkpoint.filesystem" -> "torch.distributed.checkpoint.staging" [];
"torch.distributed.checkpoint.state_dict_saver" -> "torch.distributed.checkpoint.staging" [];
"torch.distributed.checkpoint" -> "torch.distributed.checkpoint.state_dict_loader" [];
"torch.distributed.checkpoint._checkpointer" -> "torch.distributed.checkpoint.state_dict_loader" [];
"torch.distributed.checkpoint.format_utils" -> "torch.distributed.checkpoint.state_dict_loader" [];
"torch.distributed.checkpoint.optimizer" -> "torch.distributed.checkpoint.state_dict_loader" [];
"torch.distributed.checkpoint" -> "torch.distributed.checkpoint.state_dict_saver" [];
"torch.distributed.checkpoint._checkpointer" -> "torch.distributed.checkpoint.state_dict_saver" [];
"torch.distributed.checkpoint.format_utils" -> "torch.distributed.checkpoint.state_dict_saver" [];
"torch.distributed.checkpoint.metadata" -> "torch.distributed.checkpoint.stateful" [];
"torch.distributed.checkpoint.state_dict_loader" -> "torch.distributed.checkpoint.stateful" [];
"torch.distributed.checkpoint.state_dict_saver" -> "torch.distributed.checkpoint.stateful" [];
"torch.distributed.checkpoint" -> "torch.distributed.checkpoint.storage" [];
"torch.distributed.checkpoint._checkpointer" -> "torch.distributed.checkpoint.storage" [];
"torch.distributed.checkpoint._storage_utils" -> "torch.distributed.checkpoint.storage" [];
"torch.distributed.checkpoint.filesystem" -> "torch.distributed.checkpoint.storage" [];
"torch.distributed.checkpoint.format_utils" -> "torch.distributed.checkpoint.storage" [];
"torch.distributed.checkpoint.optimizer" -> "torch.distributed.checkpoint.storage" [];
"torch.distributed.checkpoint.state_dict_loader" -> "torch.distributed.checkpoint.storage" [];
"torch.distributed.checkpoint.state_dict_saver" -> "torch.distributed.checkpoint.storage" [];
"torch.distributed.checkpoint._sharded_tensor_utils" -> "torch.distributed.checkpoint.utils" [];
"torch.distributed.checkpoint.default_planner" -> "torch.distributed.checkpoint.utils" [];
"torch.distributed.checkpoint.filesystem" -> "torch.distributed.checkpoint.utils" [];
"torch.distributed.checkpoint.optimizer" -> "torch.distributed.checkpoint.utils" [];
"torch.distributed.checkpoint.state_dict_loader" -> "torch.distributed.checkpoint.utils" [];
"torch.distributed.checkpoint.state_dict_saver" -> "torch.distributed.checkpoint.utils" [];
"torch.distributed.distributed_c10d" -> "torch.distributed.constants" [];
"torch.distributed.rendezvous" -> "torch.distributed.constants" [];
"torch.distributed" -> "torch.distributed.device_mesh" [];
"torch.distributed._functional_collectives" -> "torch.distributed.device_mesh" [];
"torch.distributed" -> "torch.distributed.distributed_c10d" [];
"torch.distributed._functional_collectives" -> "torch.distributed.distributed_c10d" [];
"torch.distributed._functional_collectives_impl" -> "torch.distributed.distributed_c10d" [];
"torch.distributed._state_dict_utils" -> "torch.distributed.distributed_c10d" [];
"torch.distributed.device_mesh" -> "torch.distributed.distributed_c10d" [];
"torch.distributed.elastic.agent.server" -> "torch.distributed.elastic.agent.server.api" [];
"torch.distributed.elastic.agent.server.local_elastic_agent" -> "torch.distributed.elastic.agent.server.api" [];
"torch.distributed.elastic.agent.server.local_elastic_agent" -> "torch.distributed.elastic.agent.server.health_check_server" [];
"torch.distributed.elastic.agent.server" -> "torch.distributed.elastic.agent.server.local_elastic_agent" [];
"torch.distributed.elastic.events" -> "torch.distributed.elastic.events.api" [];
"torch.distributed.elastic.events" -> "torch.distributed.elastic.events.handlers" [];
"torch.distributed.elastic.metrics" -> "torch.distributed.elastic.metrics.api" [];
"torch.distributed.run" -> "torch.distributed.elastic.multiprocessing" [];
"torch.distributed.elastic.multiprocessing" -> "torch.distributed.elastic.multiprocessing.api" [];
"torch.distributed.elastic.control_plane" -> "torch.distributed.elastic.multiprocessing.errors" [];
"torch.distributed.elastic.multiprocessing.api" -> "torch.distributed.elastic.multiprocessing.errors" [];
"torch.distributed.run" -> "torch.distributed.elastic.multiprocessing.errors" [];
"torch.distributed.elastic.multiprocessing.errors" -> "torch.distributed.elastic.multiprocessing.errors.error_handler" [];
"torch.distributed.elastic.multiprocessing.errors.handlers" -> "torch.distributed.elastic.multiprocessing.errors.error_handler" [];
"torch.distributed.elastic.multiprocessing.errors" -> "torch.distributed.elastic.multiprocessing.errors.handlers" [];
"torch.distributed.elastic.multiprocessing.api" -> "torch.distributed.elastic.multiprocessing.redirects" [];
"torch.distributed.elastic.multiprocessing.api" -> "torch.distributed.elastic.multiprocessing.subprocess_handler" [];
"torch.distributed.elastic.multiprocessing.subprocess_handler" -> "torch.distributed.elastic.multiprocessing.subprocess_handler.handlers" [];
"torch.distributed.elastic.multiprocessing.subprocess_handler" -> "torch.distributed.elastic.multiprocessing.subprocess_handler.subprocess_handler" [];
"torch.distributed.elastic.multiprocessing.subprocess_handler.handlers" -> "torch.distributed.elastic.multiprocessing.subprocess_handler.subprocess_handler" [];
"torch.distributed.elastic.multiprocessing.api" -> "torch.distributed.elastic.multiprocessing.tail_log" [];
"torch.distributed.elastic.rendezvous.etcd_rendezvous" -> "torch.distributed.elastic.rendezvous" [];
"torch.distributed.elastic.rendezvous.static_tcp_rendezvous" -> "torch.distributed.elastic.rendezvous" [];
"torch.distributed.elastic.rendezvous" -> "torch.distributed.elastic.rendezvous.api" [];
"torch.distributed.elastic.rendezvous.c10d_rendezvous_backend" -> "torch.distributed.elastic.rendezvous.api" [];
"torch.distributed.elastic.rendezvous.dynamic_rendezvous" -> "torch.distributed.elastic.rendezvous.api" [];
"torch.distributed.elastic.rendezvous.etcd_rendezvous_backend" -> "torch.distributed.elastic.rendezvous.api" [];
"torch.distributed.elastic.rendezvous.registry" -> "torch.distributed.elastic.rendezvous.api" [];
"torch.distributed.elastic.rendezvous.registry" -> "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend" [];
"torch.distributed.elastic.rendezvous.c10d_rendezvous_backend" -> "torch.distributed.elastic.rendezvous.dynamic_rendezvous" [];
"torch.distributed.elastic.rendezvous.etcd_rendezvous_backend" -> "torch.distributed.elastic.rendezvous.dynamic_rendezvous" [];
"torch.distributed.elastic.rendezvous.registry" -> "torch.distributed.elastic.rendezvous.dynamic_rendezvous" [];
"torch.distributed.elastic.rendezvous.registry" -> "torch.distributed.elastic.rendezvous.etcd_rendezvous" [];
"torch.distributed.elastic.rendezvous.registry" -> "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend" [];
"torch.distributed.elastic.rendezvous.etcd_rendezvous" -> "torch.distributed.elastic.rendezvous.etcd_store" [];
"torch.distributed.elastic.rendezvous.etcd_rendezvous_backend" -> "torch.distributed.elastic.rendezvous.etcd_store" [];
"torch.distributed.elastic.rendezvous" -> "torch.distributed.elastic.rendezvous.registry" [];
"torch.distributed.elastic.rendezvous.registry" -> "torch.distributed.elastic.rendezvous.static_tcp_rendezvous" [];
"torch.distributed.elastic.rendezvous.c10d_rendezvous_backend" -> "torch.distributed.elastic.rendezvous.utils" [];
"torch.distributed.elastic.rendezvous.dynamic_rendezvous" -> "torch.distributed.elastic.rendezvous.utils" [];
"torch.distributed.elastic.rendezvous.etcd_rendezvous" -> "torch.distributed.elastic.rendezvous.utils" [];
"torch.distributed.elastic.rendezvous.etcd_rendezvous_backend" -> "torch.distributed.elastic.rendezvous.utils" [];
"torch.distributed.elastic.rendezvous.static_tcp_rendezvous" -> "torch.distributed.elastic.rendezvous.utils" [];
"torch.distributed.run" -> "torch.distributed.elastic.rendezvous.utils" [];
"torch.distributed.elastic.timer" -> "torch.distributed.elastic.timer.api" [];
"torch.distributed.elastic.timer.file_based_local_timer" -> "torch.distributed.elastic.timer.api" [];
"torch.distributed.elastic.timer.local_timer" -> "torch.distributed.elastic.timer.api" [];
"torch.distributed.elastic.timer.file_based_local_timer" -> "torch.distributed.elastic.timer.debug_info_logging" [];
"torch.distributed.elastic.timer" -> "torch.distributed.elastic.timer.file_based_local_timer" [];
"torch.distributed.elastic.timer" -> "torch.distributed.elastic.timer.local_timer" [];
"torch.distributed.run" -> "torch.distributed.elastic.utils" [];
"torch.distributed.elastic.utils" -> "torch.distributed.elastic.utils.api" [];
"torch.distributed.elastic.utils.data" -> "torch.distributed.elastic.utils.data.cycling_iterator" [];
"torch.distributed.elastic.utils.data" -> "torch.distributed.elastic.utils.data.elastic_distributed_sampler" [];
"torch.distributed.elastic.utils.logging" -> "torch.distributed.elastic.utils.log_level" [];
"torch.distributed.elastic.utils.distributed" -> "torch.distributed.elastic.utils.logging" [];
"torch.distributed.run" -> "torch.distributed.elastic.utils.logging" [];
"torch.distributed.elastic.utils.distributed" -> "torch.distributed.elastic.utils.store" [];
"torch.distributed.fsdp._debug_utils" -> "torch.distributed.fsdp._common_utils" [];
"torch.distributed.fsdp._exec_order_utils" -> "torch.distributed.fsdp._common_utils" [];
"torch.distributed.fsdp._flat_param" -> "torch.distributed.fsdp._common_utils" [];
"torch.distributed.fsdp._init_utils" -> "torch.distributed.fsdp._common_utils" [];
"torch.distributed.fsdp._optim_utils" -> "torch.distributed.fsdp._common_utils" [];
"torch.distributed.fsdp._runtime_utils" -> "torch.distributed.fsdp._common_utils" [];
"torch.distributed.fsdp._state_dict_utils" -> "torch.distributed.fsdp._common_utils" [];
"torch.distributed.fsdp._traversal_utils" -> "torch.distributed.fsdp._common_utils" [];
"torch.distributed.fsdp._unshard_param_utils" -> "torch.distributed.fsdp._common_utils" [];
"torch.distributed.fsdp._wrap_utils" -> "torch.distributed.fsdp._common_utils" [];
"torch.distributed.fsdp.fully_sharded_data_parallel" -> "torch.distributed.fsdp._common_utils" [];
"torch.distributed.fsdp._optim_utils" -> "torch.distributed.fsdp._debug_utils" [];
"torch.distributed.fsdp._state_dict_utils" -> "torch.distributed.fsdp._debug_utils" [];
"torch.distributed.fsdp.fully_sharded_data_parallel" -> "torch.distributed.fsdp._dynamo_utils" [];
"torch.distributed.fsdp._init_utils" -> "torch.distributed.fsdp._exec_order_utils" [];
"torch.distributed.fsdp" -> "torch.distributed.fsdp._flat_param" [];
"torch.distributed.fsdp._common_utils" -> "torch.distributed.fsdp._flat_param" [];
"torch.distributed.fsdp._debug_utils" -> "torch.distributed.fsdp._flat_param" [];
"torch.distributed.fsdp._exec_order_utils" -> "torch.distributed.fsdp._flat_param" [];
"torch.distributed.fsdp._init_utils" -> "torch.distributed.fsdp._flat_param" [];
"torch.distributed.fsdp._optim_utils" -> "torch.distributed.fsdp._flat_param" [];
"torch.distributed.fsdp._runtime_utils" -> "torch.distributed.fsdp._flat_param" [];
"torch.distributed.fsdp._unshard_param_utils" -> "torch.distributed.fsdp._flat_param" [];
"torch.distributed.fsdp.fully_sharded_data_parallel" -> "torch.distributed.fsdp._flat_param" [];
"torch.distributed.fsdp._common_utils" -> "torch.distributed.fsdp._fsdp_extensions" [];
"torch.distributed.fsdp._flat_param" -> "torch.distributed.fsdp._fsdp_extensions" [];
"torch.distributed.fsdp._optim_utils" -> "torch.distributed.fsdp._fsdp_extensions" [];
"torch.distributed.fsdp._state_dict_utils" -> "torch.distributed.fsdp._fsdp_extensions" [];
"torch.distributed.fsdp" -> "torch.distributed.fsdp._fully_shard" [];
"torch.distributed.fsdp._fully_shard" -> "torch.distributed.fsdp._fully_shard._fsdp_api" [];
"torch.distributed.fsdp._fully_shard._fsdp_param" -> "torch.distributed.fsdp._fully_shard._fsdp_api" [];
"torch.distributed.fsdp._fully_shard._fsdp_param_group" -> "torch.distributed.fsdp._fully_shard._fsdp_api" [];
"torch.distributed.fsdp._fully_shard._fsdp_state" -> "torch.distributed.fsdp._fully_shard._fsdp_api" [];
"torch.distributed.fsdp._fully_shard._fully_shard" -> "torch.distributed.fsdp._fully_shard._fsdp_api" [];
"torch.distributed.fsdp._fully_shard._fsdp_param_group" -> "torch.distributed.fsdp._fully_shard._fsdp_collectives" [];
"torch.distributed.fsdp._fully_shard._fsdp_collectives" -> "torch.distributed.fsdp._fully_shard._fsdp_common" [];
"torch.distributed.fsdp._fully_shard._fsdp_init" -> "torch.distributed.fsdp._fully_shard._fsdp_common" [];
"torch.distributed.fsdp._fully_shard._fsdp_param" -> "torch.distributed.fsdp._fully_shard._fsdp_common" [];
"torch.distributed.fsdp._fully_shard._fsdp_param_group" -> "torch.distributed.fsdp._fully_shard._fsdp_common" [];
"torch.distributed.fsdp._fully_shard._fsdp_state" -> "torch.distributed.fsdp._fully_shard._fsdp_common" [];
"torch.distributed.fsdp._fully_shard._fully_shard" -> "torch.distributed.fsdp._fully_shard._fsdp_common" [];
"torch.distributed.fsdp._fully_shard._fully_shard" -> "torch.distributed.fsdp._fully_shard._fsdp_init" [];
"torch.distributed.fsdp._fully_shard._fsdp_collectives" -> "torch.distributed.fsdp._fully_shard._fsdp_param" [];
"torch.distributed.fsdp._fully_shard._fsdp_param_group" -> "torch.distributed.fsdp._fully_shard._fsdp_param" [];
"torch.distributed.fsdp._fully_shard._fsdp_state" -> "torch.distributed.fsdp._fully_shard._fsdp_param" [];
"torch.distributed.fsdp._fully_shard._fsdp_state" -> "torch.distributed.fsdp._fully_shard._fsdp_param_group" [];
"torch.distributed.fsdp._fully_shard._fully_shard" -> "torch.distributed.fsdp._fully_shard._fsdp_param_group" [];
"torch.distributed.fsdp._fully_shard._fsdp_init" -> "torch.distributed.fsdp._fully_shard._fsdp_state" [];
"torch.distributed.fsdp._fully_shard._fully_shard" -> "torch.distributed.fsdp._fully_shard._fsdp_state" [];
"torch.distributed.fsdp._fully_shard" -> "torch.distributed.fsdp._fully_shard._fully_shard" [];
"torch.distributed.fsdp._runtime_utils" -> "torch.distributed.fsdp._init_utils" [];
"torch.distributed.fsdp.fully_sharded_data_parallel" -> "torch.distributed.fsdp._init_utils" [];
"torch.distributed.fsdp._init_utils" -> "torch.distributed.fsdp._limiter_utils" [];
"torch.distributed.fsdp.fully_sharded_data_parallel" -> "torch.distributed.fsdp._optim_utils" [];
"torch.distributed.fsdp._optim_utils" -> "torch.distributed.fsdp._runtime_utils" [];
"torch.distributed.fsdp._state_dict_utils" -> "torch.distributed.fsdp._runtime_utils" [];
"torch.distributed.fsdp._unshard_param_utils" -> "torch.distributed.fsdp._runtime_utils" [];
"torch.distributed.fsdp.fully_sharded_data_parallel" -> "torch.distributed.fsdp._runtime_utils" [];
"torch.distributed.fsdp._fsdp_extensions" -> "torch.distributed.fsdp._shard_utils" [];
"torch.distributed.fsdp.fully_sharded_data_parallel" -> "torch.distributed.fsdp._state_dict_utils" [];
"torch.distributed.fsdp._exec_order_utils" -> "torch.distributed.fsdp._traversal_utils" [];
"torch.distributed.fsdp._init_utils" -> "torch.distributed.fsdp._traversal_utils" [];
"torch.distributed.fsdp._optim_utils" -> "torch.distributed.fsdp._traversal_utils" [];
"torch.distributed.fsdp._runtime_utils" -> "torch.distributed.fsdp._traversal_utils" [];
"torch.distributed.fsdp._unshard_param_utils" -> "torch.distributed.fsdp._traversal_utils" [];
"torch.distributed.fsdp.fully_sharded_data_parallel" -> "torch.distributed.fsdp._traversal_utils" [];
"torch.distributed.fsdp._state_dict_utils" -> "torch.distributed.fsdp._unshard_param_utils" [];
"torch.distributed.fsdp.fully_sharded_data_parallel" -> "torch.distributed.fsdp._unshard_param_utils" [];
"torch.distributed.fsdp.fully_sharded_data_parallel" -> "torch.distributed.fsdp._wrap_utils" [];
"torch.distributed.fsdp._common_utils" -> "torch.distributed.fsdp.api" [];
"torch.distributed.fsdp._init_utils" -> "torch.distributed.fsdp.api" [];
"torch.distributed.fsdp._optim_utils" -> "torch.distributed.fsdp.api" [];
"torch.distributed.fsdp._runtime_utils" -> "torch.distributed.fsdp.api" [];
"torch.distributed.fsdp._state_dict_utils" -> "torch.distributed.fsdp.api" [];
"torch.distributed.fsdp.fully_sharded_data_parallel" -> "torch.distributed.fsdp.api" [];
"torch.distributed.fsdp" -> "torch.distributed.fsdp.fully_sharded_data_parallel" [];
"torch.distributed.fsdp._init_utils" -> "torch.distributed.fsdp.fully_sharded_data_parallel" [];
"torch.distributed.fsdp._init_utils" -> "torch.distributed.fsdp.wrap" [];
"torch.distributed.fsdp._wrap_utils" -> "torch.distributed.fsdp.wrap" [];
"torch.distributed.fsdp.fully_sharded_data_parallel" -> "torch.distributed.fsdp.wrap" [];
"torch.distributed.launcher" -> "torch.distributed.launcher.api" [];
"torch.distributed.run" -> "torch.distributed.launcher.api" [];
"torch.distributed.c10d_logger" -> "torch.distributed.logging_handlers" [];
"torch.distributed.nn" -> "torch.distributed.nn.api.remote_module" [];
"torch.distributed.nn" -> "torch.distributed.nn.functional" [];
"torch.distributed.nn.jit.instantiator" -> "torch.distributed.nn.jit.templates.remote_module_template" [];
"torch.distributed.optim.functional_adadelta" -> "torch.distributed.optim._deprecation_warning" [];
"torch.distributed.optim.functional_adagrad" -> "torch.distributed.optim._deprecation_warning" [];
"torch.distributed.optim.functional_adam" -> "torch.distributed.optim._deprecation_warning" [];
"torch.distributed.optim.functional_adamax" -> "torch.distributed.optim._deprecation_warning" [];
"torch.distributed.optim.functional_adamw" -> "torch.distributed.optim._deprecation_warning" [];
"torch.distributed.optim.functional_rmsprop" -> "torch.distributed.optim._deprecation_warning" [];
"torch.distributed.optim.functional_rprop" -> "torch.distributed.optim._deprecation_warning" [];
"torch.distributed.optim.functional_sgd" -> "torch.distributed.optim._deprecation_warning" [];
"torch.distributed.optim" -> "torch.distributed.optim.apply_optimizer_in_backward" [];
"torch.distributed.optim" -> "torch.distributed.optim.functional_adadelta" [];
"torch.distributed.optim.utils" -> "torch.distributed.optim.functional_adadelta" [];
"torch.distributed.optim" -> "torch.distributed.optim.functional_adagrad" [];
"torch.distributed.optim.utils" -> "torch.distributed.optim.functional_adagrad" [];
"torch.distributed.optim" -> "torch.distributed.optim.functional_adam" [];
"torch.distributed.optim.utils" -> "torch.distributed.optim.functional_adam" [];
"torch.distributed.optim" -> "torch.distributed.optim.functional_adamax" [];
"torch.distributed.optim.utils" -> "torch.distributed.optim.functional_adamax" [];
"torch.distributed.optim" -> "torch.distributed.optim.functional_adamw" [];
"torch.distributed.optim.utils" -> "torch.distributed.optim.functional_adamw" [];
"torch.distributed.optim" -> "torch.distributed.optim.functional_rmsprop" [];
"torch.distributed.optim.utils" -> "torch.distributed.optim.functional_rmsprop" [];
"torch.distributed.optim" -> "torch.distributed.optim.functional_rprop" [];
"torch.distributed.optim.utils" -> "torch.distributed.optim.functional_rprop" [];
"torch.distributed.optim" -> "torch.distributed.optim.functional_sgd" [];
"torch.distributed.optim.utils" -> "torch.distributed.optim.functional_sgd" [];
"torch.distributed.optim" -> "torch.distributed.optim.named_optimizer" [];
"torch.distributed.optim" -> "torch.distributed.optim.optimizer" [];
"torch.distributed.optim" -> "torch.distributed.optim.post_localSGD_optimizer" [];
"torch.distributed.optim" -> "torch.distributed.optim.utils" [];
"torch.distributed.optim.optimizer" -> "torch.distributed.optim.utils" [];
"torch.distributed.optim.zero_redundancy_optimizer" -> "torch.distributed.optim.utils" [];
"torch.distributed.optim" -> "torch.distributed.optim.zero_redundancy_optimizer" [];
"torch.distributed.pipelining" -> "torch.distributed.pipelining._IR" [];
"torch.distributed.pipelining._IR" -> "torch.distributed.pipelining._backward" [];
"torch.distributed.pipelining.stage" -> "torch.distributed.pipelining._backward" [];
"torch.distributed.pipelining._backward" -> "torch.distributed.pipelining._debug" [];
"torch.distributed.pipelining.stage" -> "torch.distributed.pipelining._debug" [];
"torch.distributed.pipelining._IR" -> "torch.distributed.pipelining._unflatten" [];
"torch.distributed.pipelining._IR" -> "torch.distributed.pipelining._utils" [];
"torch.distributed.pipelining.stage" -> "torch.distributed.pipelining._utils" [];
"torch.distributed.pipelining.schedules" -> "torch.distributed.pipelining.microbatch" [];
"torch.distributed.pipelining" -> "torch.distributed.pipelining.schedules" [];
"torch.distributed.pipelining" -> "torch.distributed.pipelining.stage" [];
"torch.distributed.pipelining._IR" -> "torch.distributed.pipelining.stage" [];
"torch.distributed.pipelining.schedules" -> "torch.distributed.pipelining.stage" [];
"torch.distributed" -> "torch.distributed.remote_device" [];
"torch.distributed" -> "torch.distributed.rendezvous" [];
"torch.distributed.distributed_c10d" -> "torch.distributed.rendezvous" [];
"torch._jit_internal" -> "torch.distributed.rpc" [];
"torch.distributed.rpc._utils" -> "torch.distributed.rpc" [];
"torch.distributed.rpc.backend_registry" -> "torch.distributed.rpc" [];
"torch.distributed.rpc.rref_proxy" -> "torch.distributed.rpc" [];
"torch.distributed.rpc.server_process_global_profiler" -> "torch.distributed.rpc" [];
"torch.distributed.rpc._testing.faulty_agent_backend_registry" -> "torch.distributed.rpc._testing" [];
"torch.distributed.rpc._testing" -> "torch.distributed.rpc._testing.faulty_agent_backend_registry" [];
"torch.distributed.rpc.api" -> "torch.distributed.rpc._utils" [];
"torch.distributed.rpc.backend_registry" -> "torch.distributed.rpc._utils" [];
"torch.distributed.rpc" -> "torch.distributed.rpc.api" [];
"torch.distributed.rpc._utils" -> "torch.distributed.rpc.api" [];
"torch.distributed.rpc.backend_registry" -> "torch.distributed.rpc.api" [];
"torch.distributed.rpc" -> "torch.distributed.rpc.backend_registry" [];
"torch.distributed.rpc.api" -> "torch.distributed.rpc.constants" [];
"torch.distributed.rpc.backend_registry" -> "torch.distributed.rpc.constants" [];
"torch.distributed.rpc.options" -> "torch.distributed.rpc.constants" [];
"torch.distributed.rpc.rref_proxy" -> "torch.distributed.rpc.constants" [];
"torch.distributed.rpc" -> "torch.distributed.rpc.functions" [];
"torch.distributed.rpc.rref_proxy" -> "torch.distributed.rpc.functions" [];
"torch.distributed.rpc.api" -> "torch.distributed.rpc.internal" [];
"torch.distributed.rpc" -> "torch.distributed.rpc.options" [];
"torch.distributed.rpc" -> "torch.distributed.rpc.server_process_global_profiler" [];
"torch.distributed.launch" -> "torch.distributed.run" [];
"torch.distributed._state_dict_utils" -> "torch.distributed.tensor" [];
"torch.distributed.tensor" -> "torch.distributed.tensor._api" [];
"torch.distributed.tensor._dispatch" -> "torch.distributed.tensor._api" [];
"torch.distributed.tensor._redistribute" -> "torch.distributed.tensor._api" [];
"torch.distributed.tensor._tp_conv" -> "torch.distributed.tensor._api" [];
"torch.distributed.tensor._utils" -> "torch.distributed.tensor._api" [];
"torch.distributed.tensor._api" -> "torch.distributed.tensor._collective_utils" [];
"torch.distributed.tensor.placement_types" -> "torch.distributed.tensor._collective_utils" [];
"torch.distributed.tensor._api" -> "torch.distributed.tensor._dispatch" [];
"torch.distributed.tensor" -> "torch.distributed.tensor._dtensor_spec" [];
"torch.distributed.tensor._api" -> "torch.distributed.tensor._dtensor_spec" [];
"torch.distributed.tensor._collective_utils" -> "torch.distributed.tensor._dtensor_spec" [];
"torch.distributed.tensor._dispatch" -> "torch.distributed.tensor._dtensor_spec" [];
"torch.distributed.tensor._op_schema" -> "torch.distributed.tensor._dtensor_spec" [];
"torch.distributed.tensor._random" -> "torch.distributed.tensor._dtensor_spec" [];
"torch.distributed.tensor._redistribute" -> "torch.distributed.tensor._dtensor_spec" [];
"torch.distributed.tensor._sharding_prop" -> "torch.distributed.tensor._dtensor_spec" [];
"torch.distributed.tensor._utils" -> "torch.distributed.tensor._dtensor_spec" [];
"torch.distributed.tensor._dispatch" -> "torch.distributed.tensor._op_schema" [];
"torch.distributed.tensor._sharding_prop" -> "torch.distributed.tensor._op_schema" [];
"torch.distributed.tensor" -> "torch.distributed.tensor._ops" [];
"torch.distributed.tensor._ops._tensor_ops" -> "torch.distributed.tensor._ops._common_rules" [];
"torch.distributed.tensor._ops" -> "torch.distributed.tensor._ops._conv_ops" [];
"torch.distributed.tensor._ops._matrix_ops" -> "torch.distributed.tensor._ops._einsum_strategy" [];
"torch.distributed.tensor._ops" -> "torch.distributed.tensor._ops._embedding_ops" [];
"torch.distributed.tensor._ops._tensor_ops" -> "torch.distributed.tensor._ops._embedding_ops" [];
"torch.distributed.tensor._ops" -> "torch.distributed.tensor._ops._experimental_ops" [];
"torch.distributed.tensor._ops" -> "torch.distributed.tensor._ops._math_ops" [];
"torch.distributed.tensor._ops" -> "torch.distributed.tensor._ops._matrix_ops" [];
"torch.distributed.tensor._ops" -> "torch.distributed.tensor._ops._pointwise_ops" [];
"torch.distributed.tensor._ops" -> "torch.distributed.tensor._ops._random_ops" [];
"torch.distributed.tensor._ops" -> "torch.distributed.tensor._ops._tensor_ops" [];
"torch.distributed.tensor._ops" -> "torch.distributed.tensor._ops._view_ops" [];
"torch.distributed.tensor._ops._common_rules" -> "torch.distributed.tensor._ops.utils" [];
"torch.distributed.tensor._ops._conv_ops" -> "torch.distributed.tensor._ops.utils" [];
"torch.distributed.tensor._ops._embedding_ops" -> "torch.distributed.tensor._ops.utils" [];
"torch.distributed.tensor._ops._experimental_ops" -> "torch.distributed.tensor._ops.utils" [];
"torch.distributed.tensor._ops._math_ops" -> "torch.distributed.tensor._ops.utils" [];
"torch.distributed.tensor._ops._matrix_ops" -> "torch.distributed.tensor._ops.utils" [];
"torch.distributed.tensor._ops._pointwise_ops" -> "torch.distributed.tensor._ops.utils" [];
"torch.distributed.tensor._ops._random_ops" -> "torch.distributed.tensor._ops.utils" [];
"torch.distributed.tensor._ops._tensor_ops" -> "torch.distributed.tensor._ops.utils" [];
"torch.distributed.tensor._ops._view_ops" -> "torch.distributed.tensor._ops.utils" [];
"torch.distributed.tensor._random" -> "torch.distributed.tensor._ops.utils" [];
"torch.distributed.tensor._api" -> "torch.distributed.tensor._random" [];
"torch.distributed.tensor._dispatch" -> "torch.distributed.tensor._random" [];
"torch.distributed.tensor._api" -> "torch.distributed.tensor._redistribute" [];
"torch.distributed.tensor._dispatch" -> "torch.distributed.tensor._redistribute" [];
"torch.distributed.tensor._dispatch" -> "torch.distributed.tensor._sharding_prop" [];
"torch.distributed.tensor._dispatch" -> "torch.distributed.tensor._tp_conv" [];
"torch.distributed._state_dict_utils" -> "torch.distributed.tensor._utils" [];
"torch.distributed.tensor._api" -> "torch.distributed.tensor._utils" [];
"torch.distributed.tensor._dispatch" -> "torch.distributed.tensor._utils" [];
"torch.distributed.tensor._sharding_prop" -> "torch.distributed.tensor._utils" [];
"torch.distributed.tensor.debug" -> "torch.distributed.tensor.debug._comm_mode" [];
"torch.distributed.tensor.debug" -> "torch.distributed.tensor.debug._visualize_sharding" [];
"torch.distributed.tensor._redistribute" -> "torch.distributed.tensor.device_mesh" [];
"torch.distributed.tensor.experimental" -> "torch.distributed.tensor.experimental._attention" [];
"torch.distributed.tensor.experimental" -> "torch.distributed.tensor.experimental._func_map" [];
"torch.distributed.tensor.experimental" -> "torch.distributed.tensor.experimental._register_sharding" [];
"torch.distributed.tensor.parallel.ddp" -> "torch.distributed.tensor.parallel._data_parallel_utils" [];
"torch.distributed.tensor.parallel.fsdp" -> "torch.distributed.tensor.parallel._data_parallel_utils" [];
"torch.distributed.tensor.parallel.api" -> "torch.distributed.tensor.parallel._utils" [];
"torch.distributed.tensor.parallel" -> "torch.distributed.tensor.parallel.api" [];
"torch.distributed.tensor.parallel" -> "torch.distributed.tensor.parallel.loss" [];
"torch.distributed.tensor.parallel" -> "torch.distributed.tensor.parallel.style" [];
"torch.distributed.tensor.parallel.api" -> "torch.distributed.tensor.parallel.style" [];
"torch.distributed.tensor" -> "torch.distributed.tensor.placement_types" [];
"torch.distributed.tensor._api" -> "torch.distributed.tensor.placement_types" [];
"torch.distributed.tensor._dispatch" -> "torch.distributed.tensor.placement_types" [];
"torch.distributed.tensor._dtensor_spec" -> "torch.distributed.tensor.placement_types" [];
"torch.distributed.tensor._op_schema" -> "torch.distributed.tensor.placement_types" [];
"torch.distributed.tensor._random" -> "torch.distributed.tensor.placement_types" [];
"torch.distributed.tensor._redistribute" -> "torch.distributed.tensor.placement_types" [];
"torch.distributed.tensor._utils" -> "torch.distributed.tensor.placement_types" [];
"torch" -> "torch.distributions" [];
"torch.distributions.lkj_cholesky" -> "torch.distributions" [];
"torch.distributions.mixture_same_family" -> "torch.distributions" [];
"torch.distributions.multinomial" -> "torch.distributions" [];
"torch.distributions.studentT" -> "torch.distributions" [];
"torch.distributions" -> "torch.distributions.bernoulli" [];
"torch.distributions.kl" -> "torch.distributions.bernoulli" [];
"torch.distributions" -> "torch.distributions.beta" [];
"torch.distributions.kl" -> "torch.distributions.beta" [];
"torch.distributions" -> "torch.distributions.binomial" [];
"torch.distributions.kl" -> "torch.distributions.binomial" [];
"torch.distributions.multinomial" -> "torch.distributions.binomial" [];
"torch.distributions" -> "torch.distributions.categorical" [];
"torch.distributions.kl" -> "torch.distributions.categorical" [];
"torch.distributions.one_hot_categorical" -> "torch.distributions.categorical" [];
"torch.distributions.relaxed_categorical" -> "torch.distributions.categorical" [];
"torch.distributions" -> "torch.distributions.cauchy" [];
"torch.distributions.half_cauchy" -> "torch.distributions.cauchy" [];
"torch.distributions.kl" -> "torch.distributions.cauchy" [];
"torch.distributions" -> "torch.distributions.chi2" [];
"torch.distributions" -> "torch.distributions.constraint_registry" [];
"torch.distributions.bernoulli" -> "torch.distributions.constraints" [];
"torch.distributions.beta" -> "torch.distributions.constraints" [];
"torch.distributions.binomial" -> "torch.distributions.constraints" [];
"torch.distributions.categorical" -> "torch.distributions.constraints" [];
"torch.distributions.cauchy" -> "torch.distributions.constraints" [];
"torch.distributions.chi2" -> "torch.distributions.constraints" [];
"torch.distributions.constraint_registry" -> "torch.distributions.constraints" [];
"torch.distributions.continuous_bernoulli" -> "torch.distributions.constraints" [];
"torch.distributions.dirichlet" -> "torch.distributions.constraints" [];
"torch.distributions.distribution" -> "torch.distributions.constraints" [];
"torch.distributions.exponential" -> "torch.distributions.constraints" [];
"torch.distributions.fishersnedecor" -> "torch.distributions.constraints" [];
"torch.distributions.gamma" -> "torch.distributions.constraints" [];
"torch.distributions.geometric" -> "torch.distributions.constraints" [];
"torch.distributions.gumbel" -> "torch.distributions.constraints" [];
"torch.distributions.half_cauchy" -> "torch.distributions.constraints" [];
"torch.distributions.half_normal" -> "torch.distributions.constraints" [];
"torch.distributions.independent" -> "torch.distributions.constraints" [];
"torch.distributions.inverse_gamma" -> "torch.distributions.constraints" [];
"torch.distributions.kumaraswamy" -> "torch.distributions.constraints" [];
"torch.distributions.laplace" -> "torch.distributions.constraints" [];
"torch.distributions.lkj_cholesky" -> "torch.distributions.constraints" [];
"torch.distributions.log_normal" -> "torch.distributions.constraints" [];
"torch.distributions.logistic_normal" -> "torch.distributions.constraints" [];
"torch.distributions.lowrank_multivariate_normal" -> "torch.distributions.constraints" [];
"torch.distributions.mixture_same_family" -> "torch.distributions.constraints" [];
"torch.distributions.multinomial" -> "torch.distributions.constraints" [];
"torch.distributions.multivariate_normal" -> "torch.distributions.constraints" [];
"torch.distributions.negative_binomial" -> "torch.distributions.constraints" [];
"torch.distributions.normal" -> "torch.distributions.constraints" [];
"torch.distributions.one_hot_categorical" -> "torch.distributions.constraints" [];
"torch.distributions.pareto" -> "torch.distributions.constraints" [];
"torch.distributions.poisson" -> "torch.distributions.constraints" [];
"torch.distributions.relaxed_bernoulli" -> "torch.distributions.constraints" [];
"torch.distributions.relaxed_categorical" -> "torch.distributions.constraints" [];
"torch.distributions.studentT" -> "torch.distributions.constraints" [];
"torch.distributions.transformed_distribution" -> "torch.distributions.constraints" [];
"torch.distributions.transforms" -> "torch.distributions.constraints" [];
"torch.distributions.uniform" -> "torch.distributions.constraints" [];
"torch.distributions.von_mises" -> "torch.distributions.constraints" [];
"torch.distributions.weibull" -> "torch.distributions.constraints" [];
"torch.distributions.wishart" -> "torch.distributions.constraints" [];
"torch.distributions" -> "torch.distributions.continuous_bernoulli" [];
"torch.distributions.kl" -> "torch.distributions.continuous_bernoulli" [];
"torch.distributions" -> "torch.distributions.dirichlet" [];
"torch.distributions.beta" -> "torch.distributions.dirichlet" [];
"torch.distributions.kl" -> "torch.distributions.dirichlet" [];
"torch.distributions" -> "torch.distributions.distribution" [];
"torch.distributions.binomial" -> "torch.distributions.distribution" [];
"torch.distributions.categorical" -> "torch.distributions.distribution" [];
"torch.distributions.cauchy" -> "torch.distributions.distribution" [];
"torch.distributions.exp_family" -> "torch.distributions.distribution" [];
"torch.distributions.fishersnedecor" -> "torch.distributions.distribution" [];
"torch.distributions.geometric" -> "torch.distributions.distribution" [];
"torch.distributions.independent" -> "torch.distributions.distribution" [];
"torch.distributions.kl" -> "torch.distributions.distribution" [];
"torch.distributions.laplace" -> "torch.distributions.distribution" [];
"torch.distributions.lkj_cholesky" -> "torch.distributions.distribution" [];
"torch.distributions.lowrank_multivariate_normal" -> "torch.distributions.distribution" [];
"torch.distributions.mixture_same_family" -> "torch.distributions.distribution" [];
"torch.distributions.multinomial" -> "torch.distributions.distribution" [];
"torch.distributions.multivariate_normal" -> "torch.distributions.distribution" [];
"torch.distributions.negative_binomial" -> "torch.distributions.distribution" [];
"torch.distributions.one_hot_categorical" -> "torch.distributions.distribution" [];
"torch.distributions.relaxed_bernoulli" -> "torch.distributions.distribution" [];
"torch.distributions.relaxed_categorical" -> "torch.distributions.distribution" [];
"torch.distributions.studentT" -> "torch.distributions.distribution" [];
"torch.distributions.transformed_distribution" -> "torch.distributions.distribution" [];
"torch.distributions.uniform" -> "torch.distributions.distribution" [];
"torch.distributions.von_mises" -> "torch.distributions.distribution" [];
"torch.distributions" -> "torch.distributions.exp_family" [];
"torch.distributions.bernoulli" -> "torch.distributions.exp_family" [];
"torch.distributions.beta" -> "torch.distributions.exp_family" [];
"torch.distributions.continuous_bernoulli" -> "torch.distributions.exp_family" [];
"torch.distributions.dirichlet" -> "torch.distributions.exp_family" [];
"torch.distributions.exponential" -> "torch.distributions.exp_family" [];
"torch.distributions.gamma" -> "torch.distributions.exp_family" [];
"torch.distributions.kl" -> "torch.distributions.exp_family" [];
"torch.distributions.normal" -> "torch.distributions.exp_family" [];
"torch.distributions.poisson" -> "torch.distributions.exp_family" [];
"torch.distributions.wishart" -> "torch.distributions.exp_family" [];
"torch.distributions" -> "torch.distributions.exponential" [];
"torch.distributions.kl" -> "torch.distributions.exponential" [];
"torch.distributions.pareto" -> "torch.distributions.exponential" [];
"torch.distributions.weibull" -> "torch.distributions.exponential" [];
"torch.distributions" -> "torch.distributions.fishersnedecor" [];
"torch.distributions" -> "torch.distributions.gamma" [];
"torch.distributions.chi2" -> "torch.distributions.gamma" [];
"torch.distributions.fishersnedecor" -> "torch.distributions.gamma" [];
"torch.distributions.inverse_gamma" -> "torch.distributions.gamma" [];
"torch.distributions.kl" -> "torch.distributions.gamma" [];
"torch.distributions" -> "torch.distributions.geometric" [];
"torch.distributions.kl" -> "torch.distributions.geometric" [];
"torch.distributions" -> "torch.distributions.gumbel" [];
"torch.distributions.kl" -> "torch.distributions.gumbel" [];
"torch.distributions.weibull" -> "torch.distributions.gumbel" [];
"torch.distributions" -> "torch.distributions.half_cauchy" [];
"torch.distributions" -> "torch.distributions.half_normal" [];
"torch.distributions.kl" -> "torch.distributions.half_normal" [];
"torch.distributions" -> "torch.distributions.independent" [];
"torch.distributions.kl" -> "torch.distributions.independent" [];
"torch.distributions.transformed_distribution" -> "torch.distributions.independent" [];
"torch.distributions" -> "torch.distributions.inverse_gamma" [];
"torch.distributions" -> "torch.distributions.kl" [];
"torch.distributions" -> "torch.distributions.kumaraswamy" [];
"torch.distributions" -> "torch.distributions.laplace" [];
"torch.distributions.kl" -> "torch.distributions.laplace" [];
"torch.distributions" -> "torch.distributions.lkj_cholesky" [];
"torch.distributions" -> "torch.distributions.log_normal" [];
"torch.distributions" -> "torch.distributions.logistic_normal" [];
"torch.distributions" -> "torch.distributions.lowrank_multivariate_normal" [];
"torch.distributions.kl" -> "torch.distributions.lowrank_multivariate_normal" [];
"torch.distributions" -> "torch.distributions.mixture_same_family" [];
"torch.distributions" -> "torch.distributions.multinomial" [];
"torch.distributions" -> "torch.distributions.multivariate_normal" [];
"torch.distributions.kl" -> "torch.distributions.multivariate_normal" [];
"torch.distributions.lowrank_multivariate_normal" -> "torch.distributions.multivariate_normal" [];
"torch.distributions.wishart" -> "torch.distributions.multivariate_normal" [];
"torch.distributions" -> "torch.distributions.negative_binomial" [];
"torch.distributions" -> "torch.distributions.normal" [];
"torch.distributions.half_normal" -> "torch.distributions.normal" [];
"torch.distributions.kl" -> "torch.distributions.normal" [];
"torch.distributions.log_normal" -> "torch.distributions.normal" [];
"torch.distributions.logistic_normal" -> "torch.distributions.normal" [];
"torch.distributions" -> "torch.distributions.one_hot_categorical" [];
"torch.distributions.kl" -> "torch.distributions.one_hot_categorical" [];
"torch.distributions" -> "torch.distributions.pareto" [];
"torch.distributions.kl" -> "torch.distributions.pareto" [];
"torch.distributions" -> "torch.distributions.poisson" [];
"torch.distributions.kl" -> "torch.distributions.poisson" [];
"torch.distributions" -> "torch.distributions.relaxed_bernoulli" [];
"torch.distributions" -> "torch.distributions.relaxed_categorical" [];
"torch.distributions" -> "torch.distributions.studentT" [];
"torch.distributions" -> "torch.distributions.transformed_distribution" [];
"torch.distributions.gumbel" -> "torch.distributions.transformed_distribution" [];
"torch.distributions.half_cauchy" -> "torch.distributions.transformed_distribution" [];
"torch.distributions.half_normal" -> "torch.distributions.transformed_distribution" [];
"torch.distributions.inverse_gamma" -> "torch.distributions.transformed_distribution" [];
"torch.distributions.kl" -> "torch.distributions.transformed_distribution" [];
"torch.distributions.kumaraswamy" -> "torch.distributions.transformed_distribution" [];
"torch.distributions.log_normal" -> "torch.distributions.transformed_distribution" [];
"torch.distributions.logistic_normal" -> "torch.distributions.transformed_distribution" [];
"torch.distributions.pareto" -> "torch.distributions.transformed_distribution" [];
"torch.distributions.relaxed_bernoulli" -> "torch.distributions.transformed_distribution" [];
"torch.distributions.relaxed_categorical" -> "torch.distributions.transformed_distribution" [];
"torch.distributions.weibull" -> "torch.distributions.transformed_distribution" [];
"torch.distributions" -> "torch.distributions.transforms" [];
"torch.distributions.constraint_registry" -> "torch.distributions.transforms" [];
"torch.distributions.gumbel" -> "torch.distributions.transforms" [];
"torch.distributions.half_cauchy" -> "torch.distributions.transforms" [];
"torch.distributions.half_normal" -> "torch.distributions.transforms" [];
"torch.distributions.inverse_gamma" -> "torch.distributions.transforms" [];
"torch.distributions.kumaraswamy" -> "torch.distributions.transforms" [];
"torch.distributions.log_normal" -> "torch.distributions.transforms" [];
"torch.distributions.logistic_normal" -> "torch.distributions.transforms" [];
"torch.distributions.pareto" -> "torch.distributions.transforms" [];
"torch.distributions.relaxed_bernoulli" -> "torch.distributions.transforms" [];
"torch.distributions.relaxed_categorical" -> "torch.distributions.transforms" [];
"torch.distributions.transformed_distribution" -> "torch.distributions.transforms" [];
"torch.distributions.weibull" -> "torch.distributions.transforms" [];
"torch.distributions" -> "torch.distributions.uniform" [];
"torch.distributions.gumbel" -> "torch.distributions.uniform" [];
"torch.distributions.kl" -> "torch.distributions.uniform" [];
"torch.distributions.kumaraswamy" -> "torch.distributions.uniform" [];
"torch.distributions.bernoulli" -> "torch.distributions.utils" [];
"torch.distributions.beta" -> "torch.distributions.utils" [];
"torch.distributions.binomial" -> "torch.distributions.utils" [];
"torch.distributions.categorical" -> "torch.distributions.utils" [];
"torch.distributions.cauchy" -> "torch.distributions.utils" [];
"torch.distributions.continuous_bernoulli" -> "torch.distributions.utils" [];
"torch.distributions.distribution" -> "torch.distributions.utils" [];
"torch.distributions.exponential" -> "torch.distributions.utils" [];
"torch.distributions.fishersnedecor" -> "torch.distributions.utils" [];
"torch.distributions.gamma" -> "torch.distributions.utils" [];
"torch.distributions.geometric" -> "torch.distributions.utils" [];
"torch.distributions.gumbel" -> "torch.distributions.utils" [];
"torch.distributions.independent" -> "torch.distributions.utils" [];
"torch.distributions.kl" -> "torch.distributions.utils" [];
"torch.distributions.kumaraswamy" -> "torch.distributions.utils" [];
"torch.distributions.laplace" -> "torch.distributions.utils" [];
"torch.distributions.lkj_cholesky" -> "torch.distributions.utils" [];
"torch.distributions.lowrank_multivariate_normal" -> "torch.distributions.utils" [];
"torch.distributions.multinomial" -> "torch.distributions.utils" [];
"torch.distributions.multivariate_normal" -> "torch.distributions.utils" [];
"torch.distributions.negative_binomial" -> "torch.distributions.utils" [];
"torch.distributions.normal" -> "torch.distributions.utils" [];
"torch.distributions.pareto" -> "torch.distributions.utils" [];
"torch.distributions.poisson" -> "torch.distributions.utils" [];
"torch.distributions.relaxed_bernoulli" -> "torch.distributions.utils" [];
"torch.distributions.relaxed_categorical" -> "torch.distributions.utils" [];
"torch.distributions.studentT" -> "torch.distributions.utils" [];
"torch.distributions.transformed_distribution" -> "torch.distributions.utils" [];
"torch.distributions.transforms" -> "torch.distributions.utils" [];
"torch.distributions.uniform" -> "torch.distributions.utils" [];
"torch.distributions.von_mises" -> "torch.distributions.utils" [];
"torch.distributions.weibull" -> "torch.distributions.utils" [];
"torch.distributions.wishart" -> "torch.distributions.utils" [];
"torch.distributions" -> "torch.distributions.von_mises" [];
"torch.distributions" -> "torch.distributions.weibull" [];
"torch.distributions" -> "torch.distributions.wishart" [];
"torch" -> "torch.export" [];
"torch.export._draft_export" -> "torch.export" [];
"torch.export._remove_auto_functionalized_pass" -> "torch.export" [];
"torch.export._unlift" -> "torch.export._remove_effect_tokens_pass" [];
"torch.export.unflatten" -> "torch.export._remove_effect_tokens_pass" [];
"torch.export._trace" -> "torch.export._safeguard" [];
"torch.export" -> "torch.export._trace" [];
"torch.export._draft_export" -> "torch.export._trace" [];
"torch.export.exported_program" -> "torch.export._trace" [];
"torch.export._unlift" -> "torch.export._tree_utils" [];
"torch.export.exported_program" -> "torch.export._tree_utils" [];
"torch.export.unflatten" -> "torch.export._tree_utils" [];
"torch.export._trace" -> "torch.export._unlift" [];
"torch.export.exported_program" -> "torch.export._unlift" [];
"torch.export" -> "torch.export.decomp_utils" [];
"torch.export.exported_program" -> "torch.export.decomp_utils" [];
"torch.export" -> "torch.export.dynamic_shapes" [];
"torch.export._draft_export" -> "torch.export.dynamic_shapes" [];
"torch.export._trace" -> "torch.export.dynamic_shapes" [];
"torch.export" -> "torch.export.exported_program" [];
"torch.export._remove_effect_tokens_pass" -> "torch.export.exported_program" [];
"torch.export._swap" -> "torch.export.exported_program" [];
"torch.export._trace" -> "torch.export.exported_program" [];
"torch.export._unlift" -> "torch.export.exported_program" [];
"torch.export.dynamic_shapes" -> "torch.export.exported_program" [];
"torch.export.unflatten" -> "torch.export.exported_program" [];
"torch.export" -> "torch.export.graph_signature" [];
"torch.export._remove_effect_tokens_pass" -> "torch.export.graph_signature" [];
"torch.export._trace" -> "torch.export.graph_signature" [];
"torch.export.exported_program" -> "torch.export.graph_signature" [];
"torch.export" -> "torch.export.unflatten" [];
"torch.export._swap" -> "torch.export.unflatten" [];
"torch.export._unlift" -> "torch.export.unflatten" [];
"torch" -> "torch.fft" [];
"torch" -> "torch.func" [];
"torch" -> "torch.functional" [];
"torch" -> "torch.futures" [];
"torch._jit_internal" -> "torch.futures" [];
"torch" -> "torch.fx" [];
"torch.fx._lazy_graph_module" -> "torch.fx._compatibility" [];
"torch.fx._symbolic_trace" -> "torch.fx._compatibility" [];
"torch.fx.annotate" -> "torch.fx._compatibility" [];
"torch.fx.graph" -> "torch.fx._compatibility" [];
"torch.fx.graph_module" -> "torch.fx._compatibility" [];
"torch.fx.immutable_collections" -> "torch.fx._compatibility" [];
"torch.fx.interpreter" -> "torch.fx._compatibility" [];
"torch.fx.node" -> "torch.fx._compatibility" [];
"torch.fx.operator_schemas" -> "torch.fx._compatibility" [];
"torch.fx.proxy" -> "torch.fx._compatibility" [];
"torch.fx.subgraph_rewriter" -> "torch.fx._compatibility" [];
"torch.fx.tensor_type" -> "torch.fx._compatibility" [];
"torch.fx.traceback" -> "torch.fx._compatibility" [];
"torch.fx._symbolic_trace" -> "torch.fx._lazy_graph_module" [];
"torch.fx.graph_module" -> "torch.fx._lazy_graph_module" [];
"torch.fx.interpreter" -> "torch.fx._lazy_graph_module" [];
"torch.fx.graph" -> "torch.fx._pytree" [];
"torch.fx" -> "torch.fx._symbolic_trace" [];
"torch.fx.graph" -> "torch.fx._symbolic_trace" [];
"torch.fx.graph_module" -> "torch.fx._symbolic_trace" [];
"torch.fx.interpreter" -> "torch.fx._symbolic_trace" [];
"torch.fx.subgraph_rewriter" -> "torch.fx._symbolic_trace" [];
"torch.fx.interpreter" -> "torch.fx.config" [];
"torch.fx.experimental.proxy_tensor" -> "torch.fx.experimental._backward_state" [];
"torch.fx.experimental.symbolic_shapes" -> "torch.fx.experimental._config" [];
"torch.fx.experimental.validator" -> "torch.fx.experimental._config" [];
"torch.fx.experimental.unify_refinements" -> "torch.fx.experimental.graph_gradual_typechecker" [];
"torch.fx.experimental.migrate_gradual_types.constraint_generator" -> "torch.fx.experimental.migrate_gradual_types.constraint" [];
"torch.fx.experimental.migrate_gradual_types.constraint_transformation" -> "torch.fx.experimental.migrate_gradual_types.constraint" [];
"torch.fx.experimental.migrate_gradual_types.transform_to_z3" -> "torch.fx.experimental.migrate_gradual_types.constraint" [];
"torch.fx.experimental.migrate_gradual_types.util" -> "torch.fx.experimental.migrate_gradual_types.constraint" [];
"torch.fx.experimental.migrate_gradual_types.constraint_transformation" -> "torch.fx.experimental.migrate_gradual_types.constraint_generator" [];
"torch.fx.experimental.migrate_gradual_types.transform_to_z3" -> "torch.fx.experimental.migrate_gradual_types.constraint_generator" [];
"torch.fx.experimental.migrate_gradual_types.transform_to_z3" -> "torch.fx.experimental.migrate_gradual_types.constraint_transformation" [];
"torch.fx.experimental.migrate_gradual_types.constraint" -> "torch.fx.experimental.migrate_gradual_types.operation" [];
"torch.fx.experimental.migrate_gradual_types.constraint_generator" -> "torch.fx.experimental.migrate_gradual_types.operation" [];
"torch.fx.experimental.migrate_gradual_types.constraint_transformation" -> "torch.fx.experimental.migrate_gradual_types.operation" [];
"torch.fx.experimental.migrate_gradual_types.transform_to_z3" -> "torch.fx.experimental.migrate_gradual_types.operation" [];
"torch.fx.experimental.migrate_gradual_types.util" -> "torch.fx.experimental.migrate_gradual_types.operation" [];
"torch.fx.experimental.migrate_gradual_types.constraint_generator" -> "torch.fx.experimental.migrate_gradual_types.util" [];
"torch.fx.experimental.migrate_gradual_types.constraint_transformation" -> "torch.fx.experimental.migrate_gradual_types.util" [];
"torch.fx.experimental.migrate_gradual_types.transform_to_z3" -> "torch.fx.experimental.migrate_gradual_types.z3_types" [];
"torch.fx.experimental.accelerator_partitioner" -> "torch.fx.experimental.partitioner_utils" [];
"torch._ops" -> "torch.fx.experimental.proxy_tensor" [];
"torch.fx.experimental.sym_node" -> "torch.fx.experimental.proxy_tensor" [];
"torch.fx.graph" -> "torch.fx.experimental.proxy_tensor" [];
"torch.fx.experimental.symbolic_shapes" -> "torch.fx.experimental.recording" [];
"torch.fx.experimental.validator" -> "torch.fx.experimental.recording" [];
"torch.fx.experimental.graph_gradual_typechecker" -> "torch.fx.experimental.refinement_types" [];
"torch.fx.experimental.normalize" -> "torch.fx.experimental.schema_type_annotation" [];
"torch" -> "torch.fx.experimental.sym_node" [];
"torch.fx.experimental.proxy_tensor" -> "torch.fx.experimental.sym_node" [];
"torch.fx.experimental.symbolic_shapes" -> "torch.fx.experimental.sym_node" [];
"torch" -> "torch.fx.experimental.symbolic_shapes" [];
"torch._meta_registrations" -> "torch.fx.experimental.symbolic_shapes" [];
"torch.functional" -> "torch.fx.experimental.symbolic_shapes" [];
"torch.fx.experimental.proxy_tensor" -> "torch.fx.experimental.symbolic_shapes" [];
"torch.fx.experimental.recording" -> "torch.fx.experimental.symbolic_shapes" [];
"torch.fx.experimental.sym_node" -> "torch.fx.experimental.symbolic_shapes" [];
"torch.fx.experimental.validator" -> "torch.fx.experimental.symbolic_shapes" [];
"torch.fx.experimental.graph_gradual_typechecker" -> "torch.fx.experimental.unification" [];
"torch.fx.experimental.unify_refinements" -> "torch.fx.experimental.unification" [];
"torch.fx.tensor_type" -> "torch.fx.experimental.unification" [];
"torch.fx.experimental.unification" -> "torch.fx.experimental.unification.core" [];
"torch.fx.experimental.unification.match" -> "torch.fx.experimental.unification.core" [];
"torch.fx.experimental.unification.more" -> "torch.fx.experimental.unification.core" [];
"torch.fx.experimental.unification.core" -> "torch.fx.experimental.unification.dispatch" [];
"torch.fx.experimental.unification.more" -> "torch.fx.experimental.unification.dispatch" [];
"torch.fx.experimental.unification.variable" -> "torch.fx.experimental.unification.dispatch" [];
"torch.fx.experimental.unification" -> "torch.fx.experimental.unification.more" [];
"torch.fx.experimental.unification.dispatch" -> "torch.fx.experimental.unification.multipledispatch" [];
"torch.fx.experimental.unification.multipledispatch.dispatcher" -> "torch.fx.experimental.unification.multipledispatch.conflict" [];
"torch.fx.experimental.unification.multipledispatch" -> "torch.fx.experimental.unification.multipledispatch.core" [];
"torch.fx.experimental.unification.multipledispatch" -> "torch.fx.experimental.unification.multipledispatch.dispatcher" [];
"torch.fx.experimental.unification.multipledispatch.core" -> "torch.fx.experimental.unification.multipledispatch.dispatcher" [];
"torch.fx.experimental.unification.multipledispatch.conflict" -> "torch.fx.experimental.unification.multipledispatch.utils" [];
"torch.fx.experimental.unification.multipledispatch.dispatcher" -> "torch.fx.experimental.unification.multipledispatch.utils" [];
"torch.fx.experimental.unification.multipledispatch.variadic" -> "torch.fx.experimental.unification.multipledispatch.utils" [];
"torch.fx.experimental.unification.multipledispatch.conflict" -> "torch.fx.experimental.unification.multipledispatch.variadic" [];
"torch.fx.experimental.unification.multipledispatch.dispatcher" -> "torch.fx.experimental.unification.multipledispatch.variadic" [];
"torch.fx.experimental.unification.core" -> "torch.fx.experimental.unification.unification_tools" [];
"torch.fx.experimental.unification.match" -> "torch.fx.experimental.unification.unification_tools" [];
"torch.fx.experimental.unification.core" -> "torch.fx.experimental.unification.utils" [];
"torch.fx.experimental.unification.match" -> "torch.fx.experimental.unification.utils" [];
"torch.fx.experimental.unification.variable" -> "torch.fx.experimental.unification.utils" [];
"torch.fx.experimental.unification" -> "torch.fx.experimental.unification.variable" [];
"torch.fx.experimental.unification.core" -> "torch.fx.experimental.unification.variable" [];
"torch.fx.experimental.unification.match" -> "torch.fx.experimental.unification.variable" [];
"torch.fx.experimental.symbolic_shapes" -> "torch.fx.experimental.validator" [];
"torch.fx" -> "torch.fx.graph" [];
"torch.fx._symbolic_trace" -> "torch.fx.graph" [];
"torch.fx.graph_module" -> "torch.fx.graph" [];
"torch.fx.interpreter" -> "torch.fx.graph" [];
"torch.fx.node" -> "torch.fx.graph" [];
"torch.fx.proxy" -> "torch.fx.graph" [];
"torch.fx.subgraph_rewriter" -> "torch.fx.graph" [];
"torch.fx.traceback" -> "torch.fx.graph" [];
"torch.fx" -> "torch.fx.graph_module" [];
"torch.fx._lazy_graph_module" -> "torch.fx.graph_module" [];
"torch.fx._symbolic_trace" -> "torch.fx.graph_module" [];
"torch.fx.graph" -> "torch.fx.graph_module" [];
"torch.fx.interpreter" -> "torch.fx.graph_module" [];
"torch.fx.subgraph_rewriter" -> "torch.fx.graph_module" [];
"torch.fx.node" -> "torch.fx.immutable_collections" [];
"torch.fx" -> "torch.fx.interpreter" [];
"torch.fx" -> "torch.fx.node" [];
"torch.fx._symbolic_trace" -> "torch.fx.node" [];
"torch.fx.graph" -> "torch.fx.node" [];
"torch.fx.interpreter" -> "torch.fx.node" [];
"torch.fx.operator_schemas" -> "torch.fx.node" [];
"torch.fx.proxy" -> "torch.fx.node" [];
"torch.fx.subgraph_rewriter" -> "torch.fx.node" [];
"torch.fx.traceback" -> "torch.fx.node" [];
"torch.fx.node" -> "torch.fx.operator_schemas" [];
"torch.fx.proxy" -> "torch.fx.operator_schemas" [];
"torch.fx.passes" -> "torch.fx.passes.graph_drawer" [];
"torch.fx.passes.graph_transform_observer" -> "torch.fx.passes.graph_drawer" [];
"torch.fx.passes.splitter_base" -> "torch.fx.passes.graph_drawer" [];
"torch.fx.passes" -> "torch.fx.passes.graph_manipulation" [];
"torch.fx.passes.splitter_base" -> "torch.fx.passes.graph_manipulation" [];
"torch.fx.passes.infra.pass_manager" -> "torch.fx.passes.infra.pass_base" [];
"torch.fx.passes.infra" -> "torch.fx.passes.infra.pass_manager" [];
"torch.fx.passes" -> "torch.fx.passes.net_min_base" [];
"torch.fx.passes" -> "torch.fx.passes.operator_support" [];
"torch.fx.passes.splitter_base" -> "torch.fx.passes.operator_support" [];
"torch.fx.passes" -> "torch.fx.passes.param_fetch" [];
"torch.fx.passes" -> "torch.fx.passes.reinplace" [];
"torch.fx.passes" -> "torch.fx.passes.runtime_assert" [];
"torch.fx.passes._tensorify_python_scalars" -> "torch.fx.passes.runtime_assert" [];
"torch.fx.graph" -> "torch.fx.passes.shape_prop" [];
"torch.fx.passes" -> "torch.fx.passes.shape_prop" [];
"torch.fx.passes.graph_drawer" -> "torch.fx.passes.shape_prop" [];
"torch.fx.passes.graph_manipulation" -> "torch.fx.passes.shape_prop" [];
"torch.fx.passes.net_min_base" -> "torch.fx.passes.shape_prop" [];
"torch.fx.passes.operator_support" -> "torch.fx.passes.shape_prop" [];
"torch.fx.passes.splitter_base" -> "torch.fx.passes.shape_prop" [];
"torch.fx.passes" -> "torch.fx.passes.split_module" [];
"torch.fx.passes" -> "torch.fx.passes.split_utils" [];
"torch.fx.passes.net_min_base" -> "torch.fx.passes.split_utils" [];
"torch.fx.passes.splitter_base" -> "torch.fx.passes.split_utils" [];
"torch.fx.passes" -> "torch.fx.passes.splitter_base" [];
"torch.fx.passes" -> "torch.fx.passes.tools_common" [];
"torch.fx.passes.net_min_base" -> "torch.fx.passes.tools_common" [];
"torch.fx.passes.operator_support" -> "torch.fx.passes.tools_common" [];
"torch.fx.passes.split_utils" -> "torch.fx.passes.tools_common" [];
"torch.fx.passes.splitter_base" -> "torch.fx.passes.tools_common" [];
"torch.fx.passes.split_utils" -> "torch.fx.passes.utils" [];
"torch.fx.passes.utils.fuser_utils" -> "torch.fx.passes.utils" [];
"torch.fx.passes.utils" -> "torch.fx.passes.utils.common" [];
"torch.fx.passes.utils.matcher_utils" -> "torch.fx.passes.utils.fuser_utils" [];
"torch.fx.passes.utils.common" -> "torch.fx.passes.utils.matcher_utils" [];
"torch.fx.passes.utils.matcher_with_name_node_map_utils" -> "torch.fx.passes.utils.matcher_utils" [];
"torch.fx.subgraph_rewriter" -> "torch.fx.passes.utils.matcher_utils" [];
"torch.fx.subgraph_rewriter" -> "torch.fx.passes.utils.matcher_with_name_node_map_utils" [];
"torch.fx" -> "torch.fx.proxy" [];
"torch.fx._symbolic_trace" -> "torch.fx.proxy" [];
"torch.fx.annotate" -> "torch.fx.proxy" [];
"torch.fx.interpreter" -> "torch.fx.proxy" [];
"torch.fx" -> "torch.fx.subgraph_rewriter" [];
"torch.fx.interpreter" -> "torch.fx.traceback" [];
"torch.fx.proxy" -> "torch.fx.traceback" [];
"torch" -> "torch.hub" [];
"torch" -> "torch.jit" [];
"torch.jit.supported_ops" -> "torch.jit" [];
"torch.jit.unsupported_tensor_ops" -> "torch.jit" [];
"torch.jit" -> "torch.jit._async" [];
"torch.jit" -> "torch.jit._await" [];
"torch.jit._async" -> "torch.jit._builtins" [];
"torch.jit._await" -> "torch.jit._builtins" [];
"torch.jit._recursive" -> "torch.jit._builtins" [];
"torch.jit._script" -> "torch.jit._builtins" [];
"torch.jit.supported_ops" -> "torch.jit._builtins" [];
"torch.jit._recursive" -> "torch.jit._check" [];
"torch.jit.frontend" -> "torch.jit._dataclass_impls" [];
"torch.jit" -> "torch.jit._decomposition_utils" [];
"torch.jit" -> "torch.jit._freeze" [];
"torch.jit" -> "torch.jit._fuser" [];
"torch.jit._script" -> "torch.jit._fuser" [];
"torch.jit" -> "torch.jit._ir_utils" [];
"torch.jit._script" -> "torch.jit._monkeytype_config" [];
"torch.jit.frontend" -> "torch.jit._monkeytype_config" [];
"torch.jit._script" -> "torch.jit._recursive" [];
"torch.jit._serialization" -> "torch.jit._recursive" [];
"torch.jit" -> "torch.jit._script" [];
"torch.jit._freeze" -> "torch.jit._script" [];
"torch.jit._trace" -> "torch.jit._script" [];
"torch.jit" -> "torch.jit._serialization" [];
"torch.jit._script" -> "torch.jit._serialization" [];
"torch.jit._recursive" -> "torch.jit._state" [];
"torch.jit._script" -> "torch.jit._state" [];
"torch.jit._trace" -> "torch.jit._state" [];
"torch.jit.annotations" -> "torch.jit._state" [];
"torch.jit" -> "torch.jit._trace" [];
"torch.jit.frontend" -> "torch.jit.annotations" [];
"torch.jit._recursive" -> "torch.jit.frontend" [];
"torch.jit._script" -> "torch.jit.frontend" [];
"torch" -> "torch.library" [];
"torch._custom_ops" -> "torch.library" [];
"torch" -> "torch.linalg" [];
"torch" -> "torch.masked" [];
"torch.masked._ops" -> "torch.masked._docs" [];
"torch.masked" -> "torch.masked._ops" [];
"torch.masked.maskedtensor.core" -> "torch.masked.maskedtensor._ops_refs" [];
"torch.masked.maskedtensor" -> "torch.masked.maskedtensor.binary" [];
"torch.masked.maskedtensor._ops_refs" -> "torch.masked.maskedtensor.binary" [];
"torch.masked" -> "torch.masked.maskedtensor.core" [];
"torch.masked._ops" -> "torch.masked.maskedtensor.core" [];
"torch.masked.maskedtensor" -> "torch.masked.maskedtensor.core" [];
"torch.masked.maskedtensor._ops_refs" -> "torch.masked.maskedtensor.core" [];
"torch.masked.maskedtensor.binary" -> "torch.masked.maskedtensor.core" [];
"torch.masked.maskedtensor.creation" -> "torch.masked.maskedtensor.core" [];
"torch.masked.maskedtensor.passthrough" -> "torch.masked.maskedtensor.core" [];
"torch.masked.maskedtensor.reductions" -> "torch.masked.maskedtensor.core" [];
"torch.masked.maskedtensor.unary" -> "torch.masked.maskedtensor.core" [];
"torch.masked" -> "torch.masked.maskedtensor.creation" [];
"torch.masked._ops" -> "torch.masked.maskedtensor.creation" [];
"torch.masked.maskedtensor.reductions" -> "torch.masked.maskedtensor.creation" [];
"torch.masked.maskedtensor" -> "torch.masked.maskedtensor.passthrough" [];
"torch.masked.maskedtensor._ops_refs" -> "torch.masked.maskedtensor.passthrough" [];
"torch.masked.maskedtensor" -> "torch.masked.maskedtensor.reductions" [];
"torch.masked.maskedtensor._ops_refs" -> "torch.masked.maskedtensor.reductions" [];
"torch.masked.maskedtensor" -> "torch.masked.maskedtensor.unary" [];
"torch.masked.maskedtensor._ops_refs" -> "torch.masked.maskedtensor.unary" [];
"torch" -> "torch.mps" [];
"torch.random" -> "torch.mps" [];
"torch.mps" -> "torch.mps.event" [];
"torch.mps" -> "torch.mps.profiler" [];
"torch" -> "torch.mtia" [];
"torch.mtia.memory" -> "torch.mtia" [];
"torch.mtia" -> "torch.mtia._utils" [];
"torch.mtia.memory" -> "torch.mtia._utils" [];
"torch.mtia" -> "torch.mtia.memory" [];
"torch" -> "torch.multiprocessing" [];
"torch.multiprocessing.reductions" -> "torch.multiprocessing" [];
"torch.multiprocessing.spawn" -> "torch.multiprocessing" [];
"torch.storage" -> "torch.multiprocessing" [];
"torch" -> "torch.multiprocessing._atfork" [];
"torch.multiprocessing.pool" -> "torch.multiprocessing.queue" [];
"torch.multiprocessing" -> "torch.multiprocessing.reductions" [];
"torch.multiprocessing" -> "torch.multiprocessing.spawn" [];
"torch" -> "torch.nested" [];
"torch.nested._internal.nested_tensor" -> "torch.nested._internal.nested_int" [];
"torch.nested" -> "torch.nested._internal.nested_tensor" [];
"torch.nested._internal.ops" -> "torch.nested._internal.nested_tensor" [];
"torch.nested._internal.sdpa" -> "torch.nested._internal.nested_tensor" [];
"torch.nested._internal.nested_tensor" -> "torch.nested._internal.ops" [];
"torch.nested._internal.ops" -> "torch.nested._internal.sdpa" [];
"torch" -> "torch.nn" [];
"torch.nn.cpp" -> "torch.nn" [];
"torch.serialization" -> "torch.nn" [];
"torch.nn.functional" -> "torch.nn._reduction" [];
"torch.nn" -> "torch.nn.attention" [];
"torch.nn.attention.bias" -> "torch.nn.attention" [];
"torch.nn.attention.bias" -> "torch.nn.attention._utils" [];
"torch.nn.attention.flex_attention" -> "torch.nn.attention._utils" [];
"torch.functional" -> "torch.nn.functional" [];
"torch.nn" -> "torch.nn.functional" [];
"torch.nn.functional" -> "torch.nn.grad" [];
"torch.nn" -> "torch.nn.init" [];
"torch" -> "torch.nn.intrinsic" [];
"torch.nn.intrinsic" -> "torch.nn.intrinsic.modules" [];
"torch.nn.intrinsic.modules" -> "torch.nn.intrinsic.modules.fused" [];
"torch.nn.intrinsic" -> "torch.nn.intrinsic.qat" [];
"torch.nn.intrinsic.qat" -> "torch.nn.intrinsic.qat.modules" [];
"torch.nn.intrinsic.qat.modules" -> "torch.nn.intrinsic.qat.modules.conv_fused" [];
"torch.nn.intrinsic.qat.modules" -> "torch.nn.intrinsic.qat.modules.linear_fused" [];
"torch.nn.intrinsic.qat.modules" -> "torch.nn.intrinsic.qat.modules.linear_relu" [];
"torch.nn.intrinsic" -> "torch.nn.intrinsic.quantized" [];
"torch.nn.intrinsic.quantized" -> "torch.nn.intrinsic.quantized.dynamic" [];
"torch.nn.intrinsic.quantized.dynamic" -> "torch.nn.intrinsic.quantized.dynamic.modules" [];
"torch.nn.intrinsic.quantized.dynamic.modules" -> "torch.nn.intrinsic.quantized.dynamic.modules.linear_relu" [];
"torch.nn.intrinsic.quantized" -> "torch.nn.intrinsic.quantized.modules" [];
"torch.nn.intrinsic.quantized.modules" -> "torch.nn.intrinsic.quantized.modules.bn_relu" [];
"torch.nn.intrinsic.quantized.modules" -> "torch.nn.intrinsic.quantized.modules.conv_relu" [];
"torch.nn.intrinsic.quantized.modules" -> "torch.nn.intrinsic.quantized.modules.linear_relu" [];
"torch.nn" -> "torch.nn.modules" [];
"torch.nn.modules.batchnorm" -> "torch.nn.modules._functions" [];
"torch.nn.modules.normalization" -> "torch.nn.modules._functions" [];
"torch.nn.modules" -> "torch.nn.modules.activation" [];
"torch.nn.modules.transformer" -> "torch.nn.modules.activation" [];
"torch.nn.modules" -> "torch.nn.modules.adaptive" [];
"torch.nn.modules" -> "torch.nn.modules.batchnorm" [];
"torch.nn.modules.instancenorm" -> "torch.nn.modules.batchnorm" [];
"torch.nn.modules" -> "torch.nn.modules.channelshuffle" [];
"torch.nn.modules" -> "torch.nn.modules.container" [];
"torch.nn.modules.adaptive" -> "torch.nn.modules.container" [];
"torch.nn.modules.transformer" -> "torch.nn.modules.container" [];
"torch.nn.modules" -> "torch.nn.modules.conv" [];
"torch.nn.modules" -> "torch.nn.modules.distance" [];
"torch.nn.modules.loss" -> "torch.nn.modules.distance" [];
"torch.nn.modules" -> "torch.nn.modules.dropout" [];
"torch.nn.modules.transformer" -> "torch.nn.modules.dropout" [];
"torch.nn.modules" -> "torch.nn.modules.flatten" [];
"torch.nn.modules" -> "torch.nn.modules.fold" [];
"torch.nn.modules" -> "torch.nn.modules.instancenorm" [];
"torch.nn.modules.batchnorm" -> "torch.nn.modules.lazy" [];
"torch.nn.modules.conv" -> "torch.nn.modules.lazy" [];
"torch.nn.modules.linear" -> "torch.nn.modules.lazy" [];
"torch.nn.modules" -> "torch.nn.modules.linear" [];
"torch.nn.modules.activation" -> "torch.nn.modules.linear" [];
"torch.nn.modules.adaptive" -> "torch.nn.modules.linear" [];
"torch.nn.modules.transformer" -> "torch.nn.modules.linear" [];
"torch.nn.modules" -> "torch.nn.modules.loss" [];
"torch.nn.modules" -> "torch.nn.modules.module" [];
"torch.nn.modules.activation" -> "torch.nn.modules.module" [];
"torch.nn.modules.adaptive" -> "torch.nn.modules.module" [];
"torch.nn.modules.batchnorm" -> "torch.nn.modules.module" [];
"torch.nn.modules.channelshuffle" -> "torch.nn.modules.module" [];
"torch.nn.modules.container" -> "torch.nn.modules.module" [];
"torch.nn.modules.conv" -> "torch.nn.modules.module" [];
"torch.nn.modules.distance" -> "torch.nn.modules.module" [];
"torch.nn.modules.dropout" -> "torch.nn.modules.module" [];
"torch.nn.modules.flatten" -> "torch.nn.modules.module" [];
"torch.nn.modules.fold" -> "torch.nn.modules.module" [];
"torch.nn.modules.linear" -> "torch.nn.modules.module" [];
"torch.nn.modules.loss" -> "torch.nn.modules.module" [];
"torch.nn.modules.normalization" -> "torch.nn.modules.module" [];
"torch.nn.modules.padding" -> "torch.nn.modules.module" [];
"torch.nn.modules.pixelshuffle" -> "torch.nn.modules.module" [];
"torch.nn.modules.pooling" -> "torch.nn.modules.module" [];
"torch.nn.modules.rnn" -> "torch.nn.modules.module" [];
"torch.nn.modules.sparse" -> "torch.nn.modules.module" [];
"torch.nn.modules.transformer" -> "torch.nn.modules.module" [];
"torch.nn.modules.upsampling" -> "torch.nn.modules.module" [];
"torch.nn.modules" -> "torch.nn.modules.normalization" [];
"torch.nn.modules.transformer" -> "torch.nn.modules.normalization" [];
"torch.nn.modules" -> "torch.nn.modules.padding" [];
"torch.nn.modules" -> "torch.nn.modules.pixelshuffle" [];
"torch.nn.modules" -> "torch.nn.modules.pooling" [];
"torch.nn.modules" -> "torch.nn.modules.rnn" [];
"torch.nn.modules" -> "torch.nn.modules.sparse" [];
"torch.nn.modules" -> "torch.nn.modules.transformer" [];
"torch.nn.modules" -> "torch.nn.modules.upsampling" [];
"torch.nn.functional" -> "torch.nn.modules.utils" [];
"torch.nn.grad" -> "torch.nn.modules.utils" [];
"torch.nn.modules.conv" -> "torch.nn.modules.utils" [];
"torch.nn.modules.padding" -> "torch.nn.modules.utils" [];
"torch.nn.modules.pooling" -> "torch.nn.modules.utils" [];
"torch.nn" -> "torch.nn.parallel" [];
"torch.nn.parallel.replicate" -> "torch.nn.parallel._functions" [];
"torch.nn.parallel.scatter_gather" -> "torch.nn.parallel._functions" [];
"torch.nn.parallel._functions" -> "torch.nn.parallel.comm" [];
"torch.nn.parallel.replicate" -> "torch.nn.parallel.comm" [];
"torch.nn.parallel" -> "torch.nn.parallel.data_parallel" [];
"torch.nn.parallel" -> "torch.nn.parallel.distributed" [];
"torch.nn.parallel" -> "torch.nn.parallel.parallel_apply" [];
"torch.nn.parallel.data_parallel" -> "torch.nn.parallel.parallel_apply" [];
"torch.nn.parallel" -> "torch.nn.parallel.replicate" [];
"torch.nn.parallel.data_parallel" -> "torch.nn.parallel.replicate" [];
"torch.nn.parallel" -> "torch.nn.parallel.scatter_gather" [];
"torch.nn.parallel.data_parallel" -> "torch.nn.parallel.scatter_gather" [];
"torch.nn.parallel.distributed" -> "torch.nn.parallel.scatter_gather" [];
"torch.nn" -> "torch.nn.parameter" [];
"torch" -> "torch.nn.qat" [];
"torch.nn.qat" -> "torch.nn.qat.dynamic" [];
"torch.nn.qat.dynamic" -> "torch.nn.qat.dynamic.modules" [];
"torch.nn.qat.dynamic.modules" -> "torch.nn.qat.dynamic.modules.linear" [];
"torch.nn.qat" -> "torch.nn.qat.modules" [];
"torch.nn.qat.modules" -> "torch.nn.qat.modules.conv" [];
"torch.nn.qat.modules" -> "torch.nn.qat.modules.embedding_ops" [];
"torch.nn.qat.modules" -> "torch.nn.qat.modules.linear" [];
"torch" -> "torch.nn.quantizable" [];
"torch.nn.quantizable" -> "torch.nn.quantizable.modules" [];
"torch" -> "torch.nn.quantized" [];
"torch.nn.quantized._reference" -> "torch.nn.quantized._reference.modules" [];
"torch.nn.quantized" -> "torch.nn.quantized.dynamic" [];
"torch.nn.quantized" -> "torch.nn.quantized.functional" [];
"torch.nn.quantized" -> "torch.nn.quantized.modules" [];
"torch.nn" -> "torch.nn.utils" [];
"torch.nn.utils._expanded_weights" -> "torch.nn.utils._expanded_weights.conv_expanded_weights" [];
"torch.nn.utils._expanded_weights.conv_expanded_weights" -> "torch.nn.utils._expanded_weights.conv_utils" [];
"torch.nn.utils._expanded_weights" -> "torch.nn.utils._expanded_weights.embedding_expanded_weights" [];
"torch.nn.utils._expanded_weights" -> "torch.nn.utils._expanded_weights.expanded_weights_impl" [];
"torch.nn.utils._expanded_weights.conv_expanded_weights" -> "torch.nn.utils._expanded_weights.expanded_weights_impl" [];
"torch.nn.utils._expanded_weights.embedding_expanded_weights" -> "torch.nn.utils._expanded_weights.expanded_weights_impl" [];
"torch.nn.utils._expanded_weights.expanded_weights_utils" -> "torch.nn.utils._expanded_weights.expanded_weights_impl" [];
"torch.nn.utils._expanded_weights.group_norm_expanded_weights" -> "torch.nn.utils._expanded_weights.expanded_weights_impl" [];
"torch.nn.utils._expanded_weights.instance_norm_expanded_weights" -> "torch.nn.utils._expanded_weights.expanded_weights_impl" [];
"torch.nn.utils._expanded_weights.layer_norm_expanded_weights" -> "torch.nn.utils._expanded_weights.expanded_weights_impl" [];
"torch.nn.utils._expanded_weights.linear_expanded_weights" -> "torch.nn.utils._expanded_weights.expanded_weights_impl" [];
"torch.nn.utils._per_sample_grad" -> "torch.nn.utils._expanded_weights.expanded_weights_impl" [];
"torch.nn.utils._expanded_weights.conv_expanded_weights" -> "torch.nn.utils._expanded_weights.expanded_weights_utils" [];
"torch.nn.utils._expanded_weights.conv_utils" -> "torch.nn.utils._expanded_weights.expanded_weights_utils" [];
"torch.nn.utils._expanded_weights.embedding_expanded_weights" -> "torch.nn.utils._expanded_weights.expanded_weights_utils" [];
"torch.nn.utils._expanded_weights.group_norm_expanded_weights" -> "torch.nn.utils._expanded_weights.expanded_weights_utils" [];
"torch.nn.utils._expanded_weights.instance_norm_expanded_weights" -> "torch.nn.utils._expanded_weights.expanded_weights_utils" [];
"torch.nn.utils._expanded_weights.layer_norm_expanded_weights" -> "torch.nn.utils._expanded_weights.expanded_weights_utils" [];
"torch.nn.utils._expanded_weights.linear_expanded_weights" -> "torch.nn.utils._expanded_weights.expanded_weights_utils" [];
"torch.nn.utils._expanded_weights" -> "torch.nn.utils._expanded_weights.group_norm_expanded_weights" [];
"torch.nn.utils._expanded_weights" -> "torch.nn.utils._expanded_weights.instance_norm_expanded_weights" [];
"torch.nn.utils._expanded_weights" -> "torch.nn.utils._expanded_weights.layer_norm_expanded_weights" [];
"torch.nn.utils._expanded_weights" -> "torch.nn.utils._expanded_weights.linear_expanded_weights" [];
"torch.nn.utils.stateless" -> "torch.nn.utils._named_member_accessor" [];
"torch.nn.utils" -> "torch.nn.utils.clip_grad" [];
"torch.nn.utils" -> "torch.nn.utils.convert_parameters" [];
"torch.nn.utils" -> "torch.nn.utils.fusion" [];
"torch.nn.utils" -> "torch.nn.utils.init" [];
"torch.nn.utils" -> "torch.nn.utils.memory_format" [];
"torch.nn.utils" -> "torch.nn.utils.parametrizations" [];
"torch.nn.utils.parametrizations" -> "torch.nn.utils.parametrize" [];
"torch.nn.utils" -> "torch.nn.utils.rnn" [];
"torch.nn.utils" -> "torch.nn.utils.spectral_norm" [];
"torch.nn.utils" -> "torch.nn.utils.stateless" [];
"torch.nn.utils" -> "torch.nn.utils.weight_norm" [];
"torch" -> "torch.onnx" [];
"torch.onnx.symbolic_opset10" -> "torch.onnx" [];
"torch.onnx.symbolic_opset9" -> "torch.onnx" [];
"torch.onnx._globals" -> "torch.onnx._constants" [];
"torch.onnx._onnx_supported_ops" -> "torch.onnx._constants" [];
"torch.onnx.errors" -> "torch.onnx._constants" [];
"torch.onnx.symbolic_helper" -> "torch.onnx._constants" [];
"torch.onnx.symbolic_opset10" -> "torch.onnx._constants" [];
"torch.onnx.symbolic_opset13" -> "torch.onnx._constants" [];
"torch.onnx.symbolic_opset14" -> "torch.onnx._constants" [];
"torch.onnx.symbolic_opset9" -> "torch.onnx._constants" [];
"torch.onnx.utils" -> "torch.onnx._constants" [];
"torch.onnx.verification" -> "torch.onnx._constants" [];
"torch.onnx.symbolic_opset9" -> "torch.onnx._deprecation" [];
"torch.onnx.utils" -> "torch.onnx._deprecation" [];
"torch.onnx.verification" -> "torch.onnx._experimental" [];
"torch.onnx" -> "torch.onnx._flags" [];
"torch.onnx.symbolic_helper" -> "torch.onnx._globals" [];
"torch.onnx.symbolic_opset10" -> "torch.onnx._globals" [];
"torch.onnx.symbolic_opset14" -> "torch.onnx._globals" [];
"torch.onnx.symbolic_opset9" -> "torch.onnx._globals" [];
"torch.onnx.utils" -> "torch.onnx._globals" [];
"torch.onnx.verification" -> "torch.onnx._globals" [];
"torch.onnx._internal.onnxruntime" -> "torch.onnx._internal" [];
"torch.onnx" -> "torch.onnx._internal._exporter_legacy" [];
"torch.onnx._internal.onnxruntime" -> "torch.onnx._internal._exporter_legacy" [];
"torch.onnx._internal._exporter_legacy" -> "torch.onnx._internal._lazy_import" [];
"torch.onnx._internal.onnxruntime" -> "torch.onnx._internal.diagnostics" [];
"torch.onnx.errors" -> "torch.onnx._internal.diagnostics" [];
"torch.onnx.utils" -> "torch.onnx._internal.diagnostics" [];
"torch.onnx._internal.diagnostics" -> "torch.onnx._internal.diagnostics._diagnostic" [];
"torch.onnx._internal.diagnostics" -> "torch.onnx._internal.diagnostics._rules" [];
"torch.onnx._internal._exporter_legacy" -> "torch.onnx._internal.diagnostics.infra" [];
"torch.onnx._internal.diagnostics" -> "torch.onnx._internal.diagnostics.infra" [];
"torch.onnx._internal.diagnostics._diagnostic" -> "torch.onnx._internal.diagnostics.infra" [];
"torch.onnx._internal.diagnostics._rules" -> "torch.onnx._internal.diagnostics.infra" [];
"torch.onnx._internal.diagnostics.infra.context" -> "torch.onnx._internal.diagnostics.infra" [];
"torch.onnx._internal.diagnostics.infra.decorator" -> "torch.onnx._internal.diagnostics.infra" [];
"torch.onnx._internal.diagnostics.infra" -> "torch.onnx._internal.diagnostics.infra._infra" [];
"torch.onnx._internal.diagnostics.infra.utils" -> "torch.onnx._internal.diagnostics.infra._infra" [];
"torch.onnx._internal.diagnostics.infra" -> "torch.onnx._internal.diagnostics.infra.context" [];
"torch.onnx._internal.diagnostics._diagnostic" -> "torch.onnx._internal.diagnostics.infra.formatter" [];
"torch.onnx._internal.diagnostics.infra._infra" -> "torch.onnx._internal.diagnostics.infra.formatter" [];
"torch.onnx._internal.diagnostics.infra.context" -> "torch.onnx._internal.diagnostics.infra.formatter" [];
"torch.onnx._internal.diagnostics.infra.decorator" -> "torch.onnx._internal.diagnostics.infra.formatter" [];
"torch.onnx._internal.diagnostics.infra.utils" -> "torch.onnx._internal.diagnostics.infra.formatter" [];
"torch.onnx._internal.diagnostics._diagnostic" -> "torch.onnx._internal.diagnostics.infra.sarif" [];
"torch.onnx._internal.diagnostics.infra._infra" -> "torch.onnx._internal.diagnostics.infra.sarif" [];
"torch.onnx._internal.diagnostics.infra.context" -> "torch.onnx._internal.diagnostics.infra.sarif" [];
"torch.onnx._internal.diagnostics.infra.formatter" -> "torch.onnx._internal.diagnostics.infra.sarif" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._address" [];
"torch.onnx._internal.diagnostics.infra.sarif._external_properties" -> "torch.onnx._internal.diagnostics.infra.sarif._address" [];
"torch.onnx._internal.diagnostics.infra.sarif._physical_location" -> "torch.onnx._internal.diagnostics.infra.sarif._address" [];
"torch.onnx._internal.diagnostics.infra.sarif._run" -> "torch.onnx._internal.diagnostics.infra.sarif._address" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._artifact" [];
"torch.onnx._internal.diagnostics.infra.sarif._external_properties" -> "torch.onnx._internal.diagnostics.infra.sarif._artifact" [];
"torch.onnx._internal.diagnostics.infra.sarif._run" -> "torch.onnx._internal.diagnostics.infra.sarif._artifact" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._artifact_change" [];
"torch.onnx._internal.diagnostics.infra.sarif._fix" -> "torch.onnx._internal.diagnostics.infra.sarif._artifact_change" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._artifact_content" [];
"torch.onnx._internal.diagnostics.infra.sarif._artifact" -> "torch.onnx._internal.diagnostics.infra.sarif._artifact_content" [];
"torch.onnx._internal.diagnostics.infra.sarif._region" -> "torch.onnx._internal.diagnostics.infra.sarif._artifact_content" [];
"torch.onnx._internal.diagnostics.infra.sarif._replacement" -> "torch.onnx._internal.diagnostics.infra.sarif._artifact_content" [];
"torch.onnx._internal.diagnostics.infra.sarif._web_request" -> "torch.onnx._internal.diagnostics.infra.sarif._artifact_content" [];
"torch.onnx._internal.diagnostics.infra.sarif._web_response" -> "torch.onnx._internal.diagnostics.infra.sarif._artifact_content" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._artifact_location" [];
"torch.onnx._internal.diagnostics.infra.sarif._artifact" -> "torch.onnx._internal.diagnostics.infra.sarif._artifact_location" [];
"torch.onnx._internal.diagnostics.infra.sarif._artifact_change" -> "torch.onnx._internal.diagnostics.infra.sarif._artifact_location" [];
"torch.onnx._internal.diagnostics.infra.sarif._attachment" -> "torch.onnx._internal.diagnostics.infra.sarif._artifact_location" [];
"torch.onnx._internal.diagnostics.infra.sarif._conversion" -> "torch.onnx._internal.diagnostics.infra.sarif._artifact_location" [];
"torch.onnx._internal.diagnostics.infra.sarif._external_property_file_reference" -> "torch.onnx._internal.diagnostics.infra.sarif._artifact_location" [];
"torch.onnx._internal.diagnostics.infra.sarif._invocation" -> "torch.onnx._internal.diagnostics.infra.sarif._artifact_location" [];
"torch.onnx._internal.diagnostics.infra.sarif._physical_location" -> "torch.onnx._internal.diagnostics.infra.sarif._artifact_location" [];
"torch.onnx._internal.diagnostics.infra.sarif._result" -> "torch.onnx._internal.diagnostics.infra.sarif._artifact_location" [];
"torch.onnx._internal.diagnostics.infra.sarif._special_locations" -> "torch.onnx._internal.diagnostics.infra.sarif._artifact_location" [];
"torch.onnx._internal.diagnostics.infra.sarif._tool_component" -> "torch.onnx._internal.diagnostics.infra.sarif._artifact_location" [];
"torch.onnx._internal.diagnostics.infra.sarif._version_control_details" -> "torch.onnx._internal.diagnostics.infra.sarif._artifact_location" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._attachment" [];
"torch.onnx._internal.diagnostics.infra.sarif._result" -> "torch.onnx._internal.diagnostics.infra.sarif._attachment" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._code_flow" [];
"torch.onnx._internal.diagnostics.infra.sarif._result" -> "torch.onnx._internal.diagnostics.infra.sarif._code_flow" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._configuration_override" [];
"torch.onnx._internal.diagnostics.infra.sarif._invocation" -> "torch.onnx._internal.diagnostics.infra.sarif._configuration_override" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._conversion" [];
"torch.onnx._internal.diagnostics.infra.sarif._external_properties" -> "torch.onnx._internal.diagnostics.infra.sarif._conversion" [];
"torch.onnx._internal.diagnostics.infra.sarif._run" -> "torch.onnx._internal.diagnostics.infra.sarif._conversion" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._edge" [];
"torch.onnx._internal.diagnostics.infra.sarif._graph" -> "torch.onnx._internal.diagnostics.infra.sarif._edge" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._edge_traversal" [];
"torch.onnx._internal.diagnostics.infra.sarif._graph_traversal" -> "torch.onnx._internal.diagnostics.infra.sarif._edge_traversal" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._exception" [];
"torch.onnx._internal.diagnostics.infra.sarif._notification" -> "torch.onnx._internal.diagnostics.infra.sarif._exception" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._external_properties" [];
"torch.onnx._internal.diagnostics.infra.sarif._sarif_log" -> "torch.onnx._internal.diagnostics.infra.sarif._external_properties" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._external_property_file_reference" [];
"torch.onnx._internal.diagnostics.infra.sarif._external_property_file_references" -> "torch.onnx._internal.diagnostics.infra.sarif._external_property_file_reference" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._external_property_file_references" [];
"torch.onnx._internal.diagnostics.infra.sarif._run" -> "torch.onnx._internal.diagnostics.infra.sarif._external_property_file_references" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._fix" [];
"torch.onnx._internal.diagnostics.infra.sarif._result" -> "torch.onnx._internal.diagnostics.infra.sarif._fix" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._graph" [];
"torch.onnx._internal.diagnostics.infra.sarif._external_properties" -> "torch.onnx._internal.diagnostics.infra.sarif._graph" [];
"torch.onnx._internal.diagnostics.infra.sarif._result" -> "torch.onnx._internal.diagnostics.infra.sarif._graph" [];
"torch.onnx._internal.diagnostics.infra.sarif._run" -> "torch.onnx._internal.diagnostics.infra.sarif._graph" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._graph_traversal" [];
"torch.onnx._internal.diagnostics.infra.sarif._result" -> "torch.onnx._internal.diagnostics.infra.sarif._graph_traversal" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._invocation" [];
"torch.onnx._internal.diagnostics.infra.sarif._conversion" -> "torch.onnx._internal.diagnostics.infra.sarif._invocation" [];
"torch.onnx._internal.diagnostics.infra.sarif._external_properties" -> "torch.onnx._internal.diagnostics.infra.sarif._invocation" [];
"torch.onnx._internal.diagnostics.infra.sarif._run" -> "torch.onnx._internal.diagnostics.infra.sarif._invocation" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._location" [];
"torch.onnx._internal.diagnostics.infra.sarif._node" -> "torch.onnx._internal.diagnostics.infra.sarif._location" [];
"torch.onnx._internal.diagnostics.infra.sarif._notification" -> "torch.onnx._internal.diagnostics.infra.sarif._location" [];
"torch.onnx._internal.diagnostics.infra.sarif._result" -> "torch.onnx._internal.diagnostics.infra.sarif._location" [];
"torch.onnx._internal.diagnostics.infra.sarif._stack_frame" -> "torch.onnx._internal.diagnostics.infra.sarif._location" [];
"torch.onnx._internal.diagnostics.infra.sarif._suppression" -> "torch.onnx._internal.diagnostics.infra.sarif._location" [];
"torch.onnx._internal.diagnostics.infra.sarif._thread_flow_location" -> "torch.onnx._internal.diagnostics.infra.sarif._location" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._location_relationship" [];
"torch.onnx._internal.diagnostics.infra.sarif._location" -> "torch.onnx._internal.diagnostics.infra.sarif._location_relationship" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._logical_location" [];
"torch.onnx._internal.diagnostics.infra.sarif._external_properties" -> "torch.onnx._internal.diagnostics.infra.sarif._logical_location" [];
"torch.onnx._internal.diagnostics.infra.sarif._location" -> "torch.onnx._internal.diagnostics.infra.sarif._logical_location" [];
"torch.onnx._internal.diagnostics.infra.sarif._run" -> "torch.onnx._internal.diagnostics.infra.sarif._logical_location" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._message" [];
"torch.onnx._internal.diagnostics.infra.sarif._artifact" -> "torch.onnx._internal.diagnostics.infra.sarif._message" [];
"torch.onnx._internal.diagnostics.infra.sarif._artifact_location" -> "torch.onnx._internal.diagnostics.infra.sarif._message" [];
"torch.onnx._internal.diagnostics.infra.sarif._attachment" -> "torch.onnx._internal.diagnostics.infra.sarif._message" [];
"torch.onnx._internal.diagnostics.infra.sarif._code_flow" -> "torch.onnx._internal.diagnostics.infra.sarif._message" [];
"torch.onnx._internal.diagnostics.infra.sarif._edge" -> "torch.onnx._internal.diagnostics.infra.sarif._message" [];
"torch.onnx._internal.diagnostics.infra.sarif._edge_traversal" -> "torch.onnx._internal.diagnostics.infra.sarif._message" [];
"torch.onnx._internal.diagnostics.infra.sarif._fix" -> "torch.onnx._internal.diagnostics.infra.sarif._message" [];
"torch.onnx._internal.diagnostics.infra.sarif._graph" -> "torch.onnx._internal.diagnostics.infra.sarif._message" [];
"torch.onnx._internal.diagnostics.infra.sarif._graph_traversal" -> "torch.onnx._internal.diagnostics.infra.sarif._message" [];
"torch.onnx._internal.diagnostics.infra.sarif._location" -> "torch.onnx._internal.diagnostics.infra.sarif._message" [];
"torch.onnx._internal.diagnostics.infra.sarif._location_relationship" -> "torch.onnx._internal.diagnostics.infra.sarif._message" [];
"torch.onnx._internal.diagnostics.infra.sarif._node" -> "torch.onnx._internal.diagnostics.infra.sarif._message" [];
"torch.onnx._internal.diagnostics.infra.sarif._notification" -> "torch.onnx._internal.diagnostics.infra.sarif._message" [];
"torch.onnx._internal.diagnostics.infra.sarif._rectangle" -> "torch.onnx._internal.diagnostics.infra.sarif._message" [];
"torch.onnx._internal.diagnostics.infra.sarif._region" -> "torch.onnx._internal.diagnostics.infra.sarif._message" [];
"torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_relationship" -> "torch.onnx._internal.diagnostics.infra.sarif._message" [];
"torch.onnx._internal.diagnostics.infra.sarif._result" -> "torch.onnx._internal.diagnostics.infra.sarif._message" [];
"torch.onnx._internal.diagnostics.infra.sarif._run_automation_details" -> "torch.onnx._internal.diagnostics.infra.sarif._message" [];
"torch.onnx._internal.diagnostics.infra.sarif._stack" -> "torch.onnx._internal.diagnostics.infra.sarif._message" [];
"torch.onnx._internal.diagnostics.infra.sarif._thread_flow" -> "torch.onnx._internal.diagnostics.infra.sarif._message" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._multiformat_message_string" [];
"torch.onnx._internal.diagnostics.infra.sarif._artifact_content" -> "torch.onnx._internal.diagnostics.infra.sarif._multiformat_message_string" [];
"torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor" -> "torch.onnx._internal.diagnostics.infra.sarif._multiformat_message_string" [];
"torch.onnx._internal.diagnostics.infra.sarif._tool_component" -> "torch.onnx._internal.diagnostics.infra.sarif._multiformat_message_string" [];
"torch.onnx._internal.diagnostics.infra.sarif._translation_metadata" -> "torch.onnx._internal.diagnostics.infra.sarif._multiformat_message_string" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._node" [];
"torch.onnx._internal.diagnostics.infra.sarif._graph" -> "torch.onnx._internal.diagnostics.infra.sarif._node" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._notification" [];
"torch.onnx._internal.diagnostics.infra.sarif._invocation" -> "torch.onnx._internal.diagnostics.infra.sarif._notification" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._physical_location" [];
"torch.onnx._internal.diagnostics.infra.sarif._location" -> "torch.onnx._internal.diagnostics.infra.sarif._physical_location" [];
"torch.onnx._internal.diagnostics.infra.sarif._result_provenance" -> "torch.onnx._internal.diagnostics.infra.sarif._physical_location" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._address" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._artifact" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._artifact_change" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._artifact_content" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._artifact_location" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._attachment" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._code_flow" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._configuration_override" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._conversion" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._edge" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._edge_traversal" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._exception" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._external_properties" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._external_property_file_reference" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._external_property_file_references" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._fix" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._graph" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._graph_traversal" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._invocation" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._location" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._location_relationship" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._logical_location" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._message" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._multiformat_message_string" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._node" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._notification" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._physical_location" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._rectangle" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._region" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._replacement" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._reporting_configuration" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_reference" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_relationship" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._result" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._result_provenance" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._run" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._run_automation_details" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._sarif_log" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._special_locations" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._stack" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._stack_frame" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._suppression" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._thread_flow" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._thread_flow_location" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._tool" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._tool_component" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._tool_component_reference" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._translation_metadata" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._version_control_details" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._web_request" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif._web_response" -> "torch.onnx._internal.diagnostics.infra.sarif._property_bag" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._rectangle" [];
"torch.onnx._internal.diagnostics.infra.sarif._attachment" -> "torch.onnx._internal.diagnostics.infra.sarif._rectangle" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._region" [];
"torch.onnx._internal.diagnostics.infra.sarif._attachment" -> "torch.onnx._internal.diagnostics.infra.sarif._region" [];
"torch.onnx._internal.diagnostics.infra.sarif._location" -> "torch.onnx._internal.diagnostics.infra.sarif._region" [];
"torch.onnx._internal.diagnostics.infra.sarif._physical_location" -> "torch.onnx._internal.diagnostics.infra.sarif._region" [];
"torch.onnx._internal.diagnostics.infra.sarif._replacement" -> "torch.onnx._internal.diagnostics.infra.sarif._region" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._replacement" [];
"torch.onnx._internal.diagnostics.infra.sarif._artifact_change" -> "torch.onnx._internal.diagnostics.infra.sarif._replacement" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._reporting_configuration" [];
"torch.onnx._internal.diagnostics.infra.sarif._configuration_override" -> "torch.onnx._internal.diagnostics.infra.sarif._reporting_configuration" [];
"torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor" -> "torch.onnx._internal.diagnostics.infra.sarif._reporting_configuration" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor" [];
"torch.onnx._internal.diagnostics.infra.sarif._tool_component" -> "torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_reference" [];
"torch.onnx._internal.diagnostics.infra.sarif._configuration_override" -> "torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_reference" [];
"torch.onnx._internal.diagnostics.infra.sarif._notification" -> "torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_reference" [];
"torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_relationship" -> "torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_reference" [];
"torch.onnx._internal.diagnostics.infra.sarif._result" -> "torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_reference" [];
"torch.onnx._internal.diagnostics.infra.sarif._thread_flow_location" -> "torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_reference" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_relationship" [];
"torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor" -> "torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_relationship" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._result" [];
"torch.onnx._internal.diagnostics.infra.sarif._external_properties" -> "torch.onnx._internal.diagnostics.infra.sarif._result" [];
"torch.onnx._internal.diagnostics.infra.sarif._run" -> "torch.onnx._internal.diagnostics.infra.sarif._result" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._result_provenance" [];
"torch.onnx._internal.diagnostics.infra.sarif._result" -> "torch.onnx._internal.diagnostics.infra.sarif._result_provenance" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._run" [];
"torch.onnx._internal.diagnostics.infra.sarif._sarif_log" -> "torch.onnx._internal.diagnostics.infra.sarif._run" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._run_automation_details" [];
"torch.onnx._internal.diagnostics.infra.sarif._run" -> "torch.onnx._internal.diagnostics.infra.sarif._run_automation_details" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._sarif_log" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._special_locations" [];
"torch.onnx._internal.diagnostics.infra.sarif._run" -> "torch.onnx._internal.diagnostics.infra.sarif._special_locations" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._stack" [];
"torch.onnx._internal.diagnostics.infra.sarif._exception" -> "torch.onnx._internal.diagnostics.infra.sarif._stack" [];
"torch.onnx._internal.diagnostics.infra.sarif._result" -> "torch.onnx._internal.diagnostics.infra.sarif._stack" [];
"torch.onnx._internal.diagnostics.infra.sarif._thread_flow_location" -> "torch.onnx._internal.diagnostics.infra.sarif._stack" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._stack_frame" [];
"torch.onnx._internal.diagnostics.infra.sarif._stack" -> "torch.onnx._internal.diagnostics.infra.sarif._stack_frame" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._suppression" [];
"torch.onnx._internal.diagnostics.infra.sarif._result" -> "torch.onnx._internal.diagnostics.infra.sarif._suppression" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._thread_flow" [];
"torch.onnx._internal.diagnostics.infra.sarif._code_flow" -> "torch.onnx._internal.diagnostics.infra.sarif._thread_flow" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._thread_flow_location" [];
"torch.onnx._internal.diagnostics.infra.sarif._external_properties" -> "torch.onnx._internal.diagnostics.infra.sarif._thread_flow_location" [];
"torch.onnx._internal.diagnostics.infra.sarif._run" -> "torch.onnx._internal.diagnostics.infra.sarif._thread_flow_location" [];
"torch.onnx._internal.diagnostics.infra.sarif._thread_flow" -> "torch.onnx._internal.diagnostics.infra.sarif._thread_flow_location" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._tool" [];
"torch.onnx._internal.diagnostics.infra.sarif._conversion" -> "torch.onnx._internal.diagnostics.infra.sarif._tool" [];
"torch.onnx._internal.diagnostics.infra.sarif._run" -> "torch.onnx._internal.diagnostics.infra.sarif._tool" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._tool_component" [];
"torch.onnx._internal.diagnostics.infra.sarif._external_properties" -> "torch.onnx._internal.diagnostics.infra.sarif._tool_component" [];
"torch.onnx._internal.diagnostics.infra.sarif._run" -> "torch.onnx._internal.diagnostics.infra.sarif._tool_component" [];
"torch.onnx._internal.diagnostics.infra.sarif._tool" -> "torch.onnx._internal.diagnostics.infra.sarif._tool_component" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._tool_component_reference" [];
"torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_reference" -> "torch.onnx._internal.diagnostics.infra.sarif._tool_component_reference" [];
"torch.onnx._internal.diagnostics.infra.sarif._tool_component" -> "torch.onnx._internal.diagnostics.infra.sarif._tool_component_reference" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._translation_metadata" [];
"torch.onnx._internal.diagnostics.infra.sarif._tool_component" -> "torch.onnx._internal.diagnostics.infra.sarif._translation_metadata" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._version_control_details" [];
"torch.onnx._internal.diagnostics.infra.sarif._run" -> "torch.onnx._internal.diagnostics.infra.sarif._version_control_details" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._web_request" [];
"torch.onnx._internal.diagnostics.infra.sarif._external_properties" -> "torch.onnx._internal.diagnostics.infra.sarif._web_request" [];
"torch.onnx._internal.diagnostics.infra.sarif._result" -> "torch.onnx._internal.diagnostics.infra.sarif._web_request" [];
"torch.onnx._internal.diagnostics.infra.sarif._run" -> "torch.onnx._internal.diagnostics.infra.sarif._web_request" [];
"torch.onnx._internal.diagnostics.infra.sarif._thread_flow_location" -> "torch.onnx._internal.diagnostics.infra.sarif._web_request" [];
"torch.onnx._internal.diagnostics.infra.sarif" -> "torch.onnx._internal.diagnostics.infra.sarif._web_response" [];
"torch.onnx._internal.diagnostics.infra.sarif._external_properties" -> "torch.onnx._internal.diagnostics.infra.sarif._web_response" [];
"torch.onnx._internal.diagnostics.infra.sarif._result" -> "torch.onnx._internal.diagnostics.infra.sarif._web_response" [];
"torch.onnx._internal.diagnostics.infra.sarif._run" -> "torch.onnx._internal.diagnostics.infra.sarif._web_response" [];
"torch.onnx._internal.diagnostics.infra.sarif._thread_flow_location" -> "torch.onnx._internal.diagnostics.infra.sarif._web_response" [];
"torch.onnx._internal.diagnostics._diagnostic" -> "torch.onnx._internal.diagnostics.infra.sarif.version" [];
"torch.onnx._internal.diagnostics.infra.context" -> "torch.onnx._internal.diagnostics.infra.sarif.version" [];
"torch.onnx._internal.diagnostics.infra.context" -> "torch.onnx._internal.diagnostics.infra.utils" [];
"torch.onnx._internal.diagnostics.infra.decorator" -> "torch.onnx._internal.diagnostics.infra.utils" [];
"torch.onnx._internal.exporter._core" -> "torch.onnx._internal.exporter._analysis" [];
"torch.onnx._internal.exporter._reporting" -> "torch.onnx._internal.exporter._analysis" [];
"torch.onnx._internal.exporter._core" -> "torch.onnx._internal.exporter._building" [];
"torch.onnx._internal.exporter._core" -> "torch.onnx._internal.exporter._capture_strategies" [];
"torch.onnx" -> "torch.onnx._internal.exporter._compat" [];
"torch.onnx._internal.exporter._compat" -> "torch.onnx._internal.exporter._core" [];
"torch.onnx._internal.exporter._onnx_program" -> "torch.onnx._internal.exporter._core" [];
"torch.onnx._internal.exporter._fx_passes" -> "torch.onnx._internal.exporter._decomp" [];
"torch.onnx._internal.exporter._analysis" -> "torch.onnx._internal.exporter._dispatching" [];
"torch.onnx._internal.exporter._core" -> "torch.onnx._internal.exporter._dispatching" [];
"torch.onnx._internal.exporter._building" -> "torch.onnx._internal.exporter._errors" [];
"torch.onnx._internal.exporter._core" -> "torch.onnx._internal.exporter._errors" [];
"torch.onnx._internal.exporter._core" -> "torch.onnx._internal.exporter._fx_passes" [];
"torch.onnx._internal.exporter._core" -> "torch.onnx._internal.exporter._ir_passes" [];
"torch.onnx" -> "torch.onnx._internal.exporter._onnx_program" [];
"torch.onnx._internal._exporter_legacy" -> "torch.onnx._internal.exporter._onnx_program" [];
"torch.onnx._internal.exporter._compat" -> "torch.onnx._internal.exporter._onnx_program" [];
"torch.onnx._internal.exporter._core" -> "torch.onnx._internal.exporter._onnx_program" [];
"torch.onnx._internal.exporter._testing" -> "torch.onnx._internal.exporter._onnx_program" [];
"torch.onnx._internal.exporter._verification" -> "torch.onnx._internal.exporter._onnx_program" [];
"torch.onnx._internal.exporter._analysis" -> "torch.onnx._internal.exporter._registration" [];
"torch.onnx._internal.exporter._compat" -> "torch.onnx._internal.exporter._registration" [];
"torch.onnx._internal.exporter._core" -> "torch.onnx._internal.exporter._registration" [];
"torch.onnx._internal.exporter._decomp" -> "torch.onnx._internal.exporter._registration" [];
"torch.onnx._internal.exporter._dispatching" -> "torch.onnx._internal.exporter._registration" [];
"torch.onnx._internal.exporter._fx_passes" -> "torch.onnx._internal.exporter._registration" [];
"torch.onnx._internal.exporter._reporting" -> "torch.onnx._internal.exporter._registration" [];
"torch.onnx._internal.exporter._core" -> "torch.onnx._internal.exporter._reporting" [];
"torch.onnx._internal.exporter._building" -> "torch.onnx._internal.exporter._schemas" [];
"torch.onnx._internal.exporter._dispatching" -> "torch.onnx._internal.exporter._schemas" [];
"torch.onnx._internal.exporter._registration" -> "torch.onnx._internal.exporter._schemas" [];
"torch.onnx._internal.exporter._building" -> "torch.onnx._internal.exporter._tensors" [];
"torch.onnx._internal.exporter._core" -> "torch.onnx._internal.exporter._tensors" [];
"torch.onnx._internal.exporter._registration" -> "torch.onnx._internal.exporter._torchlib._torchlib_registry" [];
"torch.onnx._internal.exporter._registration" -> "torch.onnx._internal.exporter._torchlib.ops" [];
"torch.onnx._internal.exporter._torchlib.ops" -> "torch.onnx._internal.exporter._torchlib.ops.hop" [];
"torch.onnx._internal.exporter._core" -> "torch.onnx._internal.exporter._verification" [];
"torch.onnx._internal.exporter._reporting" -> "torch.onnx._internal.exporter._verification" [];
"torch.onnx._internal.fx.fx_onnx_interpreter" -> "torch.onnx._internal.fx._pass" [];
"torch.onnx._internal._exporter_legacy" -> "torch.onnx._internal.fx.analysis" [];
"torch.onnx._internal.fx.analysis" -> "torch.onnx._internal.fx.analysis.unsupported_nodes" [];
"torch.onnx._internal._exporter_legacy" -> "torch.onnx._internal.fx.decomposition_skip" [];
"torch.onnx._internal._exporter_legacy" -> "torch.onnx._internal.fx.decomposition_table" [];
"torch.onnx._internal.onnxruntime" -> "torch.onnx._internal.fx.decomposition_table" [];
"torch.onnx._internal._exporter_legacy" -> "torch.onnx._internal.fx.diagnostics" [];
"torch.onnx._internal.fx._pass" -> "torch.onnx._internal.fx.diagnostics" [];
"torch.onnx._internal.fx.fx_onnx_interpreter" -> "torch.onnx._internal.fx.diagnostics" [];
"torch.onnx._internal.fx.onnxfunction_dispatcher" -> "torch.onnx._internal.fx.diagnostics" [];
"torch.onnx._internal._exporter_legacy" -> "torch.onnx._internal.fx.dynamo_graph_extractor" [];
"torch.onnx._internal._exporter_legacy" -> "torch.onnx._internal.fx.fx_onnx_interpreter" [];
"torch.onnx._internal.onnxruntime" -> "torch.onnx._internal.fx.fx_onnx_interpreter" [];
"torch.onnx._internal._exporter_legacy" -> "torch.onnx._internal.fx.fx_symbolic_graph_extractor" [];
"torch.onnx._internal._exporter_legacy" -> "torch.onnx._internal.fx.onnxfunction_dispatcher" [];
"torch.onnx._internal.fx._pass" -> "torch.onnx._internal.fx.onnxfunction_dispatcher" [];
"torch.onnx._internal.fx.fx_onnx_interpreter" -> "torch.onnx._internal.fx.onnxfunction_dispatcher" [];
"torch.onnx._internal._exporter_legacy" -> "torch.onnx._internal.fx.passes" [];
"torch.onnx._internal.fx.fx_symbolic_graph_extractor" -> "torch.onnx._internal.fx.passes" [];
"torch.onnx._internal.onnxruntime" -> "torch.onnx._internal.fx.passes" [];
"torch.onnx._internal.fx.passes.decomp" -> "torch.onnx._internal.fx.passes._utils" [];
"torch.onnx._internal.fx.passes.functionalization" -> "torch.onnx._internal.fx.passes._utils" [];
"torch.onnx._internal.fx.passes" -> "torch.onnx._internal.fx.passes.decomp" [];
"torch.onnx._internal.fx.passes" -> "torch.onnx._internal.fx.passes.functionalization" [];
"torch.onnx._internal.fx.passes" -> "torch.onnx._internal.fx.passes.modularization" [];
"torch.onnx._internal.fx.passes" -> "torch.onnx._internal.fx.passes.readability" [];
"torch.onnx._internal.fx.passes" -> "torch.onnx._internal.fx.passes.type_promotion" [];
"torch.onnx._internal.fx.passes" -> "torch.onnx._internal.fx.passes.virtualization" [];
"torch.onnx._internal._exporter_legacy" -> "torch.onnx._internal.fx.patcher" [];
"torch.onnx._internal.fx" -> "torch.onnx._internal.fx.patcher" [];
"torch.onnx._internal._exporter_legacy" -> "torch.onnx._internal.fx.registration" [];
"torch.onnx._internal.fx.decomposition_table" -> "torch.onnx._internal.fx.registration" [];
"torch.onnx._internal.fx.diagnostics" -> "torch.onnx._internal.fx.registration" [];
"torch.onnx._internal.fx.onnxfunction_dispatcher" -> "torch.onnx._internal.fx.registration" [];
"torch.onnx._internal.fx" -> "torch.onnx._internal.fx.serialization" [];
"torch.onnx._internal.fx.diagnostics" -> "torch.onnx._internal.fx.type_utils" [];
"torch.onnx._internal.fx.fx_onnx_interpreter" -> "torch.onnx._internal.fx.type_utils" [];
"torch.onnx._internal.fx.onnxfunction_dispatcher" -> "torch.onnx._internal.fx.type_utils" [];
"torch.onnx._internal.onnxruntime" -> "torch.onnx._internal.fx.type_utils" [];
"torch.onnx._internal._exporter_legacy" -> "torch.onnx._internal.io_adapter" [];
"torch.onnx._internal.onnx_proto_utils" -> "torch.onnx._internal.jit_utils" [];
"torch.onnx.symbolic_caffe2" -> "torch.onnx._internal.jit_utils" [];
"torch.onnx.symbolic_helper" -> "torch.onnx._internal.jit_utils" [];
"torch.onnx.symbolic_opset10" -> "torch.onnx._internal.jit_utils" [];
"torch.onnx.symbolic_opset11" -> "torch.onnx._internal.jit_utils" [];
"torch.onnx.symbolic_opset12" -> "torch.onnx._internal.jit_utils" [];
"torch.onnx.symbolic_opset13" -> "torch.onnx._internal.jit_utils" [];
"torch.onnx.symbolic_opset14" -> "torch.onnx._internal.jit_utils" [];
"torch.onnx.symbolic_opset15" -> "torch.onnx._internal.jit_utils" [];
"torch.onnx.symbolic_opset16" -> "torch.onnx._internal.jit_utils" [];
"torch.onnx.symbolic_opset17" -> "torch.onnx._internal.jit_utils" [];
"torch.onnx.symbolic_opset18" -> "torch.onnx._internal.jit_utils" [];
"torch.onnx.symbolic_opset20" -> "torch.onnx._internal.jit_utils" [];
"torch.onnx.symbolic_opset7" -> "torch.onnx._internal.jit_utils" [];
"torch.onnx.symbolic_opset8" -> "torch.onnx._internal.jit_utils" [];
"torch.onnx.symbolic_opset9" -> "torch.onnx._internal.jit_utils" [];
"torch.onnx.utils" -> "torch.onnx._internal.jit_utils" [];
"torch.onnx.utils" -> "torch.onnx._internal.onnx_proto_utils" [];
"torch.onnx.verification" -> "torch.onnx._internal.onnx_proto_utils" [];
"torch.onnx" -> "torch.onnx._internal.onnxruntime" [];
"torch.onnx._internal.jit_utils" -> "torch.onnx._internal.registration" [];
"torch.onnx._internal.onnx_proto_utils" -> "torch.onnx._internal.registration" [];
"torch.onnx._onnx_supported_ops" -> "torch.onnx._internal.registration" [];
"torch.onnx.symbolic_caffe2" -> "torch.onnx._internal.registration" [];
"torch.onnx.symbolic_opset10" -> "torch.onnx._internal.registration" [];
"torch.onnx.symbolic_opset11" -> "torch.onnx._internal.registration" [];
"torch.onnx.symbolic_opset12" -> "torch.onnx._internal.registration" [];
"torch.onnx.symbolic_opset13" -> "torch.onnx._internal.registration" [];
"torch.onnx.symbolic_opset14" -> "torch.onnx._internal.registration" [];
"torch.onnx.symbolic_opset15" -> "torch.onnx._internal.registration" [];
"torch.onnx.symbolic_opset16" -> "torch.onnx._internal.registration" [];
"torch.onnx.symbolic_opset17" -> "torch.onnx._internal.registration" [];
"torch.onnx.symbolic_opset18" -> "torch.onnx._internal.registration" [];
"torch.onnx.symbolic_opset20" -> "torch.onnx._internal.registration" [];
"torch.onnx.symbolic_opset7" -> "torch.onnx._internal.registration" [];
"torch.onnx.symbolic_opset8" -> "torch.onnx._internal.registration" [];
"torch.onnx.symbolic_opset9" -> "torch.onnx._internal.registration" [];
"torch.onnx.utils" -> "torch.onnx._internal.registration" [];
"torch.onnx" -> "torch.onnx._type_utils" [];
"torch.onnx.symbolic_helper" -> "torch.onnx._type_utils" [];
"torch.onnx.symbolic_opset10" -> "torch.onnx._type_utils" [];
"torch.onnx.symbolic_opset11" -> "torch.onnx._type_utils" [];
"torch.onnx.symbolic_opset12" -> "torch.onnx._type_utils" [];
"torch.onnx.symbolic_opset13" -> "torch.onnx._type_utils" [];
"torch.onnx.symbolic_opset14" -> "torch.onnx._type_utils" [];
"torch.onnx.symbolic_opset16" -> "torch.onnx._type_utils" [];
"torch.onnx.symbolic_opset17" -> "torch.onnx._type_utils" [];
"torch.onnx.symbolic_opset18" -> "torch.onnx._type_utils" [];
"torch.onnx.symbolic_opset8" -> "torch.onnx._type_utils" [];
"torch.onnx.symbolic_opset9" -> "torch.onnx._type_utils" [];
"torch.onnx" -> "torch.onnx.errors" [];
"torch.onnx._type_utils" -> "torch.onnx.errors" [];
"torch.onnx.symbolic_helper" -> "torch.onnx.errors" [];
"torch.onnx.symbolic_opset10" -> "torch.onnx.errors" [];
"torch.onnx.symbolic_opset11" -> "torch.onnx.errors" [];
"torch.onnx.symbolic_opset12" -> "torch.onnx.errors" [];
"torch.onnx.symbolic_opset13" -> "torch.onnx.errors" [];
"torch.onnx.symbolic_opset16" -> "torch.onnx.errors" [];
"torch.onnx.symbolic_opset17" -> "torch.onnx.errors" [];
"torch.onnx.symbolic_opset8" -> "torch.onnx.errors" [];
"torch.onnx.symbolic_opset9" -> "torch.onnx.errors" [];
"torch.onnx.utils" -> "torch.onnx.errors" [];
"torch.onnx" -> "torch.onnx.symbolic_caffe2" [];
"torch.onnx" -> "torch.onnx.symbolic_helper" [];
"torch.onnx.symbolic_caffe2" -> "torch.onnx.symbolic_helper" [];
"torch.onnx.symbolic_opset10" -> "torch.onnx.symbolic_helper" [];
"torch.onnx.symbolic_opset11" -> "torch.onnx.symbolic_helper" [];
"torch.onnx.symbolic_opset12" -> "torch.onnx.symbolic_helper" [];
"torch.onnx.symbolic_opset13" -> "torch.onnx.symbolic_helper" [];
"torch.onnx.symbolic_opset14" -> "torch.onnx.symbolic_helper" [];
"torch.onnx.symbolic_opset15" -> "torch.onnx.symbolic_helper" [];
"torch.onnx.symbolic_opset16" -> "torch.onnx.symbolic_helper" [];
"torch.onnx.symbolic_opset17" -> "torch.onnx.symbolic_helper" [];
"torch.onnx.symbolic_opset18" -> "torch.onnx.symbolic_helper" [];
"torch.onnx.symbolic_opset20" -> "torch.onnx.symbolic_helper" [];
"torch.onnx.symbolic_opset7" -> "torch.onnx.symbolic_helper" [];
"torch.onnx.symbolic_opset8" -> "torch.onnx.symbolic_helper" [];
"torch.onnx.symbolic_opset9" -> "torch.onnx.symbolic_helper" [];
"torch.onnx.utils" -> "torch.onnx.symbolic_helper" [];
"torch.onnx" -> "torch.onnx.symbolic_opset10" [];
"torch.onnx.symbolic_helper" -> "torch.onnx.symbolic_opset10" [];
"torch.onnx.symbolic_opset11" -> "torch.onnx.symbolic_opset10" [];
"torch.onnx" -> "torch.onnx.symbolic_opset11" [];
"torch.onnx.symbolic_helper" -> "torch.onnx.symbolic_opset11" [];
"torch.onnx.symbolic_opset13" -> "torch.onnx.symbolic_opset11" [];
"torch.onnx" -> "torch.onnx.symbolic_opset12" [];
"torch.onnx" -> "torch.onnx.symbolic_opset13" [];
"torch.onnx.symbolic_helper" -> "torch.onnx.symbolic_opset13" [];
"torch.onnx" -> "torch.onnx.symbolic_opset14" [];
"torch.onnx" -> "torch.onnx.symbolic_opset15" [];
"torch.onnx" -> "torch.onnx.symbolic_opset16" [];
"torch.onnx" -> "torch.onnx.symbolic_opset17" [];
"torch.onnx" -> "torch.onnx.symbolic_opset18" [];
"torch.onnx" -> "torch.onnx.symbolic_opset19" [];
"torch.onnx" -> "torch.onnx.symbolic_opset20" [];
"torch.onnx" -> "torch.onnx.symbolic_opset7" [];
"torch.onnx" -> "torch.onnx.symbolic_opset8" [];
"torch.onnx.symbolic_helper" -> "torch.onnx.symbolic_opset8" [];
"torch.onnx" -> "torch.onnx.symbolic_opset9" [];
"torch.onnx.symbolic_caffe2" -> "torch.onnx.symbolic_opset9" [];
"torch.onnx.symbolic_helper" -> "torch.onnx.symbolic_opset9" [];
"torch.onnx.symbolic_opset10" -> "torch.onnx.symbolic_opset9" [];
"torch.onnx.symbolic_opset11" -> "torch.onnx.symbolic_opset9" [];
"torch.onnx.symbolic_opset12" -> "torch.onnx.symbolic_opset9" [];
"torch.onnx.symbolic_opset13" -> "torch.onnx.symbolic_opset9" [];
"torch.onnx.symbolic_opset15" -> "torch.onnx.symbolic_opset9" [];
"torch.onnx.symbolic_opset18" -> "torch.onnx.symbolic_opset9" [];
"torch.onnx.symbolic_opset7" -> "torch.onnx.symbolic_opset9" [];
"torch.onnx.symbolic_opset8" -> "torch.onnx.symbolic_opset9" [];
"torch.onnx" -> "torch.onnx.utils" [];
"torch.onnx.symbolic_helper" -> "torch.onnx.utils" [];
"torch.onnx.symbolic_opset11" -> "torch.onnx.utils" [];
"torch.onnx.symbolic_opset12" -> "torch.onnx.utils" [];
"torch.onnx.symbolic_opset13" -> "torch.onnx.utils" [];
"torch.onnx.symbolic_opset16" -> "torch.onnx.utils" [];
"torch.onnx.verification" -> "torch.onnx.utils" [];
"torch" -> "torch.optim" [];
"torch.optim" -> "torch.optim._adafactor" [];
"torch.optim.sparse_adam" -> "torch.optim._functional" [];
"torch.optim" -> "torch.optim.adadelta" [];
"torch.optim._functional" -> "torch.optim.adadelta" [];
"torch.optim" -> "torch.optim.adagrad" [];
"torch.optim._functional" -> "torch.optim.adagrad" [];
"torch.optim" -> "torch.optim.adam" [];
"torch.optim._functional" -> "torch.optim.adam" [];
"torch.optim" -> "torch.optim.adamax" [];
"torch.optim._functional" -> "torch.optim.adamax" [];
"torch.optim" -> "torch.optim.adamw" [];
"torch.optim._functional" -> "torch.optim.adamw" [];
"torch.optim" -> "torch.optim.asgd" [];
"torch.optim._functional" -> "torch.optim.asgd" [];
"torch.optim" -> "torch.optim.lbfgs" [];
"torch.optim" -> "torch.optim.lr_scheduler" [];
"torch.optim.swa_utils" -> "torch.optim.lr_scheduler" [];
"torch.optim" -> "torch.optim.nadam" [];
"torch.optim._functional" -> "torch.optim.nadam" [];
"torch.optim" -> "torch.optim.optimizer" [];
"torch.optim._adafactor" -> "torch.optim.optimizer" [];
"torch.optim.adadelta" -> "torch.optim.optimizer" [];
"torch.optim.adagrad" -> "torch.optim.optimizer" [];
"torch.optim.adam" -> "torch.optim.optimizer" [];
"torch.optim.adamax" -> "torch.optim.optimizer" [];
"torch.optim.adamw" -> "torch.optim.optimizer" [];
"torch.optim.asgd" -> "torch.optim.optimizer" [];
"torch.optim.lbfgs" -> "torch.optim.optimizer" [];
"torch.optim.lr_scheduler" -> "torch.optim.optimizer" [];
"torch.optim.nadam" -> "torch.optim.optimizer" [];
"torch.optim.radam" -> "torch.optim.optimizer" [];
"torch.optim.rmsprop" -> "torch.optim.optimizer" [];
"torch.optim.rprop" -> "torch.optim.optimizer" [];
"torch.optim.sgd" -> "torch.optim.optimizer" [];
"torch.optim.sparse_adam" -> "torch.optim.optimizer" [];
"torch.optim.swa_utils" -> "torch.optim.optimizer" [];
"torch.optim" -> "torch.optim.radam" [];
"torch.optim._functional" -> "torch.optim.radam" [];
"torch.optim" -> "torch.optim.rmsprop" [];
"torch.optim._functional" -> "torch.optim.rmsprop" [];
"torch.optim" -> "torch.optim.rprop" [];
"torch.optim._functional" -> "torch.optim.rprop" [];
"torch.optim" -> "torch.optim.sgd" [];
"torch.optim._functional" -> "torch.optim.sgd" [];
"torch.optim" -> "torch.optim.sparse_adam" [];
"torch.optim" -> "torch.optim.swa_utils" [];
"torch" -> "torch.overrides" [];
"torch._lobpcg" -> "torch.overrides" [];
"torch._lowrank" -> "torch.overrides" [];
"torch._tensor" -> "torch.overrides" [];
"torch.functional" -> "torch.overrides" [];
"torch._deploy" -> "torch.package" [];
"torch.package.package_exporter" -> "torch.package._digraph" [];
"torch.package.package_importer" -> "torch.package._directory_reader" [];
"torch.package.find_file_dependencies" -> "torch.package._importlib" [];
"torch.package.package_exporter" -> "torch.package._importlib" [];
"torch.package.package_importer" -> "torch.package._importlib" [];
"torch._jit_internal" -> "torch.package._mangling" [];
"torch.package.importer" -> "torch.package._mangling" [];
"torch.package.package_exporter" -> "torch.package._mangling" [];
"torch.package.package_importer" -> "torch.package._mangling" [];
"torch._deploy" -> "torch.package._package_pickler" [];
"torch.package.package_exporter" -> "torch.package._package_pickler" [];
"torch._deploy" -> "torch.package._package_unpickler" [];
"torch.package.package_importer" -> "torch.package._package_unpickler" [];
"torch.package.package_exporter" -> "torch.package._stdlib" [];
"torch.package.analyze" -> "torch.package.analyze.find_first_use_of_broken_modules" [];
"torch.package" -> "torch.package.analyze.is_from_package" [];
"torch.package.analyze" -> "torch.package.analyze.trace_dependencies" [];
"torch.package" -> "torch.package.file_structure_representation" [];
"torch.package.package_importer" -> "torch.package.file_structure_representation" [];
"torch.package.package_exporter" -> "torch.package.find_file_dependencies" [];
"torch.package" -> "torch.package.glob_group" [];
"torch.package.file_structure_representation" -> "torch.package.glob_group" [];
"torch.package.package_exporter" -> "torch.package.glob_group" [];
"torch.package.package_importer" -> "torch.package.glob_group" [];
"torch.package" -> "torch.package.importer" [];
"torch.package._package_pickler" -> "torch.package.importer" [];
"torch.package._package_unpickler" -> "torch.package.importer" [];
"torch.package.package_exporter" -> "torch.package.importer" [];
"torch.package.package_importer" -> "torch.package.importer" [];
"torch.package" -> "torch.package.package_exporter" [];
"torch.package" -> "torch.package.package_importer" [];
"torch" -> "torch.profiler" [];
"torch.profiler._pattern_matcher" -> "torch.profiler" [];
"torch.profiler._utils" -> "torch.profiler" [];
"torch.profiler.profiler" -> "torch.profiler._memory_profiler" [];
"torch.profiler._memory_profiler" -> "torch.profiler._utils" [];
"torch.profiler._pattern_matcher" -> "torch.profiler._utils" [];
"torch.profiler" -> "torch.profiler.itt" [];
"torch.profiler" -> "torch.profiler.profiler" [];
"torch" -> "torch.quantization" [];
"torch.quantization" -> "torch.quantization.fake_quantize" [];
"torch.quantization" -> "torch.quantization.fuse_modules" [];
"torch.quantization" -> "torch.quantization.fuser_method_mappings" [];
"torch.quantization" -> "torch.quantization.observer" [];
"torch.quantization" -> "torch.quantization.qconfig" [];
"torch.quantization" -> "torch.quantization.quant_type" [];
"torch.quantization" -> "torch.quantization.quantization_mappings" [];
"torch.quantization" -> "torch.quantization.quantize" [];
"torch.quantization" -> "torch.quantization.quantize_jit" [];
"torch.quantization" -> "torch.quantization.stubs" [];
"torch" -> "torch.quasirandom" [];
"torch" -> "torch.random" [];
"torch" -> "torch.return_types" [];
"torch" -> "torch.serialization" [];
"torch._deploy" -> "torch.serialization" [];
"torch.hub" -> "torch.serialization" [];
"torch" -> "torch.signal.windows" [];
"torch.signal" -> "torch.signal.windows" [];
"torch.signal.windows" -> "torch.signal.windows.windows" [];
"torch" -> "torch.sparse" [];
"torch.sparse.semi_structured" -> "torch.sparse._semi_structured_conversions" [];
"torch.sparse.semi_structured" -> "torch.sparse._semi_structured_ops" [];
"torch.sparse._triton_ops_meta" -> "torch.sparse._triton_ops" [];
"torch.sparse._triton_ops" -> "torch.sparse._triton_ops_meta" [];
"torch.sparse" -> "torch.sparse.semi_structured" [];
"torch" -> "torch.special" [];
"torch" -> "torch.storage" [];
"torch.serialization" -> "torch.storage" [];
"torch" -> "torch.testing" [];
"torch.testing" -> "torch.testing._comparison" [];
"torch.testing" -> "torch.testing._creation" [];
"torch.testing._internal.custom_op_db" -> "torch.testing._internal.autograd_function_db" [];
"torch.testing._internal.common_device_type" -> "torch.testing._internal.common_cuda" [];
"torch.testing._internal.common_methods_invocations" -> "torch.testing._internal.common_cuda" [];
"torch.testing._internal.common_modules" -> "torch.testing._internal.common_cuda" [];
"torch.testing._internal.common_nn" -> "torch.testing._internal.common_cuda" [];
"torch.testing._internal.common_utils" -> "torch.testing._internal.common_cuda" [];
"torch.testing._internal.common_methods_invocations" -> "torch.testing._internal.common_device_type" [];
"torch.testing._internal.common_modules" -> "torch.testing._internal.common_device_type" [];
"torch.testing._internal.common_optimizers" -> "torch.testing._internal.common_device_type" [];
"torch.testing._internal.common_utils" -> "torch.testing._internal.common_device_type" [];
"torch.testing._internal.hop_db" -> "torch.testing._internal.common_device_type" [];
"torch.testing._internal.common_fsdp" -> "torch.testing._internal.common_distributed" [];
"torch.testing._internal.autograd_function_db" -> "torch.testing._internal.common_dtype" [];
"torch.testing._internal.common_device_type" -> "torch.testing._internal.common_dtype" [];
"torch.testing._internal.common_jit" -> "torch.testing._internal.common_dtype" [];
"torch.testing._internal.common_methods_invocations" -> "torch.testing._internal.common_dtype" [];
"torch.testing._internal.common_modules" -> "torch.testing._internal.common_dtype" [];
"torch.testing._internal.common_utils" -> "torch.testing._internal.common_dtype" [];
"torch.testing._internal.custom_op_db" -> "torch.testing._internal.common_dtype" [];
"torch.testing._internal.hop_db" -> "torch.testing._internal.common_dtype" [];
"torch.testing._internal.jit_utils" -> "torch.testing._internal.common_jit" [];
"torch.testing._internal.common_modules" -> "torch.testing._internal.common_methods_invocations" [];
"torch.testing._internal.common_optimizers" -> "torch.testing._internal.common_methods_invocations" [];
"torch.testing._internal.common_modules" -> "torch.testing._internal.common_nn" [];
"torch.testing._internal.jit_metaprogramming_utils" -> "torch.testing._internal.common_nn" [];
"torch.testing._internal.common_quantization" -> "torch.testing._internal.common_quantized" [];
"torch.testing._internal.hypothesis_utils" -> "torch.testing._internal.common_quantized" [];
"torch.testing._internal.autocast_test_lists" -> "torch.testing._internal.common_utils" [];
"torch.testing._internal.common_cuda" -> "torch.testing._internal.common_utils" [];
"torch.testing._internal.common_device_type" -> "torch.testing._internal.common_utils" [];
"torch.testing._internal.common_distributed" -> "torch.testing._internal.common_utils" [];
"torch.testing._internal.common_fsdp" -> "torch.testing._internal.common_utils" [];
"torch.testing._internal.common_jit" -> "torch.testing._internal.common_utils" [];
"torch.testing._internal.common_methods_invocations" -> "torch.testing._internal.common_utils" [];
"torch.testing._internal.common_modules" -> "torch.testing._internal.common_utils" [];
"torch.testing._internal.common_nn" -> "torch.testing._internal.common_utils" [];
"torch.testing._internal.common_optimizers" -> "torch.testing._internal.common_utils" [];
"torch.testing._internal.common_quantization" -> "torch.testing._internal.common_utils" [];
"torch.testing._internal.common_quantized" -> "torch.testing._internal.common_utils" [];
"torch.testing._internal.dist_utils" -> "torch.testing._internal.common_utils" [];
"torch.testing._internal.inductor_utils" -> "torch.testing._internal.common_utils" [];
"torch.testing._internal.jit_metaprogramming_utils" -> "torch.testing._internal.common_utils" [];
"torch.testing._internal.jit_utils" -> "torch.testing._internal.common_utils" [];
"torch.testing._internal.torchbind_impls" -> "torch.testing._internal.common_utils" [];
"torch.testing._internal.distributed.rpc_utils" -> "torch.testing._internal.distributed.ddp_under_dist_autograd_test" [];
"torch.testing._internal.common_distributed" -> "torch.testing._internal.distributed.multi_threaded_pg" [];
"torch.testing._internal.distributed.rpc_utils" -> "torch.testing._internal.distributed.nn.api.remote_module_test" [];
"torch.testing._internal.distributed.rpc_utils" -> "torch.testing._internal.distributed.rpc.dist_autograd_test" [];
"torch.testing._internal.distributed.rpc_utils" -> "torch.testing._internal.distributed.rpc.dist_optimizer_test" [];
"torch.testing._internal.distributed.rpc_utils" -> "torch.testing._internal.distributed.rpc.examples.parameter_server_test" [];
"torch.testing._internal.distributed.rpc_utils" -> "torch.testing._internal.distributed.rpc.examples.reinforcement_learning_rpc_test" [];
"torch.testing._internal.distributed.rpc_utils" -> "torch.testing._internal.distributed.rpc.faulty_agent_rpc_test" [];
"torch.testing._internal.distributed.rpc_utils" -> "torch.testing._internal.distributed.rpc.jit.dist_autograd_test" [];
"torch.testing._internal.distributed.rpc_utils" -> "torch.testing._internal.distributed.rpc.jit.rpc_test" [];
"torch.testing._internal.distributed.rpc_utils" -> "torch.testing._internal.distributed.rpc.jit.rpc_test_faulty" [];
"torch.testing._internal.distributed.ddp_under_dist_autograd_test" -> "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture" [];
"torch.testing._internal.distributed.rpc.dist_autograd_test" -> "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture" [];
"torch.testing._internal.distributed.rpc.dist_optimizer_test" -> "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture" [];
"torch.testing._internal.distributed.rpc.faulty_agent_rpc_test" -> "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture" [];
"torch.testing._internal.distributed.rpc.faulty_rpc_agent_test_fixture" -> "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture" [];
"torch.testing._internal.distributed.rpc.rpc_test" -> "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture" [];
"torch.testing._internal.distributed.rpc.tensorpipe_rpc_agent_test_fixture" -> "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture" [];
"torch.testing._internal.distributed.rpc_utils" -> "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture" [];
"torch.testing._internal.distributed.rpc_utils" -> "torch.testing._internal.distributed.rpc.rpc_test" [];
"torch.testing._internal.common_utils" -> "torch.testing._internal.dynamo_test_failures" [];
"torch.testing._internal.triton_utils" -> "torch.testing._internal.inductor_utils" [];
"torch.testing._internal.common_subclass" -> "torch.testing._internal.logging_tensor" [];
"torch.testing._internal.common_methods_invocations" -> "torch.testing._internal.opinfo" [];
"torch.testing._internal.autograd_function_db" -> "torch.testing._internal.opinfo.core" [];
"torch.testing._internal.common_methods_invocations" -> "torch.testing._internal.opinfo.core" [];
"torch.testing._internal.custom_op_db" -> "torch.testing._internal.opinfo.core" [];
"torch.testing._internal.hop_db" -> "torch.testing._internal.opinfo.core" [];
"torch.testing._internal.opinfo" -> "torch.testing._internal.opinfo.core" [];
"torch.testing._internal.opinfo.refs" -> "torch.testing._internal.opinfo.core" [];
"torch.testing._internal.opinfo" -> "torch.testing._internal.opinfo.definitions" [];
"torch.testing._internal.common_methods_invocations" -> "torch.testing._internal.opinfo.definitions._masked" [];
"torch.testing._internal.opinfo.definitions" -> "torch.testing._internal.opinfo.definitions._masked" [];
"torch.testing._internal.opinfo.definitions" -> "torch.testing._internal.opinfo.definitions.fft" [];
"torch.testing._internal.common_methods_invocations" -> "torch.testing._internal.opinfo.definitions.linalg" [];
"torch.testing._internal.opinfo.definitions" -> "torch.testing._internal.opinfo.definitions.linalg" [];
"torch.testing._internal.opinfo.definitions" -> "torch.testing._internal.opinfo.definitions.signal" [];
"torch.testing._internal.common_methods_invocations" -> "torch.testing._internal.opinfo.definitions.sparse" [];
"torch.testing._internal.common_methods_invocations" -> "torch.testing._internal.opinfo.definitions.special" [];
"torch.testing._internal.opinfo.definitions" -> "torch.testing._internal.opinfo.definitions.special" [];
"torch.testing._internal.common_methods_invocations" -> "torch.testing._internal.opinfo.refs" [];
"torch.testing._internal.common_methods_invocations" -> "torch.testing._internal.opinfo.utils" [];
"torch.testing._internal.opinfo.core" -> "torch.testing._internal.opinfo.utils" [];
"torch.library" -> "torch.testing._internal.optests" [];
"torch.testing._internal.optests.generate_tests" -> "torch.testing._internal.optests" [];
"torch.testing._internal.optests" -> "torch.testing._internal.optests.aot_autograd" [];
"torch.testing._internal.optests" -> "torch.testing._internal.optests.autograd_registration" [];
"torch.testing._internal.optests" -> "torch.testing._internal.optests.fake_tensor" [];
"torch.testing._internal.optests" -> "torch.testing._internal.optests.generate_tests" [];
"torch.testing._internal.optests" -> "torch.testing._internal.optests.make_fx" [];
"torch.testing._internal.optests.aot_autograd" -> "torch.testing._internal.optests.make_fx" [];
"torch.testing._internal.subclasses" -> "torch.testing._internal.two_tensor" [];
"torch.testing" -> "torch.testing._utils" [];
"torch" -> "torch.torch_version" [];
"torch" -> "torch.types" [];
"torch.serialization" -> "torch.types" [];
"torch.storage" -> "torch.types" [];
"torch" -> "torch.utils" [];
"torch.utils._device" -> "torch.utils._contextlib" [];
"torch.utils.cpp_extension" -> "torch.utils._cpp_extension_versioner" [];
"torch.utils._pytree" -> "torch.utils._cxx_pytree" [];
"torch" -> "torch.utils._device" [];
"torch._guards" -> "torch.utils._python_dispatch" [];
"torch._ops" -> "torch.utils._python_dispatch" [];
"torch.utils.checkpoint" -> "torch.utils._python_dispatch" [];
"torch.utils.flop_counter" -> "torch.utils._python_dispatch" [];
"torch._guards" -> "torch.utils._pytree" [];
"torch._meta_registrations" -> "torch.utils._pytree" [];
"torch._ops" -> "torch.utils._pytree" [];
"torch._vmap_internals" -> "torch.utils._pytree" [];
"torch.return_types" -> "torch.utils._pytree" [];
"torch.utils._cxx_pytree" -> "torch.utils._pytree" [];
"torch.utils.checkpoint" -> "torch.utils._pytree" [];
"torch.utils.flop_counter" -> "torch.utils._pytree" [];
"torch.utils.module_tracker" -> "torch.utils._pytree" [];
"torch.utils._sympy.interp" -> "torch.utils._sympy.functions" [];
"torch.utils._sympy.reference" -> "torch.utils._sympy.functions" [];
"torch.utils._sympy.solve" -> "torch.utils._sympy.functions" [];
"torch.utils._sympy.value_ranges" -> "torch.utils._sympy.functions" [];
"torch.utils._sympy.value_ranges" -> "torch.utils._sympy.interp" [];
"torch.utils._sympy.functions" -> "torch.utils._sympy.numbers" [];
"torch.utils._sympy.value_ranges" -> "torch.utils._sympy.numbers" [];
"torch._guards" -> "torch.utils._traceback" [];
"torch.utils" -> "torch.utils.backcompat" [];
"torch.utils" -> "torch.utils.backend_registration" [];
"torch.utils.benchmark.utils.cpp_jit" -> "torch.utils.benchmark.utils._stubs" [];
"torch.utils.benchmark.utils.timer" -> "torch.utils.benchmark.utils._stubs" [];
"torch.utils.benchmark" -> "torch.utils.benchmark.utils.common" [];
"torch.utils.benchmark.utils.compare" -> "torch.utils.benchmark.utils.common" [];
"torch.utils.benchmark.utils.cpp_jit" -> "torch.utils.benchmark.utils.common" [];
"torch.utils.benchmark.utils.timer" -> "torch.utils.benchmark.utils.common" [];
"torch.utils.benchmark" -> "torch.utils.benchmark.utils.compare" [];
"torch.utils.benchmark.utils.timer" -> "torch.utils.benchmark.utils.cpp_jit" [];
"torch.utils.benchmark" -> "torch.utils.benchmark.utils.fuzzer" [];
"torch.utils.benchmark" -> "torch.utils.benchmark.utils.sparse_fuzzer" [];
"torch.utils.benchmark" -> "torch.utils.benchmark.utils.timer" [];
"torch.utils.benchmark" -> "torch.utils.benchmark.utils.valgrind_wrapper.timer_interface" [];
"torch.utils.benchmark.utils.timer" -> "torch.utils.benchmark.utils.valgrind_wrapper.timer_interface" [];
"torch.utils" -> "torch.utils.collect_env" [];
"torch.utils" -> "torch.utils.cpp_backtrace" [];
"torch.utils" -> "torch.utils.data" [];
"torch.utils.data._utils.pin_memory" -> "torch.utils.data._utils" [];
"torch.utils.data._utils.signal_handling" -> "torch.utils.data._utils" [];
"torch.utils.data._utils.worker" -> "torch.utils.data._utils" [];
"torch.utils.data.dataloader" -> "torch.utils.data._utils" [];
"torch.utils.data._utils" -> "torch.utils.data._utils.collate" [];
"torch.utils.data._utils" -> "torch.utils.data._utils.fetch" [];
"torch.utils.data._utils" -> "torch.utils.data._utils.pin_memory" [];
"torch.utils.data._utils" -> "torch.utils.data._utils.signal_handling" [];
"torch.utils.data._utils.worker" -> "torch.utils.data._utils.signal_handling" [];
"torch.utils.data._utils" -> "torch.utils.data._utils.worker" [];
"torch.utils.data" -> "torch.utils.data.dataloader" [];
"torch.utils.data" -> "torch.utils.data.datapipes._decorator" [];
"torch.utils.data.datapipes._typing" -> "torch.utils.data.datapipes._hook_iterator" [];
"torch.utils.data.datapipes.datapipe" -> "torch.utils.data.datapipes._hook_iterator" [];
"torch.utils.data.datapipes._decorator" -> "torch.utils.data.datapipes._typing" [];
"torch.utils.data.datapipes.datapipe" -> "torch.utils.data.datapipes._typing" [];
"torch.utils.data.datapipes" -> "torch.utils.data.datapipes.dataframe" [];
"torch.utils.data.datapipes.dataframe.datapipes" -> "torch.utils.data.datapipes.dataframe.dataframe_wrapper" [];
"torch.utils.data.datapipes.dataframe.structures" -> "torch.utils.data.datapipes.dataframe.dataframe_wrapper" [];
"torch.utils.data.datapipes.dataframe" -> "torch.utils.data.datapipes.dataframe.dataframes" [];
"torch.utils.data.datapipes.dataframe" -> "torch.utils.data.datapipes.dataframe.datapipes" [];
"torch.utils.data.datapipes.dataframe.dataframes" -> "torch.utils.data.datapipes.dataframe.structures" [];
"torch.utils.data" -> "torch.utils.data.datapipes.datapipe" [];
"torch.utils.data.dataloader" -> "torch.utils.data.datapipes.datapipe" [];
"torch.utils.data.datapipes._decorator" -> "torch.utils.data.datapipes.datapipe" [];
"torch.utils.data.graph" -> "torch.utils.data.datapipes.datapipe" [];
"torch.utils.data.datapipes" -> "torch.utils.data.datapipes.iter" [];
"torch.utils.data.datapipes.iter" -> "torch.utils.data.datapipes.iter.callable" [];
"torch.utils.data.datapipes.iter" -> "torch.utils.data.datapipes.iter.combinatorics" [];
"torch.utils.data.datapipes.iter" -> "torch.utils.data.datapipes.iter.combining" [];
"torch.utils.data.datapipes.iter" -> "torch.utils.data.datapipes.iter.filelister" [];
"torch.utils.data.datapipes.iter" -> "torch.utils.data.datapipes.iter.fileopener" [];
"torch.utils.data.datapipes.iter" -> "torch.utils.data.datapipes.iter.grouping" [];
"torch.utils.data.datapipes.iter" -> "torch.utils.data.datapipes.iter.routeddecoder" [];
"torch.utils.data.datapipes.iter" -> "torch.utils.data.datapipes.iter.selecting" [];
"torch.utils.data.datapipes.iter" -> "torch.utils.data.datapipes.iter.sharding" [];
"torch.utils.data.datapipes.iter.grouping" -> "torch.utils.data.datapipes.iter.sharding" [];
"torch.utils.data.graph_settings" -> "torch.utils.data.datapipes.iter.sharding" [];
"torch.utils.data.datapipes.iter" -> "torch.utils.data.datapipes.iter.streamreader" [];
"torch.utils.data.datapipes.iter" -> "torch.utils.data.datapipes.iter.utils" [];
"torch.utils.data.datapipes.iter.filelister" -> "torch.utils.data.datapipes.iter.utils" [];
"torch.utils.data.datapipes" -> "torch.utils.data.datapipes.map" [];
"torch.utils.data.datapipes.map" -> "torch.utils.data.datapipes.map.callable" [];
"torch.utils.data.datapipes.map" -> "torch.utils.data.datapipes.map.combinatorics" [];
"torch.utils.data.datapipes.map" -> "torch.utils.data.datapipes.map.combining" [];
"torch.utils.data.datapipes.map" -> "torch.utils.data.datapipes.map.grouping" [];
"torch.utils.data.datapipes.map" -> "torch.utils.data.datapipes.map.utils" [];
"torch.utils.data.datapipes.datapipe" -> "torch.utils.data.datapipes.utils.common" [];
"torch.utils.data.datapipes.utils.decoder" -> "torch.utils.data.datapipes.utils.common" [];
"torch.utils.data" -> "torch.utils.data.dataset" [];
"torch.utils.data.dataloader" -> "torch.utils.data.dataset" [];
"torch.utils.data.distributed" -> "torch.utils.data.dataset" [];
"torch.utils.data" -> "torch.utils.data.distributed" [];
"torch.utils.data.graph_settings" -> "torch.utils.data.graph" [];
"torch.utils.data.dataloader" -> "torch.utils.data.graph_settings" [];
"torch.utils.data" -> "torch.utils.data.sampler" [];
"torch.utils.data.dataloader" -> "torch.utils.data.sampler" [];
"torch.utils.data.distributed" -> "torch.utils.data.sampler" [];
"torch.utils" -> "torch.utils.deterministic" [];
"torch" -> "torch.utils.dlpack" [];
"torch._tensor" -> "torch.utils.dlpack" [];
"torch.utils.cpp_extension" -> "torch.utils.file_baton" [];
"torch.utils.hipify.cuda_to_hip_mappings" -> "torch.utils.hipify.constants" [];
"torch.utils.hipify.hipify_python" -> "torch.utils.hipify.constants" [];
"torch.utils.hipify.hipify_python" -> "torch.utils.hipify.cuda_to_hip_mappings" [];
"torch.utils.cpp_extension" -> "torch.utils.hipify.hipify_python" [];
"torch.utils.hipify" -> "torch.utils.hipify.version" [];
"torch._tensor" -> "torch.utils.hooks" [];
"torch.utils" -> "torch.utils.hooks" [];
"torch.utils.module_tracker" -> "torch.utils.hooks" [];
"torch.utils.model_dump.__main__" -> "torch.utils.model_dump" [];
"torch.utils.flop_counter" -> "torch.utils.module_tracker" [];
"torch.utils.tensorboard._embedding" -> "torch.utils.tensorboard._convert_np" [];
"torch.utils.tensorboard.summary" -> "torch.utils.tensorboard._convert_np" [];
"torch.utils.tensorboard.writer" -> "torch.utils.tensorboard._convert_np" [];
"torch.utils.tensorboard.writer" -> "torch.utils.tensorboard._embedding" [];
"torch.utils.tensorboard.writer" -> "torch.utils.tensorboard._onnx_graph" [];
"torch.utils.tensorboard._pytorch_graph" -> "torch.utils.tensorboard._proto_graph" [];
"torch.utils.tensorboard.writer" -> "torch.utils.tensorboard._pytorch_graph" [];
"torch.utils.tensorboard._embedding" -> "torch.utils.tensorboard._utils" [];
"torch.utils.tensorboard.summary" -> "torch.utils.tensorboard._utils" [];
"torch.utils.tensorboard.writer" -> "torch.utils.tensorboard._utils" [];
"torch.utils.tensorboard.writer" -> "torch.utils.tensorboard.summary" [];
"torch.utils.tensorboard" -> "torch.utils.tensorboard.writer" [];
"torch.utils" -> "torch.utils.throughput_benchmark" [];
"torch._guards" -> "torch.utils.weak" [];
"torch" -> "torch.xpu" [];
"torch.random" -> "torch.xpu" [];
"torch.xpu.memory" -> "torch.xpu" [];
"torch.xpu.random" -> "torch.xpu" [];
"torch.xpu" -> "torch.xpu._utils" [];
"torch.xpu" -> "torch.xpu.memory" [];
"torch.xpu" -> "torch.xpu.random" [];
"torch.xpu" -> "torch.xpu.streams" [];
}
